// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

#include "go_asm.h"
#include "funcdata.h"
#include "textflag.h"

TEXT Â·__vnumber_entry(SB), NOSPLIT, $104
	NO_LOCAL_POINTERS
	LONG $0xf9058d48; WORD $0xffff; BYTE $0xff  // leaq         $-7(%rip), %rax
	LONG $0x24448948; BYTE $0x08  // movq         %rax, $8(%rsp)
	BYTE $0xc3  // retq         
	WORD $0x0000; BYTE $0x00  // .p2align 4, 0x00
LCPI0_0:
	LONG $0x43300000  // .long 1127219200
	LONG $0x45300000  // .long 1160773632
	LONG $0x00000000  // .long 0
	LONG $0x00000000  // .long 0
LCPI0_1:
	QUAD $0x4330000000000000  // .quad 4841369599423283200
	QUAD $0x4530000000000000  // .quad 4985484787499139072
	  // .p2align 3, 0x00
LCPI0_2:
	QUAD $0x430c6bf526340000  // .quad 4831355200913801216
LCPI0_3:
	QUAD $0xc30c6bf526340000  // .quad -4392016835940974592
	  // .p2align 4, 0x90
_vnumber:
	BYTE $0x55  // pushq        %rbp
	WORD $0x8948; BYTE $0xe5  // movq         %rsp, %rbp
	WORD $0x5741  // pushq        %r15
	WORD $0x5641  // pushq        %r14
	WORD $0x5541  // pushq        %r13
	WORD $0x5441  // pushq        %r12
	BYTE $0x53  // pushq        %rbx
	LONG $0x40ec8348  // subq         $64, %rsp
	WORD $0x8949; BYTE $0xd6  // movq         %rdx, %r14
	WORD $0x8b4c; BYTE $0x07  // movq         (%rdi), %r8
	LONG $0x085f8b4c  // movq         $8(%rdi), %r11
	WORD $0x8b48; BYTE $0x06  // movq         (%rsi), %rax
	LONG $0x20628b4c  // movq         $32(%rdx), %r12
	LONG $0x286a8b4c  // movq         $40(%rdx), %r13
	LONG $0x0902c748; WORD $0x0000; BYTE $0x00  // movq         $9, (%rdx)
	QUAD $0x000000000842c748  // movq         $0, $8(%rdx)
	QUAD $0x000000001042c748  // movq         $0, $16(%rdx)
	WORD $0x8b48; BYTE $0x0e  // movq         (%rsi), %rcx
	LONG $0x184a8948  // movq         %rcx, $24(%rdx)
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x02a8830f; WORD $0x0000  // jae          LBB0_50, $680(%rip)
	LONG $0x00148a41  // movb         (%r8,%rax), %dl
	LONG $0x0001b941; WORD $0x0000  // movl         $1, %r9d
	WORD $0xfa80; BYTE $0x2d  // cmpb         $45, %dl
	LONG $0x0016850f; WORD $0x0000  // jne          LBB0_4, $22(%rip)
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x0289830f; WORD $0x0000  // jae          LBB0_50, $649(%rip)
	LONG $0x00148a41  // movb         (%r8,%rax), %dl
	LONG $0xffffb941; WORD $0xffff  // movl         $-1, %r9d
LBB0_4:
	WORD $0x4a8d; BYTE $0xd0  // leal         $-48(%rdx), %ecx
	WORD $0xf980; BYTE $0x0a  // cmpb         $10, %cl
	LONG $0x000f820f; WORD $0x0000  // jb           LBB0_6, $15(%rip)
LBB0_5:
	WORD $0x8948; BYTE $0x06  // movq         %rax, (%rsi)
	LONG $0xfe06c749; WORD $0xffff; BYTE $0xff  // movq         $-2, (%r14)
	LONG $0x00026ee9; BYTE $0x00  // jmp          LBB0_51, $622(%rip)
LBB0_6:
	WORD $0xfa80; BYTE $0x30  // cmpb         $48, %dl
	LONG $0x0034850f; WORD $0x0000  // jne          LBB0_10, $52(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x00d4830f; WORD $0x0000  // jae          LBB0_21, $212(%rip)
	LONG $0x081c8a41  // movb         (%r8,%rcx), %bl
	WORD $0xc380; BYTE $0xd2  // addb         $-46, %bl
	WORD $0xfb80; BYTE $0x37  // cmpb         $55, %bl
	LONG $0x00c4870f; WORD $0x0000  // ja           LBB0_21, $196(%rip)
	WORD $0xb60f; BYTE $0xfb  // movzbl       %bl, %edi
	QUAD $0x000000800001bb48; WORD $0x0080  // movabsq      $36028797027352577, %rbx
	LONG $0xfba30f48  // btq          %rdi, %rbx
	LONG $0x00ad830f; WORD $0x0000  // jae          LBB0_21, $173(%rip)
LBB0_10:
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x0098830f; WORD $0x0000  // jae          LBB0_20, $152(%rip)
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_12:
	WORD $0xfb83; BYTE $0x12  // cmpl         $18, %ebx
	LONG $0x00178f0f; WORD $0x0000  // jg           LBB0_14, $23(%rip)
	WORD $0xb60f; BYTE $0xd2  // movzbl       %dl, %edx
	LONG $0xbf3c8d4b  // leaq         (%r15,%r15,4), %rdi
	LONG $0x7a7c8d4c; BYTE $0xd0  // leaq         $-48(%rdx,%rdi,2), %r15
	WORD $0xc3ff  // incl         %ebx
	LONG $0x000006e9; BYTE $0x00  // jmp          LBB0_15, $6(%rip)
	LONG $0x90909090  // .p2align 4, 0x90
LBB0_14:
	WORD $0xc1ff  // incl         %ecx
LBB0_15:
	WORD $0x3949; BYTE $0xc3  // cmpq         %rax, %r11
	LONG $0x0068840f; WORD $0x0000  // je           LBB0_22, $104(%rip)
	LONG $0x14b60f41; BYTE $0x00  // movzbl       (%r8,%rax), %edx
	WORD $0x7a8d; BYTE $0xd0  // leal         $-48(%rdx), %edi
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	LONG $0x0aff8040  // cmpb         $10, %dil
	LONG $0xffc0820f; WORD $0xffff  // jb           LBB0_12, $-64(%rip)
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0xc985  // testl        %ecx, %ecx
	LONG $0xc79f0f40  // setg         %dil
	WORD $0xfa80; BYTE $0x2e  // cmpb         $46, %dl
	LONG $0x02de850f; WORD $0x0000  // jne          LBB0_66, $734(%rip)
	LONG $0x0806c749; WORD $0x0000; BYTE $0x00  // movq         $8, (%r14)
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x01a4830f; WORD $0x0000  // jae          LBB0_50, $420(%rip)
	WORD $0x7d89; BYTE $0xc0  // movl         %edi, $-64(%rbp)
	LONG $0x00148a41  // movb         (%r8,%rax), %dl
	WORD $0xc280; BYTE $0xd0  // addb         $-48, %dl
	LONG $0x0008ba41; WORD $0x0000  // movl         $8, %r10d
	WORD $0xfa80; BYTE $0x0a  // cmpb         $10, %dl
	LONG $0xff18830f; WORD $0xffff  // jae          LBB0_5, $-232(%rip)
	LONG $0x000027e9; BYTE $0x00  // jmp          LBB0_24, $39(%rip)
LBB0_20:
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0x00000be9; BYTE $0x00  // jmp          LBB0_23, $11(%rip)
LBB0_21:
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x00017ce9; BYTE $0x00  // jmp          LBB0_51, $380(%rip)
LBB0_22:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
LBB0_23:
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0xc985  // testl        %ecx, %ecx
	WORD $0x9f0f; BYTE $0xc2  // setg         %dl
	WORD $0x5589; BYTE $0xc0  // movl         %edx, $-64(%rbp)
	LONG $0x0009ba41; WORD $0x0000  // movl         $9, %r10d
LBB0_24:
	WORD $0xc985  // testl        %ecx, %ecx
	LONG $0xc84d8944  // movl         %r9d, $-56(%rbp)
	LONG $0x0058850f; WORD $0x0000  // jne          LBB0_33, $88(%rip)
LBB0_25:
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x004f850f; WORD $0x0000  // jne          LBB0_33, $79(%rip)
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x003f830f; WORD $0x0000  // jae          LBB0_31, $63(%rip)
	WORD $0x8941; BYTE $0xc1  // movl         %eax, %r9d
	WORD $0x2945; BYTE $0xd9  // subl         %r11d, %r9d
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0x9090  // .p2align 4, 0x90
LBB0_28:
	LONG $0x003c8041; BYTE $0x30  // cmpb         $48, (%r8,%rax)
	LONG $0x002c850f; WORD $0x0000  // jne          LBB0_32, $44(%rip)
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0xc9ff  // decl         %ecx
	WORD $0x3949; BYTE $0xc3  // cmpq         %rax, %r11
	LONG $0xffe7850f; WORD $0xffff  // jne          LBB0_28, $-25(%rip)
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0x09fa8341  // cmpl         $9, %r10d
	LONG $0xa0758948  // movq         %rsi, $-96(%rbp)
	LONG $0xa85d894c  // movq         %r11, $-88(%rbp)
	LONG $0x0138840f; WORD $0x0000  // je           LBB0_53, $312(%rip)
	LONG $0x000169e9; BYTE $0x00  // jmp          LBB0_57, $361(%rip)
LBB0_31:
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0xdb31  // xorl         %ebx, %ebx
LBB0_32:
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
LBB0_33:
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x0041830f; WORD $0x0000  // jae          LBB0_38, $65(%rip)
	WORD $0xfb83; BYTE $0x12  // cmpl         $18, %ebx
	LONG $0x00388f0f; WORD $0x0000  // jg           LBB0_38, $56(%rip)
	LONG $0x90909090  // .p2align 4, 0x90
LBB0_35:
	LONG $0x14b60f41; BYTE $0x00  // movzbl       (%r8,%rax), %edx
	WORD $0x7a8d; BYTE $0xd0  // leal         $-48(%rdx), %edi
	LONG $0x09ff8040  // cmpb         $9, %dil
	LONG $0x0022870f; WORD $0x0000  // ja           LBB0_38, $34(%rip)
	LONG $0xbf3c8d4b  // leaq         (%r15,%r15,4), %rdi
	LONG $0x7a7c8d4c; BYTE $0xd0  // leaq         $-48(%rdx,%rdi,2), %r15
	WORD $0xc9ff  // decl         %ecx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0xfb83; BYTE $0x11  // cmpl         $17, %ebx
	LONG $0x000b8f0f; WORD $0x0000  // jg           LBB0_38, $11(%rip)
	WORD $0xc3ff  // incl         %ebx
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0xffcc820f; WORD $0xffff  // jb           LBB0_35, $-52(%rip)
LBB0_38:
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x00c1830f; WORD $0x0000  // jae          LBB0_52, $193(%rip)
	LONG $0x001c8a41  // movb         (%r8,%rax), %bl
	WORD $0x538d; BYTE $0xd0  // leal         $-48(%rbx), %edx
	WORD $0xfa80; BYTE $0x09  // cmpb         $9, %dl
	LONG $0x0039870f; WORD $0x0000  // ja           LBB0_44, $57(%rip)
	LONG $0xff538d49  // leaq         $-1(%r11), %rdx
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_41:
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x01c3840f; WORD $0x0000  // je           LBB0_67, $451(%rip)
	LONG $0x5cb60f41; WORD $0x0100  // movzbl       $1(%r8,%rax), %ebx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0x7b8d; BYTE $0xd0  // leal         $-48(%rbx), %edi
	LONG $0x09ff8040  // cmpb         $9, %dil
	LONG $0xffe1860f; WORD $0xffff  // jbe          LBB0_41, $-31(%rip)
	LONG $0x01c045c7; WORD $0x0000; BYTE $0x00  // movl         $1, $-64(%rbp)
LBB0_44:
	WORD $0xcb80; BYTE $0x20  // orb          $32, %bl
	WORD $0xfb80; BYTE $0x65  // cmpb         $101, %bl
	LONG $0x006c850f; WORD $0x0000  // jne          LBB0_52, $108(%rip)
	LONG $0x01508d48  // leaq         $1(%rax), %rdx
	LONG $0x0806c749; WORD $0x0000; BYTE $0x00  // movq         $8, (%r14)
	WORD $0x394c; BYTE $0xda  // cmpq         %r11, %rdx
	LONG $0x003f830f; WORD $0x0000  // jae          LBB0_50, $63(%rip)
	LONG $0x101c8a41  // movb         (%r8,%rdx), %bl
	WORD $0xfb80; BYTE $0x2d  // cmpb         $45, %bl
	LONG $0x000f840f; WORD $0x0000  // je           LBB0_48, $15(%rip)
	LONG $0x0001ba41; WORD $0x0000  // movl         $1, %r10d
	WORD $0xfb80; BYTE $0x2b  // cmpb         $43, %bl
	LONG $0x050b850f; WORD $0x0000  // jne          LBB0_102, $1291(%rip)
LBB0_48:
	LONG $0x02c08348  // addq         $2, %rax
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0x0016830f; WORD $0x0000  // jae          LBB0_50, $22(%rip)
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0xfb80; BYTE $0x2b  // cmpb         $43, %bl
	WORD $0x940f; BYTE $0xc2  // sete         %dl
	LONG $0x12548d44; BYTE $0xff  // leal         $-1(%rdx,%rdx), %r10d
	LONG $0x001c8a41  // movb         (%r8,%rax), %bl
	LONG $0x0004ebe9; BYTE $0x00  // jmp          LBB0_103, $1259(%rip)
LBB0_50:
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	LONG $0xff06c749; WORD $0xffff; BYTE $0xff  // movq         $-1, (%r14)
LBB0_51:
	LONG $0x40c48348  // addq         $64, %rsp
	BYTE $0x5b  // popq         %rbx
	WORD $0x5c41  // popq         %r12
	WORD $0x5d41  // popq         %r13
	WORD $0x5e41  // popq         %r14
	WORD $0x5f41  // popq         %r15
	BYTE $0x5d  // popq         %rbp
	BYTE $0xc3  // retq         
LBB0_52:
	WORD $0x8941; BYTE $0xc9  // movl         %ecx, %r9d
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0x09fa8341  // cmpl         $9, %r10d
	LONG $0xa0758948  // movq         %rsi, $-96(%rbp)
	LONG $0xa85d894c  // movq         %r11, $-88(%rbp)
	LONG $0x0036850f; WORD $0x0000  // jne          LBB0_57, $54(%rip)
LBB0_53:
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0x0026850f; WORD $0x0000  // jne          LBB0_56, $38(%rip)
	QUAD $0x000000000000b848; WORD $0x8000  // movabsq      $-9223372036854775808, %rax
	LONG $0xc84d6348  // movslq       $-56(%rbp), %rcx
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x013d890f; WORD $0x0000  // jns          LBB0_70, $317(%rip)
	WORD $0x894c; BYTE $0xfa  // movq         %r15, %rdx
	WORD $0x2148; BYTE $0xca  // andq         %rcx, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x012e840f; WORD $0x0000  // je           LBB0_70, $302(%rip)
LBB0_56:
	LONG $0x0806c749; WORD $0x0000; BYTE $0x00  // movq         $8, (%r14)
LBB0_57:
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0x34e8c148  // shrq         $52, %rax
	LONG $0x9875894c  // movq         %r14, $-104(%rbp)
	LONG $0x0028840f; WORD $0x0000  // je           LBB0_61, $40(%rip)
LBB0_58:
	LONG $0x5c818d41; WORD $0x0001; BYTE $0x00  // leal         $348(%r9), %eax
	LONG $0x0002b73d; BYTE $0x00  // cmpl         $695, %eax
	LONG $0x0288870f; WORD $0x0000  // ja           LBB0_85, $648(%rip)
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x017c840f; WORD $0x0000  // je           LBB0_76, $380(%rip)
LBB0_60:
	LONG $0xd7bd0f4d  // bsrq         %r15, %r10
	LONG $0x3ff28349  // xorq         $63, %r10
	LONG $0x000175e9; BYTE $0x00  // jmp          LBB0_77, $373(%rip)
LBB0_61:
	LONG $0x6e0f4966; BYTE $0xc7  // movq         %r15, %xmm0
	QUAD $0xfffffc2405620f66  // punpckldq    $-988(%rip), %xmm0  /* LCPI0_0+0(%rip) */
	QUAD $0xfffffc2c055c0f66  // subpd        $-980(%rip), %xmm0  /* LCPI0_1+0(%rip) */
	LONG $0xc8280f66  // movapd       %xmm0, %xmm1
	LONG $0xc8150f66  // unpckhpd     %xmm0, %xmm1
	LONG $0xc8580ff2  // addsd        %xmm0, %xmm1
	LONG $0x7e0f4866; BYTE $0xc8  // movq         %xmm1, %rax
	WORD $0x4d8b; BYTE $0xc8  // movl         $-56(%rbp), %ecx
	WORD $0xcb89  // movl         %ecx, %ebx
	WORD $0xebc1; BYTE $0x1f  // shrl         $31, %ebx
	LONG $0x3fe3c148  // shlq         $63, %rbx
	WORD $0x0948; BYTE $0xc3  // orq          %rax, %rbx
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x1ee0840f; WORD $0x0000  // je           LBB0_507, $7904(%rip)
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0x1ed7840f; WORD $0x0000  // je           LBB0_507, $7895(%rip)
	LONG $0x6e0f4866; BYTE $0xc3  // movq         %rbx, %xmm0
	LONG $0xff418d41  // leal         $-1(%r9), %eax
	WORD $0xf883; BYTE $0x24  // cmpl         $36, %eax
	LONG $0x0065870f; WORD $0x0000  // ja           LBB0_68, $101(%rip)
	LONG $0x17f98341  // cmpl         $23, %r9d
	LONG $0x00c18c0f; WORD $0x0000  // jl           LBB0_71, $193(%rip)
	WORD $0x6349; BYTE $0xc1  // movslq       %r9d, %rax
	LONG $0xf40d8d48; WORD $0x001e; BYTE $0x00  // leaq         $7924(%rip), %rcx  /* _P10_TAB+0(%rip) */
	QUAD $0xffff50c184590ff2; BYTE $0xff  // mulsd        $-176(%rcx,%rax,8), %xmm0
	LONG $0x000016b8; BYTE $0x00  // movl         $22, %eax
	LONG $0x0000a7e9; BYTE $0x00  // jmp          LBB0_72, $167(%rip)
LBB0_66:
	WORD $0x7d89; BYTE $0xc0  // movl         %edi, $-64(%rbp)
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	LONG $0x0009ba41; WORD $0x0000  // movl         $9, %r10d
	WORD $0xc985  // testl        %ecx, %ecx
	LONG $0xc84d8944  // movl         %r9d, $-56(%rbp)
	LONG $0xfd6b840f; WORD $0xffff  // je           LBB0_25, $-661(%rip)
	LONG $0xfffdbee9; BYTE $0xff  // jmp          LBB0_33, $-578(%rip)
LBB0_67:
	LONG $0x01c045c7; WORD $0x0000; BYTE $0x00  // movl         $1, $-64(%rbp)
	WORD $0x8941; BYTE $0xc9  // movl         %ecx, %r9d
	LONG $0x09fa8341  // cmpl         $9, %r10d
	LONG $0xa0758948  // movq         %rsi, $-96(%rbp)
	LONG $0xa85d894c  // movq         %r11, $-88(%rbp)
	LONG $0xfece840f; WORD $0xffff  // je           LBB0_53, $-306(%rip)
	LONG $0xfffeffe9; BYTE $0xff  // jmp          LBB0_57, $-257(%rip)
LBB0_68:
	LONG $0xeaf98341  // cmpl         $-22, %r9d
	LONG $0xff10820f; WORD $0xffff  // jb           LBB0_58, $-240(%rip)
	WORD $0xf741; BYTE $0xd9  // negl         %r9d
	WORD $0x6349; BYTE $0xc1  // movslq       %r9d, %rax
	LONG $0x8c0d8d48; WORD $0x001e; BYTE $0x00  // leaq         $7820(%rip), %rcx  /* _P10_TAB+0(%rip) */
	LONG $0x045e0ff2; BYTE $0xc1  // divsd        (%rcx,%rax,8), %xmm0
	LONG $0x7e0f4866; BYTE $0xc3  // movq         %xmm0, %rbx
	LONG $0x001e3ae9; BYTE $0x00  // jmp          LBB0_507, $7738(%rip)
LBB0_70:
	LONG $0x6e0f4966; BYTE $0xc7  // movq         %r15, %xmm0
	LONG $0xf9af0f4c  // imulq        %rcx, %r15
	QUAD $0xfffffb3c05620f66  // punpckldq    $-1220(%rip), %xmm0  /* LCPI0_0+0(%rip) */
	QUAD $0xfffffb44055c0f66  // subpd        $-1212(%rip), %xmm0  /* LCPI0_1+0(%rip) */
	LONG $0x107e894d  // movq         %r15, $16(%r14)
	LONG $0xc8280f66  // movapd       %xmm0, %xmm1
	LONG $0xc8150f66  // unpckhpd     %xmm0, %xmm1
	LONG $0xc8580ff2  // addsd        %xmm0, %xmm1
	WORD $0x2148; BYTE $0xc8  // andq         %rcx, %rax
	LONG $0x7e0f4866; BYTE $0xc9  // movq         %xmm1, %rcx
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0x084e8949  // movq         %rcx, $8(%r14)
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	LONG $0xfffe3ce9; BYTE $0xff  // jmp          LBB0_51, $-452(%rip)
LBB0_71:
	WORD $0x8944; BYTE $0xc8  // movl         %r9d, %eax
LBB0_72:
	QUAD $0xfffffb22052e0f66  // ucomisd      $-1246(%rip), %xmm0  /* LCPI0_2+0(%rip) */
	LONG $0x002a870f; WORD $0x0000  // ja           LBB0_75, $42(%rip)
	QUAD $0xfffffb1c0d100ff2  // movsd        $-1252(%rip), %xmm1  /* LCPI0_3+0(%rip) */
	LONG $0xc82e0f66  // ucomisd      %xmm0, %xmm1
	LONG $0x0018870f; WORD $0x0000  // ja           LBB0_75, $24(%rip)
	WORD $0xc089  // movl         %eax, %eax
	LONG $0x110d8d48; WORD $0x001e; BYTE $0x00  // leaq         $7697(%rip), %rcx  /* _P10_TAB+0(%rip) */
	LONG $0x04590ff2; BYTE $0xc1  // mulsd        (%rcx,%rax,8), %xmm0
	LONG $0x7e0f4866; BYTE $0xc3  // movq         %xmm0, %rbx
	LONG $0x001dbfe9; BYTE $0x00  // jmp          LBB0_507, $7615(%rip)
LBB0_75:
	LONG $0x5c818d41; WORD $0x0001; BYTE $0x00  // leal         $348(%r9), %eax
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0xfe84850f; WORD $0xffff  // jne          LBB0_60, $-380(%rip)
LBB0_76:
	LONG $0x0040ba41; WORD $0x0000  // movl         $64, %r10d
LBB0_77:
	WORD $0x894c; BYTE $0xfb  // movq         %r15, %rbx
	WORD $0x8944; BYTE $0xd1  // movl         %r10d, %ecx
	WORD $0xd348; BYTE $0xe3  // shlq         %cl, %rbx
	WORD $0xc689  // movl         %eax, %esi
	LONG $0x04e6c148  // shlq         $4, %rsi
	LONG $0x96058d48; WORD $0x001e; BYTE $0x00  // leaq         $7830(%rip), %rax  /* _POW10_M128_TAB+0(%rip) */
	LONG $0x06448b48; BYTE $0x08  // movq         $8(%rsi,%rax), %rax
	LONG $0xb0458948  // movq         %rax, $-80(%rbp)
	WORD $0xf748; BYTE $0xe3  // mulq         %rbx
	WORD $0x8949; BYTE $0xc6  // movq         %rax, %r14
	WORD $0x8949; BYTE $0xd3  // movq         %rdx, %r11
	LONG $0x01ffe281; WORD $0x0000  // andl         $511, %edx
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0049860f; WORD $0x0000  // jbe          LBB0_82, $73(%rip)
	LONG $0x01fffa81; WORD $0x0000  // cmpl         $511, %edx
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_82, $61(%rip)
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	LONG $0x59158d48; WORD $0x001e; BYTE $0x00  // leaq         $7769(%rip), %rdx  /* _POW10_M128_TAB+0(%rip) */
	LONG $0x1624f748  // mulq         (%rsi,%rdx)
	WORD $0x0149; BYTE $0xd6  // addq         %rdx, %r14
	LONG $0x00d38349  // adcq         $0, %r11
	WORD $0x8944; BYTE $0xda  // movl         %r11d, %edx
	LONG $0x01ffe281; WORD $0x0000  // andl         $511, %edx
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0016860f; WORD $0x0000  // jbe          LBB0_82, $22(%rip)
	LONG $0xfffe8349  // cmpq         $-1, %r14
	LONG $0x000c850f; WORD $0x0000  // jne          LBB0_82, $12(%rip)
	LONG $0x01fffa81; WORD $0x0000  // cmpl         $511, %edx
	LONG $0x0077840f; WORD $0x0000  // je           LBB0_85, $119(%rip)
LBB0_82:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0x3fe8c148  // shrq         $63, %rax
	WORD $0x488d; BYTE $0x09  // leal         $9(%rax), %ecx
	WORD $0xd349; BYTE $0xeb  // shrq         %cl, %r11
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	LONG $0x000f850f; WORD $0x0000  // jne          LBB0_84, $15(%rip)
	WORD $0x8944; BYTE $0xd9  // movl         %r11d, %ecx
	WORD $0xe183; BYTE $0x03  // andl         $3, %ecx
	WORD $0xf983; BYTE $0x01  // cmpl         $1, %ecx
	LONG $0x0052840f; WORD $0x0000  // je           LBB0_85, $82(%rip)
LBB0_84:
	LONG $0x6ac96941; WORD $0x0352; BYTE $0x00  // imull        $217706, %r9d, %ecx
	WORD $0xf9c1; BYTE $0x10  // sarl         $16, %ecx
	LONG $0x043fc181; WORD $0x0000  // addl         $1087, %ecx
	WORD $0x634c; BYTE $0xf1  // movslq       %ecx, %r14
	WORD $0x894c; BYTE $0xf2  // movq         %r14, %rdx
	WORD $0x294c; BYTE $0xd2  // subq         %r10, %rdx
	QUAD $0x000000000000ba49; WORD $0x01c0  // movabsq      $126100789566373888, %r10
	LONG $0x01f08348  // xorq         $1, %rax
	WORD $0x2948; BYTE $0xc2  // subq         %rax, %rdx
	WORD $0x8944; BYTE $0xd8  // movl         %r11d, %eax
	WORD $0xe083; BYTE $0x01  // andl         $1, %eax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	LONG $0x01f98348  // cmpq         $1, %rcx
	LONG $0xffda8348  // sbbq         $-1, %rdx
	LONG $0xff5a8d48  // leaq         $-1(%rdx), %rbx
	LONG $0xfdfb8148; WORD $0x0007; BYTE $0x00  // cmpq         $2045, %rbx
	LONG $0x0068860f; WORD $0x0000  // jbe          LBB0_90, $104(%rip)
LBB0_85:
	LONG $0xa0458b48  // movq         $-96(%rbp), %rax
	WORD $0x8b48; BYTE $0x30  // movq         (%rax), %rsi
	LONG $0x30148d4d  // leaq         (%r8,%rsi), %r10
	LONG $0xa84d8b48  // movq         $-88(%rbp), %rcx
	WORD $0x2948; BYTE $0xf1  // subq         %rsi, %rcx
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x02c5840f; WORD $0x0000  // je           LBB0_116, $709(%rip)
	LONG $0x2404c641; BYTE $0x00  // movb         $0, (%r12)
	LONG $0x01fd8349  // cmpq         $1, %r13
	LONG $0x02b6840f; WORD $0x0000  // je           LBB0_116, $694(%rip)
	LONG $0xff4d8d4d  // leaq         $-1(%r13), %r9
	LONG $0x000001bf; BYTE $0x00  // movl         $1, %edi
	LONG $0x20f98349  // cmpq         $32, %r9
	LONG $0x0292820f; WORD $0x0000  // jb           LBB0_115, $658(%rip)
	WORD $0x894c; BYTE $0xcf  // movq         %r9, %rdi
	LONG $0xe0e78348  // andq         $-32, %rdi
	LONG $0xe0578d48  // leaq         $-32(%rdi), %rdx
	WORD $0x8948; BYTE $0xd3  // movq         %rdx, %rbx
	LONG $0x05ebc148  // shrq         $5, %rbx
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
	WORD $0xd889  // movl         %ebx, %eax
	WORD $0xe083; BYTE $0x03  // andl         $3, %eax
	LONG $0x60fa8348  // cmpq         $96, %rdx
	LONG $0x01cf830f; WORD $0x0000  // jae          LBB0_108, $463(%rip)
	WORD $0xdb31  // xorl         %ebx, %ebx
	LONG $0x00021ae9; BYTE $0x00  // jmp          LBB0_110, $538(%rip)
LBB0_90:
	LONG $0x01f98348  // cmpq         $1, %rcx
	WORD $0x02b1  // movb         $2, %cl
	WORD $0xd980; BYTE $0x00  // sbbb         $0, %cl
	WORD $0xd348; BYTE $0xe8  // shrq         %cl, %rax
	LONG $0x34e2c148  // shlq         $52, %rdx
	QUAD $0xffffffffffffb948; WORD $0x000f  // movabsq      $4503599627370495, %rcx
	WORD $0x2148; BYTE $0xc8  // andq         %rcx, %rax
	WORD $0x0948; BYTE $0xd0  // orq          %rdx, %rax
	WORD $0x8948; BYTE $0xc3  // movq         %rax, %rbx
	WORD $0x0948; BYTE $0xfb  // orq          %rdi, %rbx
	WORD $0x4d8b; BYTE $0xc8  // movl         $-56(%rbp), %ecx
	WORD $0xf983; BYTE $0xff  // cmpl         $-1, %ecx
	LONG $0xd8450f48  // cmovneq      %rax, %rbx
	LONG $0x00c07d83  // cmpl         $0, $-64(%rbp)
	LONG $0x1c0a840f; WORD $0x0000  // je           LBB0_507, $7178(%rip)
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	LONG $0x0008840f; WORD $0x0000  // je           LBB0_93, $8(%rip)
	LONG $0xcfbd0f49  // bsrq         %r15, %rcx
	LONG $0x3ff18348  // xorq         $63, %rcx
LBB0_93:
	LONG $0xc04d8948  // movq         %rcx, $-64(%rbp)
	WORD $0xd349; BYTE $0xe7  // shlq         %cl, %r15
	LONG $0xb0458b48  // movq         $-80(%rbp), %rax
	WORD $0xf749; BYTE $0xe7  // mulq         %r15
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	WORD $0x8949; BYTE $0xd1  // movq         %rdx, %r9
	LONG $0x01ffe281; WORD $0x0000  // andl         $511, %edx
	WORD $0x894c; BYTE $0xf9  // movq         %r15, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0049860f; WORD $0x0000  // jbe          LBB0_98, $73(%rip)
	LONG $0x01fffa81; WORD $0x0000  // cmpl         $511, %edx
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_98, $61(%rip)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xb8158d48; WORD $0x001c; BYTE $0x00  // leaq         $7352(%rip), %rdx  /* _POW10_M128_TAB+0(%rip) */
	LONG $0x1624f748  // mulq         (%rsi,%rdx)
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	LONG $0x00d18349  // adcq         $0, %r9
	WORD $0x8944; BYTE $0xca  // movl         %r9d, %edx
	LONG $0x01ffe281; WORD $0x0000  // andl         $511, %edx
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0016860f; WORD $0x0000  // jbe          LBB0_98, $22(%rip)
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x000c850f; WORD $0x0000  // jne          LBB0_98, $12(%rip)
	LONG $0x01fffa81; WORD $0x0000  // cmpl         $511, %edx
	LONG $0xfed6840f; WORD $0xffff  // je           LBB0_85, $-298(%rip)
LBB0_98:
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	LONG $0x3fe8c148  // shrq         $63, %rax
	WORD $0x488d; BYTE $0x09  // leal         $9(%rax), %ecx
	WORD $0xd349; BYTE $0xe9  // shrq         %cl, %r9
	WORD $0x094c; BYTE $0xda  // orq          %r11, %rdx
	LONG $0x000f850f; WORD $0x0000  // jne          LBB0_100, $15(%rip)
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xe183; BYTE $0x03  // andl         $3, %ecx
	WORD $0xf983; BYTE $0x01  // cmpl         $1, %ecx
	LONG $0xfeb1840f; WORD $0xffff  // je           LBB0_85, $-335(%rip)
LBB0_100:
	LONG $0xc0752b4c  // subq         $-64(%rbp), %r14
	LONG $0x01f08348  // xorq         $1, %rax
	WORD $0x2949; BYTE $0xc6  // subq         %rax, %r14
	WORD $0x8944; BYTE $0xc8  // movl         %r9d, %eax
	WORD $0xe083; BYTE $0x01  // andl         $1, %eax
	WORD $0x014c; BYTE $0xc8  // addq         %r9, %rax
	WORD $0x2149; BYTE $0xc2  // andq         %rax, %r10
	LONG $0x01fa8349  // cmpq         $1, %r10
	LONG $0xffde8349  // sbbq         $-1, %r14
	LONG $0xff4e8d49  // leaq         $-1(%r14), %rcx
	LONG $0xfdf98148; WORD $0x0007; BYTE $0x00  // cmpq         $2045, %rcx
	LONG $0xfe81870f; WORD $0xffff  // ja           LBB0_85, $-383(%rip)
	LONG $0x01fa8349  // cmpq         $1, %r10
	WORD $0x02b1  // movb         $2, %cl
	WORD $0xd980; BYTE $0x00  // sbbb         $0, %cl
	WORD $0xd348; BYTE $0xe8  // shrq         %cl, %rax
	LONG $0x34e6c149  // shlq         $52, %r14
	QUAD $0xffffffffffffb948; WORD $0x000f  // movabsq      $4503599627370495, %rcx
	WORD $0x2148; BYTE $0xc8  // andq         %rcx, %rax
	WORD $0x094c; BYTE $0xf0  // orq          %r14, %rax
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0x0948; BYTE $0xf9  // orq          %rdi, %rcx
	LONG $0xffc87d83  // cmpl         $-1, $-56(%rbp)
	LONG $0xc8450f48  // cmovneq      %rax, %rcx
	LONG $0x6e0f4866; BYTE $0xc3  // movq         %rbx, %xmm0
	LONG $0x6e0f4866; BYTE $0xc9  // movq         %rcx, %xmm1
	LONG $0xc12e0f66  // ucomisd      %xmm1, %xmm0
	LONG $0xfe3f850f; WORD $0xffff  // jne          LBB0_85, $-449(%rip)
	LONG $0x1ae58b0f; WORD $0x0000  // jnp          LBB0_507, $6885(%rip)
	LONG $0xfffe34e9; BYTE $0xff  // jmp          LBB0_85, $-460(%rip)
LBB0_102:
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
LBB0_103:
	WORD $0x538d; BYTE $0xd0  // leal         $-48(%rbx), %edx
	WORD $0xfa80; BYTE $0x09  // cmpb         $9, %dl
	LONG $0xf896870f; WORD $0xffff  // ja           LBB0_5, $-1898(%rip)
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x394c; BYTE $0xd8  // cmpq         %r11, %rax
	LONG $0xa0758948  // movq         %rsi, $-96(%rbp)
	LONG $0x0243830f; WORD $0x0000  // jae          LBB0_138, $579(%rip)
	WORD $0x894c; BYTE $0xdf  // movq         %r11, %rdi
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
LBB0_106:
	WORD $0x8944; BYTE $0xce  // movl         %r9d, %esi
	LONG $0x10f98141; WORD $0x0027; BYTE $0x00  // cmpl         $10000, %r9d
	WORD $0x148d; BYTE $0xb6  // leal         (%rsi,%rsi,4), %edx
	WORD $0xb60f; BYTE $0xdb  // movzbl       %bl, %ebx
	LONG $0x534c8d44; BYTE $0xd0  // leal         $-48(%rbx,%rdx,2), %r9d
	LONG $0xce4d0f44  // cmovgel      %esi, %r9d
	WORD $0x3949; BYTE $0xc3  // cmpq         %rax, %r11
	LONG $0x0215840f; WORD $0x0000  // je           LBB0_137, $533(%rip)
	LONG $0x5cb60f41; WORD $0x0100  // movzbl       $1(%r8,%rax), %ebx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0x538d; BYTE $0xd0  // leal         $-48(%rbx), %edx
	WORD $0xfa80; BYTE $0x0a  // cmpb         $10, %dl
	LONG $0xffc9820f; WORD $0xffff  // jb           LBB0_106, $-55(%rip)
	LONG $0x0001fee9; BYTE $0x00  // jmp          LBB0_138, $510(%rip)
LBB0_108:
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0x2948; BYTE $0xda  // subq         %rbx, %rdx
	WORD $0xdb31  // xorl         %ebx, %ebx
	LONG $0xc0570f66  // xorpd        %xmm0, %xmm0
LBB0_109:
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x01  // movupd       %xmm0, $1(%r12,%rbx)
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x11  // movupd       %xmm0, $17(%r12,%rbx)
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x21  // movupd       %xmm0, $33(%r12,%rbx)
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x31  // movupd       %xmm0, $49(%r12,%rbx)
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x41  // movupd       %xmm0, $65(%r12,%rbx)
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x51  // movupd       %xmm0, $81(%r12,%rbx)
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x61  // movupd       %xmm0, $97(%r12,%rbx)
	LONG $0x110f4166; WORD $0x1c44; BYTE $0x71  // movupd       %xmm0, $113(%r12,%rbx)
	LONG $0x80eb8348  // subq         $-128, %rbx
	LONG $0x04c28348  // addq         $4, %rdx
	LONG $0xffba850f; WORD $0xffff  // jne          LBB0_109, $-70(%rip)
LBB0_110:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0028840f; WORD $0x0000  // je           LBB0_113, $40(%rip)
	WORD $0xf748; BYTE $0xd8  // negq         %rax
	LONG $0xc0570f66  // xorpd        %xmm0, %xmm0
LBB0_112:
	WORD $0x8948; BYTE $0xda  // movq         %rbx, %rdx
	LONG $0x01ca8348  // orq          $1, %rdx
	LONG $0x110f4166; WORD $0x1404  // movupd       %xmm0, (%r12,%rdx)
	LONG $0x110f4166; WORD $0x1444; BYTE $0x10  // movupd       %xmm0, $16(%r12,%rdx)
	LONG $0x20c38348  // addq         $32, %rbx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	LONG $0xffdf850f; WORD $0xffff  // jne          LBB0_112, $-33(%rip)
LBB0_113:
	WORD $0x3949; BYTE $0xf9  // cmpq         %rdi, %r9
	LONG $0x0024840f; WORD $0x0000  // je           LBB0_116, $36(%rip)
	LONG $0x01cf8348  // orq          $1, %rdi
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_115:
	LONG $0x3c04c641; BYTE $0x00  // movb         $0, (%r12,%rdi)
	WORD $0xff48; BYTE $0xc7  // incq         %rdi
	WORD $0x3949; BYTE $0xfd  // cmpq         %rdi, %r13
	LONG $0xffef850f; WORD $0xffff  // jne          LBB0_115, $-17(%rip)
LBB0_116:
	WORD $0x8a41; BYTE $0x12  // movb         (%r10), %dl
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0xfa80; BYTE $0x2d  // cmpb         $45, %dl
	LONG $0xc7940f40  // sete         %dil
	WORD $0x3948; BYTE $0xf9  // cmpq         %rdi, %rcx
	LONG $0x00a58e0f; WORD $0x0000  // jle          LBB0_128, $165(%rip)
	LONG $0xc8758948  // movq         %rsi, $-56(%rbp)
	WORD $0x3145; BYTE $0xdb  // xorl         %r11d, %r11d
	WORD $0x5588; BYTE $0xd7  // movb         %dl, $-41(%rbp)
	WORD $0x01b2  // movb         $1, %dl
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0x3145; BYTE $0xf6  // xorl         %r14d, %r14d
	WORD $0xc031  // xorl         %eax, %eax
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x000017e9; BYTE $0x00  // jmp          LBB0_120, $23(%rip)
LBB0_118:
	WORD $0xff41; BYTE $0xcb  // decl         %r11d
	WORD $0xc031  // xorl         %eax, %eax
LBB0_119:
	WORD $0xff48; BYTE $0xc7  // incq         %rdi
	WORD $0x3948; BYTE $0xcf  // cmpq         %rcx, %rdi
	WORD $0x9c0f; BYTE $0xc2  // setl         %dl
	WORD $0x3948; BYTE $0xf9  // cmpq         %rdi, %rcx
	LONG $0x0090840f; WORD $0x0000  // je           LBB0_129, $144(%rip)
LBB0_120:
	LONG $0x1cb60f41; BYTE $0x3a  // movzbl       (%r10,%rdi), %ebx
	WORD $0x738d; BYTE $0xd0  // leal         $-48(%rbx), %esi
	LONG $0x09fe8040  // cmpb         $9, %sil
	LONG $0x0035870f; WORD $0x0000  // ja           LBB0_125, $53(%rip)
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_123, $9(%rip)
	WORD $0xfb80; BYTE $0x30  // cmpb         $48, %bl
	LONG $0xffc6840f; WORD $0xffff  // je           LBB0_118, $-58(%rip)
LBB0_123:
	WORD $0x6349; BYTE $0xc7  // movslq       %r15d, %rax
	WORD $0x3949; BYTE $0xc5  // cmpq         %rax, %r13
	LONG $0x002f860f; WORD $0x0000  // jbe          LBB0_127, $47(%rip)
	LONG $0x041c8841  // movb         %bl, (%r12,%rax)
	WORD $0xff41; BYTE $0xc7  // incl         %r15d
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0xffffb0e9; BYTE $0xff  // jmp          LBB0_119, $-80(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_125:
	WORD $0xfb80; BYTE $0x2e  // cmpb         $46, %bl
	LONG $0x0056850f; WORD $0x0000  // jne          LBB0_130, $86(%rip)
	WORD $0x8941; BYTE $0xc3  // movl         %eax, %r11d
	LONG $0x0001b941; WORD $0x0000  // movl         $1, %r9d
	LONG $0xffff90e9; BYTE $0xff  // jmp          LBB0_119, $-112(%rip)
LBB0_127:
	WORD $0xfb80; BYTE $0x30  // cmpb         $48, %bl
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	LONG $0xf0450f44  // cmovnel      %eax, %r14d
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0xffff7ce9; BYTE $0xff  // jmp          LBB0_119, $-132(%rip)
LBB0_128:
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0xf631  // xorl         %esi, %esi
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x0018e1e9; BYTE $0x00  // jmp          LBB0_506, $6369(%rip)
LBB0_129:
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x0000ece9; BYTE $0x00  // jmp          LBB0_148, $236(%rip)
LBB0_130:
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
	WORD $0xc2f6; BYTE $0x01  // testb        $1, %dl
	LONG $0x003e840f; WORD $0x0000  // je           LBB0_136, $62(%rip)
	WORD $0xcb80; BYTE $0x20  // orb          $32, %bl
	WORD $0xfb80; BYTE $0x65  // cmpb         $101, %bl
	LONG $0xa85d8b48  // movq         $-88(%rbp), %rbx
	LONG $0x002e850f; WORD $0x0000  // jne          LBB0_136, $46(%rip)
	LONG $0x01578d48  // leaq         $1(%rdi), %rdx
	WORD $0xd089  // movl         %edx, %eax
	LONG $0x02048a41  // movb         (%r10,%rax), %al
	WORD $0x2b3c  // cmpb         $43, %al
	LONG $0x003e840f; WORD $0x0000  // je           LBB0_139, $62(%rip)
	WORD $0x2d3c  // cmpb         $45, %al
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	LONG $0x0050850f; WORD $0x0000  // jne          LBB0_140, $80(%rip)
	WORD $0xc783; BYTE $0x02  // addl         $2, %edi
	LONG $0xffffb941; WORD $0xffff  // movl         $-1, %r9d
	WORD $0xfa89  // movl         %edi, %edx
	LONG $0x000046e9; BYTE $0x00  // jmp          LBB0_141, $70(%rip)
LBB0_136:
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x00008fe9; BYTE $0x00  // jmp          LBB0_148, $143(%rip)
LBB0_137:
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
LBB0_138:
	LONG $0xcaaf0f45  // imull        %r10d, %r9d
	WORD $0x0141; BYTE $0xc9  // addl         %ecx, %r9d
	LONG $0xa8458948  // movq         %rax, $-88(%rbp)
	LONG $0xfff90de9; BYTE $0xff  // jmp          LBB0_57, $-1779(%rip)
LBB0_139:
	WORD $0xc783; BYTE $0x02  // addl         $2, %edi
	LONG $0x0001b941; WORD $0x0000  // movl         $1, %r9d
	WORD $0xfa89  // movl         %edi, %edx
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	LONG $0x000010e9; BYTE $0x00  // jmp          LBB0_142, $16(%rip)
LBB0_140:
	LONG $0x0001b941; WORD $0x0000  // movl         $1, %r9d
LBB0_141:
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
LBB0_142:
	WORD $0x6348; BYTE $0xfa  // movslq       %edx, %rdi
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0x3948; BYTE $0xf9  // cmpq         %rdi, %rcx
	LONG $0x00368e0f; WORD $0x0000  // jle          LBB0_147, $54(%rip)
	WORD $0x0148; BYTE $0xf8  // addq         %rdi, %rax
	WORD $0xd231  // xorl         %edx, %edx
LBB0_144:
	LONG $0x270ffa81; WORD $0x0000  // cmpl         $9999, %edx
	LONG $0x00258f0f; WORD $0x0000  // jg           LBB0_147, $37(%rip)
	LONG $0x0cb60f41; BYTE $0x00  // movzbl       (%r8,%rax), %ecx
	WORD $0x718d; BYTE $0xd0  // leal         $-48(%rcx), %esi
	LONG $0x09fe8040  // cmpb         $9, %sil
	LONG $0x0013870f; WORD $0x0000  // ja           LBB0_147, $19(%rip)
	WORD $0x148d; BYTE $0x92  // leal         (%rdx,%rdx,4), %edx
	LONG $0xd051548d  // leal         $-48(%rcx,%rdx,2), %edx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0x3948; BYTE $0xc3  // cmpq         %rax, %rbx
	LONG $0xffcf850f; WORD $0xffff  // jne          LBB0_144, $-49(%rip)
LBB0_147:
	LONG $0xd1af0f41  // imull        %r9d, %edx
	WORD $0x0144; BYTE $0xda  // addl         %r11d, %edx
	WORD $0x8941; BYTE $0xd3  // movl         %edx, %r11d
LBB0_148:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	LONG $0x0021840f; WORD $0x0000  // je           LBB0_151, $33(%rip)
	WORD $0xf631  // xorl         %esi, %esi
	LONG $0x36fb8141; WORD $0x0001; BYTE $0x00  // cmpl         $310, %r11d
	LONG $0x001f8e0f; WORD $0x0000  // jle          LBB0_152, $31(%rip)
	QUAD $0x000000000000b849; WORD $0x7ff0  // movabsq      $9218868437227405312, %r8
	WORD $0x558a; BYTE $0xd7  // movb         $-41(%rbp), %dl
	LONG $0x0017abe9; BYTE $0x00  // jmp          LBB0_506, $6059(%rip)
LBB0_151:
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0xf631  // xorl         %esi, %esi
	WORD $0x558a; BYTE $0xd7  // movb         $-41(%rbp), %dl
	LONG $0x00179ee9; BYTE $0x00  // jmp          LBB0_506, $6046(%rip)
LBB0_152:
	LONG $0xb6fb8141; WORD $0xfffe; BYTE $0xff  // cmpl         $-330, %r11d
	LONG $0x000b8d0f; WORD $0x0000  // jge          LBB0_154, $11(%rip)
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x558a; BYTE $0xd7  // movb         $-41(%rbp), %dl
	LONG $0x001786e9; BYTE $0x00  // jmp          LBB0_506, $6022(%rip)
LBB0_154:
	QUAD $0xffffffffffffba49; WORD $0x0fff  // movabsq      $1152921504606846975, %r10
	WORD $0x8545; BYTE $0xdb  // testl        %r11d, %r11d
	LONG $0x07d58e0f; WORD $0x0000  // jle          LBB0_270, $2005(%rip)
	WORD $0xf631  // xorl         %esi, %esi
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x000014e9; BYTE $0x00  // jmp          LBB0_158, $20(%rip)
LBB0_156:
	WORD $0xc789  // movl         %eax, %edi
LBB0_157:
	LONG $0xc0758b48  // movq         $-64(%rbp), %rsi
	WORD $0x7503; BYTE $0xbc  // addl         $-68(%rbp), %esi
	WORD $0xf889  // movl         %edi, %eax
	WORD $0x8545; BYTE $0xdb  // testl        %r11d, %r11d
	LONG $0x07b48e0f; WORD $0x0000  // jle          LBB0_271, $1972(%rip)
LBB0_158:
	LONG $0xc0758948  // movq         %rsi, $-64(%rbp)
	LONG $0x00001bb9; BYTE $0x00  // movl         $27, %ecx
	LONG $0x08fb8341  // cmpl         $8, %r11d
	LONG $0x000d8f0f; WORD $0x0000  // jg           LBB0_160, $13(%rip)
	WORD $0x8944; BYTE $0xd9  // movl         %r11d, %ecx
	LONG $0xd8158d48; WORD $0x0043; BYTE $0x00  // leaq         $17368(%rip), %rdx  /* _POW_TAB+0(%rip) */
	WORD $0x0c8b; BYTE $0x8a  // movl         (%rdx,%rcx,4), %ecx
LBB0_160:
	WORD $0xc085  // testl        %eax, %eax
	WORD $0x4d89; BYTE $0xbc  // movl         %ecx, $-68(%rbp)
	LONG $0xffc1840f; WORD $0xffff  // je           LBB0_156, $-63(%rip)
	WORD $0x8941; BYTE $0xc9  // movl         %ecx, %r9d
	WORD $0xf741; BYTE $0xd9  // negl         %r9d
	WORD $0xc985  // testl        %ecx, %ecx
	LONG $0xffb3840f; WORD $0xffff  // je           LBB0_156, $-77(%rip)
	LONG $0x0190880f; WORD $0x0000  // js           LBB0_187, $400(%rip)
LBB0_163:
	LONG $0xc3f98341  // cmpl         $-61, %r9d
	LONG $0x00218e0f; WORD $0x0000  // jle          LBB0_167, $33(%rip)
	LONG $0x0003cde9; BYTE $0x00  // jmp          LBB0_219, $973(%rip)
LBB0_164:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc7  // movl         %eax, %r15d
LBB0_165:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
LBB0_166:
	LONG $0x3c498d44  // leal         $60(%rcx), %r9d
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0xf983; BYTE $0x88  // cmpl         $-120, %ecx
	LONG $0x03a28d0f; WORD $0x0000  // jge          LBB0_218, $930(%rip)
LBB0_167:
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0x6348; BYTE $0xf8  // movslq       %eax, %rdi
	WORD $0xf631  // xorl         %esi, %esi
	WORD $0xd231  // xorl         %edx, %edx
	BYTE $0x90  // .p2align 4, 0x90
LBB0_168:
	WORD $0x3948; BYTE $0xfe  // cmpq         %rdi, %rsi
	LONG $0x00278d0f; WORD $0x0000  // jge          LBB0_170, $39(%rip)
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	LONG $0x1cbe0f49; BYTE $0x34  // movsbq       (%r12,%rsi), %rbx
	LONG $0x53548d48; BYTE $0xd0  // leaq         $-48(%rbx,%rdx,2), %rdx
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	LONG $0x015a8d49  // leaq         $1(%r10), %rbx
	WORD $0x3948; BYTE $0xda  // cmpq         %rbx, %rdx
	LONG $0xffd9820f; WORD $0xffff  // jb           LBB0_168, $-39(%rip)
	LONG $0x00002ae9; BYTE $0x00  // jmp          LBB0_172, $42(%rip)
	LONG $0x90909090  // .p2align 4, 0x90
LBB0_170:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0119840f; WORD $0x0000  // je           LBB0_185, $281(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_171:
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	WORD $0xc6ff  // incl         %esi
	LONG $0x017a8d49  // leaq         $1(%r10), %rdi
	WORD $0x3948; BYTE $0xfa  // cmpq         %rdi, %rdx
	LONG $0xffea820f; WORD $0xffff  // jb           LBB0_171, $-22(%rip)
LBB0_172:
	WORD $0x2941; BYTE $0xf3  // subl         %esi, %r11d
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0xc639  // cmpl         %eax, %esi
	LONG $0x00498d0f; WORD $0x0000  // jge          LBB0_177, $73(%rip)
	WORD $0x6348; BYTE $0xc6  // movslq       %esi, %rax
	WORD $0x6349; BYTE $0xf7  // movslq       %r15d, %rsi
	LONG $0x043c8d49  // leaq         (%r12,%rax), %rdi
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	  // .p2align 4, 0x90
LBB0_174:
	WORD $0x8948; BYTE $0xd3  // movq         %rdx, %rbx
	LONG $0x3cebc148  // shrq         $60, %rbx
	WORD $0x214c; BYTE $0xd2  // andq         %r10, %rdx
	WORD $0xcb80; BYTE $0x30  // orb          $48, %bl
	LONG $0x3c1c8843  // movb         %bl, (%r12,%r15)
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	LONG $0x1cbe0f4a; BYTE $0x3f  // movsbq       (%rdi,%r15), %rbx
	LONG $0x53548d48; BYTE $0xd0  // leaq         $-48(%rbx,%rdx,2), %rdx
	LONG $0x385c8d4a; BYTE $0x01  // leaq         $1(%rax,%r15), %rbx
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	WORD $0x3948; BYTE $0xf3  // cmpq         %rsi, %rbx
	LONG $0xffd08c0f; WORD $0xffff  // jl           LBB0_174, $-48(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x005f840f; WORD $0x0000  // je           LBB0_181, $95(%rip)
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
LBB0_177:
	WORD $0x8941; BYTE $0xff  // movl         %edi, %r15d
	LONG $0x000023e9; BYTE $0x00  // jmp          LBB0_179, $35(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090  // .p2align 4, 0x90
LBB0_178:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xf0450f45  // cmovnel      %r8d, %r14d
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0031840f; WORD $0x0000  // je           LBB0_181, $49(%rip)
LBB0_179:
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x3ce8c148  // shrq         $60, %rax
	WORD $0x214c; BYTE $0xd2  // andq         %r10, %rdx
	WORD $0x6349; BYTE $0xf7  // movslq       %r15d, %rsi
	WORD $0x3949; BYTE $0xf5  // cmpq         %rsi, %r13
	LONG $0xffd3860f; WORD $0xffff  // jbe          LBB0_178, $-45(%rip)
	WORD $0x300c  // orb          $48, %al
	LONG $0x34048841  // movb         %al, (%r12,%rsi)
	WORD $0xc6ff  // incl         %esi
	WORD $0x8941; BYTE $0xf7  // movl         %esi, %r15d
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffcf850f; WORD $0xffff  // jne          LBB0_179, $-49(%rip)
LBB0_181:
	WORD $0xff41; BYTE $0xc3  // incl         %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xfeca8e0f; WORD $0xffff  // jle          LBB0_165, $-310(%rip)
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0xfec2850f; WORD $0xffff  // jne          LBB0_166, $-318(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_183:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0xfe9f8e0f; WORD $0xffff  // jle          LBB0_164, $-353(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_183, $-29(%rip)
	LONG $0xfffe93e9; BYTE $0xff  // jmp          LBB0_166, $-365(%rip)
LBB0_185:
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0xfffe8be9; BYTE $0xff  // jmp          LBB0_166, $-373(%rip)
LBB0_187:
	WORD $0xf983; BYTE $0xc3  // cmpl         $-61, %ecx
	LONG $0x03be8f0f; WORD $0x0000  // jg           LBB0_238, $958(%rip)
	LONG $0x463d8d48; WORD $0x0042; BYTE $0x00  // leaq         $16966(%rip), %rdi  /* _LSHIFT_TAB+0(%rip) */
	LONG $0x00001ee9; BYTE $0x00  // jmp          LBB0_192, $30(%rip)
LBB0_189:
	LONG $0x3a3d8d48; WORD $0x0042; BYTE $0x00  // leaq         $16954(%rip), %rdi  /* _LSHIFT_TAB+0(%rip) */
LBB0_190:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
LBB0_191:
	LONG $0xc44b8d44  // leal         $-60(%rbx), %r9d
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0xfb83; BYTE $0x78  // cmpl         $120, %ebx
	LONG $0x03858e0f; WORD $0x0000  // jle          LBB0_237, $901(%rip)
LBB0_192:
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
	WORD $0x8944; BYTE $0xcb  // movl         %r9d, %ebx
	WORD $0x6348; BYTE $0xf0  // movslq       %eax, %rsi
	WORD $0xf685  // testl        %esi, %esi
	LONG $0x0045840f; WORD $0x0000  // je           LBB0_198, $69(%rip)
	WORD $0x38b2  // movb         $56, %dl
	WORD $0xc931  // xorl         %ecx, %ecx
	QUAD $0x9090909090909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_194:
	LONG $0x0013b941; WORD $0x0000  // movl         $19, %r9d
	LONG $0x2af98348  // cmpq         $42, %rcx
	LONG $0x002c840f; WORD $0x0000  // je           LBB0_199, $44(%rip)
	LONG $0x0c143841  // cmpb         %dl, (%r12,%rcx)
	LONG $0x01b8850f; WORD $0x0000  // jne          LBB0_216, $440(%rip)
	QUAD $0x000018653994b60f  // movzbl       $6245(%rcx,%rdi), %edx
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	WORD $0x3948; BYTE $0xce  // cmpq         %rcx, %rsi
	LONG $0xffd2850f; WORD $0xffff  // jne          LBB0_194, $-46(%rip)
	WORD $0xd284  // testb        %dl, %dl
	LONG $0x0006840f; WORD $0x0000  // je           LBB0_199, $6(%rip)
LBB0_198:
	LONG $0x0012b941; WORD $0x0000  // movl         $18, %r9d
LBB0_199:
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x00b78e0f; WORD $0x0000  // jle          LBB0_207, $183(%rip)
	LONG $0xb05d8948  // movq         %rbx, $-80(%rbp)
	LONG $0xc85d894c  // movq         %r11, $-56(%rbp)
	WORD $0x0144; BYTE $0xc8  // addl         %r9d, %eax
	WORD $0x9848  // cltq         
	WORD $0x8948; BYTE $0xc3  // movq         %rax, %rbx
	LONG $0x20e3c148  // shlq         $32, %rbx
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	WORD $0xc931  // xorl         %ecx, %ecx
	LONG $0x000030e9; BYTE $0x00  // jmp          LBB0_203, $48(%rip)
	QUAD $0x9090909090909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_201:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xf0450f45  // cmovnel      %r8d, %r14d
LBB0_202:
	QUAD $0xffff00000000b848; WORD $0xffff  // movabsq      $-4294967296, %rax
	WORD $0x0148; BYTE $0xc3  // addq         %rax, %rbx
	LONG $0xff438d49  // leaq         $-1(%r11), %rax
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x01fe8348  // cmpq         $1, %rsi
	LONG $0x00498e0f; WORD $0x0000  // jle          LBB0_205, $73(%rip)
LBB0_203:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0x7cb60f41; WORD $0xfe34  // movzbl       $-2(%r12,%rsi), %edi
	LONG $0x3ce7c148  // shlq         $60, %rdi
	WORD $0x0148; BYTE $0xcf  // addq         %rcx, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	QUAD $0xcccccccccccdb948; WORD $0xcccc  // movabsq      $-3689348814741910323, %rcx
	WORD $0xf748; BYTE $0xe1  // mulq         %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0x03e9c148  // shrq         $3, %rcx
	LONG $0x09048d48  // leaq         (%rcx,%rcx), %rax
	LONG $0x80148d48  // leaq         (%rax,%rax,4), %rdx
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x2948; BYTE $0xd0  // subq         %rdx, %rax
	WORD $0x394d; BYTE $0xeb  // cmpq         %r13, %r11
	LONG $0xff9d830f; WORD $0xffff  // jae          LBB0_201, $-99(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x1c048843  // movb         %al, (%r12,%r11)
	LONG $0xffff99e9; BYTE $0xff  // jmp          LBB0_202, $-103(%rip)
LBB0_205:
	LONG $0x0aff8348  // cmpq         $10, %rdi
	LONG $0x001e830f; WORD $0x0000  // jae          LBB0_208, $30(%rip)
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
	LONG $0xb05d8b48  // movq         $-80(%rbp), %rbx
	LONG $0x000085e9; BYTE $0x00  // jmp          LBB0_212, $133(%rip)
LBB0_207:
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
	LONG $0x00007ae9; BYTE $0x00  // jmp          LBB0_212, $122(%rip)
LBB0_208:
	WORD $0x6349; BYTE $0xf3  // movslq       %r11d, %rsi
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
	LONG $0xb05d8b48  // movq         $-80(%rbp), %rbx
	LONG $0x000018e9; BYTE $0x00  // jmp          LBB0_210, $24(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_209:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xf0450f45  // cmovnel      %r8d, %r14d
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x09f98348  // cmpq         $9, %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0x0049860f; WORD $0x0000  // jbe          LBB0_212, $73(%rip)
LBB0_210:
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	QUAD $0xcccccccccccdba48; WORD $0xcccc  // movabsq      $-3689348814741910323, %rdx
	WORD $0xf748; BYTE $0xe2  // mulq         %rdx
	LONG $0x03eac148  // shrq         $3, %rdx
	LONG $0x12048d48  // leaq         (%rdx,%rdx), %rax
	LONG $0x803c8d48  // leaq         (%rax,%rax,4), %rdi
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x2948; BYTE $0xf8  // subq         %rdi, %rax
	WORD $0x394c; BYTE $0xee  // cmpq         %r13, %rsi
	LONG $0xffbe830f; WORD $0xffff  // jae          LBB0_209, $-66(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x34048841  // movb         %al, (%r12,%rsi)
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x09f98348  // cmpq         $9, %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0xffbf870f; WORD $0xffff  // ja           LBB0_210, $-65(%rip)
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_212:
	WORD $0x0145; BYTE $0xcf  // addl         %r9d, %r15d
	WORD $0x634d; BYTE $0xff  // movslq       %r15d, %r15
	WORD $0x394d; BYTE $0xfd  // cmpq         %r15, %r13
	LONG $0xfd460f45  // cmovbel      %r13d, %r15d
	WORD $0x0145; BYTE $0xcb  // addl         %r9d, %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xfe268e0f; WORD $0xffff  // jle          LBB0_189, $-474(%rip)
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0x573d8d48; WORD $0x0040; BYTE $0x00  // leaq         $16471(%rip), %rdi  /* _LSHIFT_TAB+0(%rip) */
	LONG $0xfe1e850f; WORD $0xffff  // jne          LBB0_191, $-482(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_214:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x00238e0f; WORD $0x0000  // jle          LBB0_217, $35(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_214, $-29(%rip)
	LONG $0xfffdfbe9; BYTE $0xff  // jmp          LBB0_191, $-517(%rip)
LBB0_216:
	LONG $0xfe5e8c0f; WORD $0xffff  // jl           LBB0_198, $-418(%rip)
	LONG $0xfffe5fe9; BYTE $0xff  // jmp          LBB0_199, $-417(%rip)
LBB0_217:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc7  // movl         %eax, %r15d
	LONG $0xfffddfe9; BYTE $0xff  // jmp          LBB0_190, $-545(%rip)
LBB0_218:
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xfbd3840f; WORD $0xffff  // je           LBB0_157, $-1069(%rip)
LBB0_219:
	WORD $0xf741; BYTE $0xd9  // negl         %r9d
	WORD $0x6348; BYTE $0xf0  // movslq       %eax, %rsi
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0xd231  // xorl         %edx, %edx
	  // .p2align 4, 0x90
LBB0_220:
	WORD $0x3948; BYTE $0xf7  // cmpq         %rsi, %rdi
	LONG $0x01308d0f; WORD $0x0000  // jge          LBB0_234, $304(%rip)
	LONG $0x920c8d48  // leaq         (%rdx,%rdx,4), %rcx
	LONG $0x14be0f49; BYTE $0x3c  // movsbq       (%r12,%rdi), %rdx
	LONG $0x4a548d48; BYTE $0xd0  // leaq         $-48(%rdx,%rcx,2), %rdx
	WORD $0xff48; BYTE $0xc7  // incq         %rdi
	WORD $0x8948; BYTE $0xd3  // movq         %rdx, %rbx
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xeb  // shrq         %cl, %rbx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xffd4840f; WORD $0xffff  // je           LBB0_220, $-44(%rip)
LBB0_222:
	LONG $0xffc6c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rsi
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xe6  // shlq         %cl, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0xc739  // cmpl         %eax, %edi
	LONG $0x00558d0f; WORD $0x0000  // jge          LBB0_226, $85(%rip)
	LONG $0xc85d894c  // movq         %r11, $-56(%rbp)
	WORD $0x634c; BYTE $0xdf  // movslq       %edi, %r11
	WORD $0x634d; BYTE $0xc7  // movslq       %r15d, %r8
	LONG $0x1c3c8d4f  // leaq         (%r12,%r11), %r15
	WORD $0xdb31  // xorl         %ebx, %ebx
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_224:
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xe8  // shrq         %cl, %rax
	WORD $0x2148; BYTE $0xf2  // andq         %rsi, %rdx
	WORD $0x3004  // addb         $48, %al
	LONG $0x1c048841  // movb         %al, (%r12,%rbx)
	LONG $0x92048d48  // leaq         (%rdx,%rdx,4), %rax
	LONG $0x0cbe0f49; BYTE $0x1f  // movsbq       (%r15,%rbx), %rcx
	LONG $0x41548d48; BYTE $0xd0  // leaq         $-48(%rcx,%rax,2), %rdx
	LONG $0x1b448d49; BYTE $0x01  // leaq         $1(%r11,%rbx), %rax
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
	WORD $0x394c; BYTE $0xc0  // cmpq         %r8, %rax
	LONG $0xffcf8c0f; WORD $0xffff  // jl           LBB0_224, $-49(%rip)
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
LBB0_226:
	WORD $0x2941; BYTE $0xfb  // subl         %edi, %r11d
	WORD $0x8941; BYTE $0xdf  // movl         %ebx, %r15d
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	WORD $0x7d8b; BYTE $0xbc  // movl         $-68(%rbp), %edi
	LONG $0x001c850f; WORD $0x0000  // jne          LBB0_228, $28(%rip)
	LONG $0x00004ae9; BYTE $0x00  // jmp          LBB0_230, $74(%rip)
LBB0_227:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xf0450f45  // cmovnel      %r8d, %r14d
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0033840f; WORD $0x0000  // je           LBB0_230, $51(%rip)
LBB0_228:
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xe8  // shrq         %cl, %rax
	WORD $0x2148; BYTE $0xf2  // andq         %rsi, %rdx
	WORD $0x6349; BYTE $0xcf  // movslq       %r15d, %rcx
	WORD $0x3949; BYTE $0xcd  // cmpq         %rcx, %r13
	LONG $0xffd1860f; WORD $0xffff  // jbe          LBB0_227, $-47(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x0c048841  // movb         %al, (%r12,%rcx)
	WORD $0xc1ff  // incl         %ecx
	WORD $0x8941; BYTE $0xcf  // movl         %ecx, %r15d
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffcd850f; WORD $0xffff  // jne          LBB0_228, $-51(%rip)
LBB0_230:
	WORD $0xff41; BYTE $0xc3  // incl         %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0x02448e0f; WORD $0x0000  // jle          LBB0_264, $580(%rip)
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0x0242850f; WORD $0x0000  // jne          LBB0_265, $578(%rip)
LBB0_232:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x02268e0f; WORD $0x0000  // jle          LBB0_263, $550(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_232, $-29(%rip)
	LONG $0x000220e9; BYTE $0x00  // jmp          LBB0_265, $544(%rip)
LBB0_234:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x013c840f; WORD $0x0000  // je           LBB0_253, $316(%rip)
LBB0_235:
	WORD $0x8948; BYTE $0xd6  // movq         %rdx, %rsi
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xee  // shrq         %cl, %rsi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xfed8850f; WORD $0xffff  // jne          LBB0_222, $-296(%rip)
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	LONG $0x92148d48  // leaq         (%rdx,%rdx,4), %rdx
	WORD $0xc7ff  // incl         %edi
	LONG $0xffffe0e9; BYTE $0xff  // jmp          LBB0_235, $-32(%rip)
LBB0_237:
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xfa58840f; WORD $0xffff  // je           LBB0_157, $-1448(%rip)
LBB0_238:
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	LONG $0x68f16b48  // imulq        $104, %rcx, %rsi
	LONG $0x813d8d48; WORD $0x003e; BYTE $0x00  // leaq         $16001(%rip), %rdi  /* _LSHIFT_TAB+0(%rip) */
	WORD $0x1c8b; BYTE $0x3e  // movl         (%rsi,%rdi), %ebx
	WORD $0x634c; BYTE $0xc0  // movslq       %eax, %r8
	LONG $0x043e548a  // movb         $4(%rsi,%rdi), %dl
	WORD $0x8545; BYTE $0xc0  // testl        %r8d, %r8d
	LONG $0x0029840f; WORD $0x0000  // je           LBB0_243, $41(%rip)
	LONG $0x3e748d48; BYTE $0x05  // leaq         $5(%rsi,%rdi), %rsi
	WORD $0xff31  // xorl         %edi, %edi
LBB0_240:
	WORD $0xd284  // testb        %dl, %dl
	LONG $0x0024840f; WORD $0x0000  // je           LBB0_245, $36(%rip)
	LONG $0x3c143841  // cmpb         %dl, (%r12,%rdi)
	LONG $0x01b6850f; WORD $0x0000  // jne          LBB0_266, $438(%rip)
	LONG $0x3e14b60f  // movzbl       (%rsi,%rdi), %edx
	WORD $0xff48; BYTE $0xc7  // incq         %rdi
	WORD $0x3949; BYTE $0xf8  // cmpq         %rdi, %r8
	LONG $0xffde850f; WORD $0xffff  // jne          LBB0_240, $-34(%rip)
LBB0_243:
	WORD $0xd284  // testb        %dl, %dl
	LONG $0x0002840f; WORD $0x0000  // je           LBB0_245, $2(%rip)
LBB0_244:
	WORD $0xcbff  // decl         %ebx
LBB0_245:
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x00bb8e0f; WORD $0x0000  // jle          LBB0_254, $187(%rip)
	LONG $0xc85d894c  // movq         %r11, $-56(%rbp)
	WORD $0x5d89; BYTE $0xb0  // movl         %ebx, $-80(%rbp)
	WORD $0xd801  // addl         %ebx, %eax
	WORD $0x9848  // cltq         
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	LONG $0x20e6c148  // shlq         $32, %rsi
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0xff49; BYTE $0xc0  // incq         %r8
	WORD $0xff31  // xorl         %edi, %edi
	LONG $0x00002ae9; BYTE $0x00  // jmp          LBB0_249, $42(%rip)
LBB0_247:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	LONG $0xf0450f44  // cmovnel      %eax, %r14d
LBB0_248:
	QUAD $0xffff00000000b848; WORD $0xffff  // movabsq      $-4294967296, %rax
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xff438d49  // leaq         $-1(%r11), %rax
	WORD $0xff49; BYTE $0xc8  // decq         %r8
	LONG $0x01f88349  // cmpq         $1, %r8
	LONG $0x004c8e0f; WORD $0x0000  // jle          LBB0_251, $76(%rip)
LBB0_249:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0x5cbe0f4b; WORD $0xfe04  // movsbq       $-2(%r12,%r8), %rbx
	LONG $0xd0c38348  // addq         $-48, %rbx
	WORD $0xd348; BYTE $0xe3  // shlq         %cl, %rbx
	WORD $0x0148; BYTE $0xfb  // addq         %rdi, %rbx
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	QUAD $0xcccccccccccdba48; WORD $0xcccc  // movabsq      $-3689348814741910323, %rdx
	WORD $0xf748; BYTE $0xe2  // mulq         %rdx
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x03efc148  // shrq         $3, %rdi
	LONG $0x3f048d48  // leaq         (%rdi,%rdi), %rax
	LONG $0x80148d48  // leaq         (%rax,%rax,4), %rdx
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	WORD $0x2948; BYTE $0xd0  // subq         %rdx, %rax
	WORD $0x394d; BYTE $0xeb  // cmpq         %r13, %r11
	LONG $0xff95830f; WORD $0xffff  // jae          LBB0_247, $-107(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x1c048843  // movb         %al, (%r12,%r11)
	LONG $0xffff96e9; BYTE $0xff  // jmp          LBB0_248, $-106(%rip)
LBB0_251:
	LONG $0x0afb8348  // cmpq         $10, %rbx
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
	LONG $0x0021830f; WORD $0x0000  // jae          LBB0_255, $33(%rip)
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	WORD $0x5d8b; BYTE $0xb0  // movl         $-80(%rbp), %ebx
	LONG $0x00007fe9; BYTE $0x00  // jmp          LBB0_259, $127(%rip)
LBB0_253:
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0xff31  // xorl         %edi, %edi
	LONG $0xfff941e9; BYTE $0xff  // jmp          LBB0_157, $-1727(%rip)
LBB0_254:
	LONG $0x0001b841; WORD $0x0000  // movl         $1, %r8d
	LONG $0x00006ae9; BYTE $0x00  // jmp          LBB0_259, $106(%rip)
LBB0_255:
	WORD $0x6349; BYTE $0xcb  // movslq       %r11d, %rcx
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	WORD $0x5d8b; BYTE $0xb0  // movl         $-80(%rbp), %ebx
	LONG $0x000017e9; BYTE $0x00  // jmp          LBB0_257, $23(%rip)
LBB0_256:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xf0450f45  // cmovnel      %r8d, %r14d
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	LONG $0x09ff8348  // cmpq         $9, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x0041860f; WORD $0x0000  // jbe          LBB0_259, $65(%rip)
LBB0_257:
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	QUAD $0xcccccccccccdba48; WORD $0xcccc  // movabsq      $-3689348814741910323, %rdx
	WORD $0xf748; BYTE $0xe2  // mulq         %rdx
	LONG $0x03eac148  // shrq         $3, %rdx
	LONG $0x12048d48  // leaq         (%rdx,%rdx), %rax
	LONG $0x80348d48  // leaq         (%rax,%rax,4), %rsi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x2948; BYTE $0xf0  // subq         %rsi, %rax
	WORD $0x394c; BYTE $0xe9  // cmpq         %r13, %rcx
	LONG $0xffbe830f; WORD $0xffff  // jae          LBB0_256, $-66(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x0c048841  // movb         %al, (%r12,%rcx)
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	LONG $0x09ff8348  // cmpq         $9, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0xffbf870f; WORD $0xffff  // ja           LBB0_257, $-65(%rip)
LBB0_259:
	WORD $0x0141; BYTE $0xdf  // addl         %ebx, %r15d
	WORD $0x634d; BYTE $0xff  // movslq       %r15d, %r15
	WORD $0x394d; BYTE $0xfd  // cmpq         %r15, %r13
	LONG $0xfd460f45  // cmovbel      %r13d, %r15d
	WORD $0x0141; BYTE $0xdb  // addl         %ebx, %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0x005b8e0f; WORD $0x0000  // jle          LBB0_268, $91(%rip)
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0x0053850f; WORD $0x0000  // jne          LBB0_269, $83(%rip)
LBB0_261:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x003d8e0f; WORD $0x0000  // jle          LBB0_267, $61(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_261, $-29(%rip)
	LONG $0x000031e9; BYTE $0x00  // jmp          LBB0_269, $49(%rip)
LBB0_263:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc7  // movl         %eax, %r15d
LBB0_264:
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0x0c04840f; WORD $0x0000  // je           LBB0_444, $3076(%rip)
LBB0_265:
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	LONG $0xfff868e9; BYTE $0xff  // jmp          LBB0_157, $-1944(%rip)
LBB0_266:
	LONG $0xfe5c8c0f; WORD $0xffff  // jl           LBB0_244, $-420(%rip)
	LONG $0xfffe59e9; BYTE $0xff  // jmp          LBB0_245, $-423(%rip)
LBB0_267:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc7  // movl         %eax, %r15d
LBB0_268:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
LBB0_269:
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xf842890f; WORD $0xffff  // jns          LBB0_157, $-1982(%rip)
	LONG $0xfff88ee9; BYTE $0xff  // jmp          LBB0_163, $-1906(%rip)
LBB0_270:
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
LBB0_271:
	LONG $0x6a058d4c; WORD $0x003c; BYTE $0x00  // leaq         $15466(%rip), %r8  /* _LSHIFT_TAB+0(%rip) */
	LONG $0x00000be9; BYTE $0x00  // jmp          LBB0_274, $11(%rip)
LBB0_272:
	WORD $0xf889  // movl         %edi, %eax
LBB0_273:
	LONG $0xc0758b48  // movq         $-64(%rbp), %rsi
	WORD $0x752b; BYTE $0xb0  // subl         $-80(%rbp), %esi
	WORD $0xc789  // movl         %eax, %edi
LBB0_274:
	WORD $0x8545; BYTE $0xdb  // testl        %r11d, %r11d
	LONG $0x0016880f; WORD $0x0000  // js           LBB0_277, $22(%rip)
	LONG $0x07cd850f; WORD $0x0000  // jne          LBB0_389, $1997(%rip)
	LONG $0x243c8041; BYTE $0x35  // cmpb         $53, (%r12)
	LONG $0x00148c0f; WORD $0x0000  // jl           LBB0_278, $20(%rip)
	LONG $0x0007bde9; BYTE $0x00  // jmp          LBB0_389, $1981(%rip)
LBB0_277:
	LONG $0x00001bb8; BYTE $0x00  // movl         $27, %eax
	LONG $0xf8fb8341  // cmpl         $-8, %r11d
	LONG $0x00118c0f; WORD $0x0000  // jl           LBB0_279, $17(%rip)
LBB0_278:
	WORD $0x8944; BYTE $0xd8  // movl         %r11d, %eax
	WORD $0xd8f7  // negl         %eax
	WORD $0x9848  // cltq         
	LONG $0xee0d8d48; WORD $0x003b; BYTE $0x00  // leaq         $15342(%rip), %rcx  /* _POW_TAB+0(%rip) */
	WORD $0x048b; BYTE $0x81  // movl         (%rcx,%rax,4), %eax
LBB0_279:
	WORD $0xff85  // testl        %edi, %edi
	LONG $0xc0758948  // movq         %rsi, $-64(%rbp)
	WORD $0x4589; BYTE $0xb0  // movl         %eax, $-80(%rbp)
	LONG $0xffa7840f; WORD $0xffff  // je           LBB0_272, $-89(%rip)
	WORD $0xc085  // testl        %eax, %eax
	LONG $0xff9f840f; WORD $0xffff  // je           LBB0_272, $-97(%rip)
	LONG $0x023b8e0f; WORD $0x0000  // jle          LBB0_311, $571(%rip)
	WORD $0x8941; BYTE $0xc1  // movl         %eax, %r9d
	WORD $0xf883; BYTE $0x3d  // cmpl         $61, %eax
	LONG $0x00218d0f; WORD $0x0000  // jge          LBB0_286, $33(%rip)
	LONG $0x000241e9; BYTE $0x00  // jmp          LBB0_313, $577(%rip)
LBB0_283:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc7  // movl         %eax, %r15d
LBB0_284:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
LBB0_285:
	LONG $0xc44b8d44  // leal         $-60(%rbx), %r9d
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0xfb83; BYTE $0x78  // cmpl         $120, %ebx
	LONG $0x02168e0f; WORD $0x0000  // jle          LBB0_312, $534(%rip)
LBB0_286:
	WORD $0x8944; BYTE $0xcb  // movl         %r9d, %ebx
	WORD $0x6348; BYTE $0xf7  // movslq       %edi, %rsi
	WORD $0xf685  // testl        %esi, %esi
	LONG $0x004a840f; WORD $0x0000  // je           LBB0_292, $74(%rip)
	WORD $0x38b1  // movb         $56, %cl
	WORD $0xc031  // xorl         %eax, %eax
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_288:
	LONG $0x0013b941; WORD $0x0000  // movl         $19, %r9d
	LONG $0x2af88348  // cmpq         $42, %rax
	LONG $0x002d840f; WORD $0x0000  // je           LBB0_293, $45(%rip)
	LONG $0x040c3841  // cmpb         %cl, (%r12,%rax)
	LONG $0x01c8850f; WORD $0x0000  // jne          LBB0_309, $456(%rip)
	QUAD $0x001865008cb60f42; BYTE $0x00  // movzbl       $6245(%rax,%r8), %ecx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0x3948; BYTE $0xc6  // cmpq         %rax, %rsi
	LONG $0xffd1850f; WORD $0xffff  // jne          LBB0_288, $-47(%rip)
	WORD $0xc984  // testb        %cl, %cl
	LONG $0x0006840f; WORD $0x0000  // je           LBB0_293, $6(%rip)
LBB0_292:
	LONG $0x0012b941; WORD $0x0000  // movl         $18, %r9d
LBB0_293:
	WORD $0xff85  // testl        %edi, %edi
	LONG $0x014b8e0f; WORD $0x0000  // jle          LBB0_305, $331(%rip)
	LONG $0xc85d8948  // movq         %rbx, $-56(%rbp)
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
	WORD $0x0144; BYTE $0xcf  // addl         %r9d, %edi
	WORD $0x6348; BYTE $0xc7  // movslq       %edi, %rax
	WORD $0x8948; BYTE $0xc3  // movq         %rax, %rbx
	LONG $0x20e3c148  // shlq         $32, %rbx
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	WORD $0xc931  // xorl         %ecx, %ecx
	LONG $0x000034e9; BYTE $0x00  // jmp          LBB0_297, $52(%rip)
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_295:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	LONG $0xf0450f44  // cmovnel      %eax, %r14d
LBB0_296:
	QUAD $0xffff00000000b848; WORD $0xffff  // movabsq      $-4294967296, %rax
	WORD $0x0148; BYTE $0xc3  // addq         %rax, %rbx
	LONG $0xff438d49  // leaq         $-1(%r11), %rax
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x01fe8348  // cmpq         $1, %rsi
	LONG $0x00568e0f; WORD $0x0000  // jle          LBB0_299, $86(%rip)
LBB0_297:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0x7cb60f41; WORD $0xfe34  // movzbl       $-2(%r12,%rsi), %edi
	LONG $0x3ce7c148  // shlq         $60, %rdi
	WORD $0x0148; BYTE $0xcf  // addq         %rcx, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	QUAD $0xcccccccccccdb948; WORD $0xcccc  // movabsq      $-3689348814741910323, %rcx
	WORD $0xf748; BYTE $0xe1  // mulq         %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0x03e9c148  // shrq         $3, %rcx
	LONG $0x09048d48  // leaq         (%rcx,%rcx), %rax
	LONG $0x80148d48  // leaq         (%rax,%rax,4), %rdx
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x2948; BYTE $0xd0  // subq         %rdx, %rax
	WORD $0x394d; BYTE $0xeb  // cmpq         %r13, %r11
	LONG $0xff98830f; WORD $0xffff  // jae          LBB0_295, $-104(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x1c048843  // movb         %al, (%r12,%r11)
	LONG $0xffff99e9; BYTE $0xff  // jmp          LBB0_296, $-103(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_299:
	LONG $0x0aff8348  // cmpq         $10, %rdi
	LONG $0x0013830f; WORD $0x0000  // jae          LBB0_301, $19(%rip)
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
	LONG $0xac058d4c; WORD $0x003a; BYTE $0x00  // leaq         $15020(%rip), %r8  /* _LSHIFT_TAB+0(%rip) */
	LONG $0xc85d8b48  // movq         $-56(%rbp), %rbx
	LONG $0x000083e9; BYTE $0x00  // jmp          LBB0_305, $131(%rip)
LBB0_301:
	WORD $0x6349; BYTE $0xf3  // movslq       %r11d, %rsi
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
	LONG $0x93058d4c; WORD $0x003a; BYTE $0x00  // leaq         $14995(%rip), %r8  /* _LSHIFT_TAB+0(%rip) */
	LONG $0xc85d8b48  // movq         $-56(%rbp), %rbx
	LONG $0x000026e9; BYTE $0x00  // jmp          LBB0_303, $38(%rip)
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_302:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	LONG $0xf0450f44  // cmovnel      %eax, %r14d
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x09f98348  // cmpq         $9, %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0x0044860f; WORD $0x0000  // jbe          LBB0_305, $68(%rip)
LBB0_303:
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	QUAD $0xcccccccccccdba48; WORD $0xcccc  // movabsq      $-3689348814741910323, %rdx
	WORD $0xf748; BYTE $0xe2  // mulq         %rdx
	LONG $0x03eac148  // shrq         $3, %rdx
	LONG $0x12048d48  // leaq         (%rdx,%rdx), %rax
	LONG $0x803c8d48  // leaq         (%rax,%rax,4), %rdi
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x2948; BYTE $0xf8  // subq         %rdi, %rax
	WORD $0x394c; BYTE $0xee  // cmpq         %r13, %rsi
	LONG $0xffb9830f; WORD $0xffff  // jae          LBB0_302, $-71(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x34048841  // movb         %al, (%r12,%rsi)
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x09f98348  // cmpq         $9, %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0xffbf870f; WORD $0xffff  // ja           LBB0_303, $-65(%rip)
	WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_305:
	WORD $0x0145; BYTE $0xcf  // addl         %r9d, %r15d
	WORD $0x634d; BYTE $0xff  // movslq       %r15d, %r15
	WORD $0x394d; BYTE $0xfd  // cmpq         %r15, %r13
	LONG $0xfd460f45  // cmovbel      %r13d, %r15d
	WORD $0x0145; BYTE $0xcb  // addl         %r9d, %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xfe1f8e0f; WORD $0xffff  // jle          LBB0_284, $-481(%rip)
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0xfe17850f; WORD $0xffff  // jne          LBB0_285, $-489(%rip)
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_307:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0xfdf98e0f; WORD $0xffff  // jle          LBB0_283, $-519(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_307, $-29(%rip)
	LONG $0xfffdede9; BYTE $0xff  // jmp          LBB0_285, $-531(%rip)
LBB0_309:
	LONG $0xfe4f8c0f; WORD $0xffff  // jl           LBB0_292, $-433(%rip)
	LONG $0xfffe50e9; BYTE $0xff  // jmp          LBB0_293, $-432(%rip)
LBB0_311:
	WORD $0x8941; BYTE $0xc1  // movl         %eax, %r9d
	LONG $0x000209e9; BYTE $0x00  // jmp          LBB0_341, $521(%rip)
LBB0_312:
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xfd49840f; WORD $0xffff  // je           LBB0_273, $-695(%rip)
LBB0_313:
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	LONG $0x68d16b48  // imulq        $104, %rcx, %rdx
	LONG $0x021c8b42  // movl         (%rdx,%r8), %ebx
	WORD $0x894c; BYTE $0xc6  // movq         %r8, %rsi
	WORD $0x634c; BYTE $0xc7  // movslq       %edi, %r8
	LONG $0x0432448a  // movb         $4(%rdx,%rsi), %al
	WORD $0x8545; BYTE $0xc0  // testl        %r8d, %r8d
	LONG $0x0029840f; WORD $0x0000  // je           LBB0_318, $41(%rip)
	LONG $0x32548d48; BYTE $0x05  // leaq         $5(%rdx,%rsi), %rdx
	WORD $0xf631  // xorl         %esi, %esi
LBB0_315:
	WORD $0xc084  // testb        %al, %al
	LONG $0x0024840f; WORD $0x0000  // je           LBB0_320, $36(%rip)
	LONG $0x34043841  // cmpb         %al, (%r12,%rsi)
	LONG $0x019d850f; WORD $0x0000  // jne          LBB0_337, $413(%rip)
	LONG $0x3204b60f  // movzbl       (%rdx,%rsi), %eax
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	WORD $0x3949; BYTE $0xf0  // cmpq         %rsi, %r8
	LONG $0xffde850f; WORD $0xffff  // jne          LBB0_315, $-34(%rip)
LBB0_318:
	WORD $0xc084  // testb        %al, %al
	LONG $0x0002840f; WORD $0x0000  // je           LBB0_320, $2(%rip)
LBB0_319:
	WORD $0xcbff  // decl         %ebx
LBB0_320:
	WORD $0xff85  // testl        %edi, %edi
	LONG $0x00b68e0f; WORD $0x0000  // jle          LBB0_328, $182(%rip)
	LONG $0xc85d894c  // movq         %r11, $-56(%rbp)
	WORD $0x5d89; BYTE $0xbc  // movl         %ebx, $-68(%rbp)
	WORD $0xdf01  // addl         %ebx, %edi
	WORD $0x6348; BYTE $0xc7  // movslq       %edi, %rax
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	LONG $0x20e6c148  // shlq         $32, %rsi
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0xff49; BYTE $0xc0  // incq         %r8
	WORD $0xff31  // xorl         %edi, %edi
	LONG $0x00002de9; BYTE $0x00  // jmp          LBB0_324, $45(%rip)
	WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_322:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	LONG $0xf0450f44  // cmovnel      %eax, %r14d
LBB0_323:
	QUAD $0xffff00000000b848; WORD $0xffff  // movabsq      $-4294967296, %rax
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xff438d49  // leaq         $-1(%r11), %rax
	WORD $0xff49; BYTE $0xc8  // decq         %r8
	LONG $0x01f88349  // cmpq         $1, %r8
	LONG $0x004c8e0f; WORD $0x0000  // jle          LBB0_326, $76(%rip)
LBB0_324:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0x5cbe0f4b; WORD $0xfe04  // movsbq       $-2(%r12,%r8), %rbx
	LONG $0xd0c38348  // addq         $-48, %rbx
	WORD $0xd348; BYTE $0xe3  // shlq         %cl, %rbx
	WORD $0x0148; BYTE $0xfb  // addq         %rdi, %rbx
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	QUAD $0xcccccccccccdba48; WORD $0xcccc  // movabsq      $-3689348814741910323, %rdx
	WORD $0xf748; BYTE $0xe2  // mulq         %rdx
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x03efc148  // shrq         $3, %rdi
	LONG $0x3f048d48  // leaq         (%rdi,%rdi), %rax
	LONG $0x80148d48  // leaq         (%rax,%rax,4), %rdx
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	WORD $0x2948; BYTE $0xd0  // subq         %rdx, %rax
	WORD $0x394d; BYTE $0xeb  // cmpq         %r13, %r11
	LONG $0xff95830f; WORD $0xffff  // jae          LBB0_322, $-107(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x1c048843  // movb         %al, (%r12,%r11)
	LONG $0xffff96e9; BYTE $0xff  // jmp          LBB0_323, $-106(%rip)
LBB0_326:
	LONG $0x0afb8348  // cmpq         $10, %rbx
	LONG $0xaf058d4c; WORD $0x0038; BYTE $0x00  // leaq         $14511(%rip), %r8  /* _LSHIFT_TAB+0(%rip) */
	LONG $0x0018830f; WORD $0x0000  // jae          LBB0_329, $24(%rip)
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	WORD $0x5d8b; BYTE $0xbc  // movl         $-68(%rbp), %ebx
	LONG $0x00007be9; BYTE $0x00  // jmp          LBB0_333, $123(%rip)
LBB0_328:
	LONG $0x96058d4c; WORD $0x0038; BYTE $0x00  // leaq         $14486(%rip), %r8  /* _LSHIFT_TAB+0(%rip) */
	LONG $0x00006fe9; BYTE $0x00  // jmp          LBB0_333, $111(%rip)
LBB0_329:
	WORD $0x6349; BYTE $0xcb  // movslq       %r11d, %rcx
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	WORD $0x5d8b; BYTE $0xbc  // movl         $-68(%rbp), %ebx
	LONG $0x00001ce9; BYTE $0x00  // jmp          LBB0_331, $28(%rip)
LBB0_330:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	LONG $0xf0450f44  // cmovnel      %eax, %r14d
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	LONG $0x09ff8348  // cmpq         $9, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x0041860f; WORD $0x0000  // jbe          LBB0_333, $65(%rip)
LBB0_331:
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	QUAD $0xcccccccccccdba48; WORD $0xcccc  // movabsq      $-3689348814741910323, %rdx
	WORD $0xf748; BYTE $0xe2  // mulq         %rdx
	LONG $0x03eac148  // shrq         $3, %rdx
	LONG $0x12048d48  // leaq         (%rdx,%rdx), %rax
	LONG $0x80348d48  // leaq         (%rax,%rax,4), %rsi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x2948; BYTE $0xf0  // subq         %rsi, %rax
	WORD $0x394c; BYTE $0xe9  // cmpq         %r13, %rcx
	LONG $0xffb9830f; WORD $0xffff  // jae          LBB0_330, $-71(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x0c048841  // movb         %al, (%r12,%rcx)
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	LONG $0x09ff8348  // cmpq         $9, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0xffbf870f; WORD $0xffff  // ja           LBB0_331, $-65(%rip)
LBB0_333:
	WORD $0x0141; BYTE $0xdf  // addl         %ebx, %r15d
	WORD $0x634d; BYTE $0xff  // movslq       %r15d, %r15
	WORD $0x394d; BYTE $0xfd  // cmpq         %r15, %r13
	LONG $0xfd460f45  // cmovbel      %r13d, %r15d
	WORD $0x0141; BYTE $0xdb  // addl         %ebx, %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0x00418e0f; WORD $0x0000  // jle          LBB0_339, $65(%rip)
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0x0039850f; WORD $0x0000  // jne          LBB0_340, $57(%rip)
LBB0_335:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x00238e0f; WORD $0x0000  // jle          LBB0_338, $35(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_335, $-29(%rip)
	LONG $0x000017e9; BYTE $0x00  // jmp          LBB0_340, $23(%rip)
LBB0_337:
	LONG $0xfe758c0f; WORD $0xffff  // jl           LBB0_319, $-395(%rip)
	LONG $0xfffe72e9; BYTE $0xff  // jmp          LBB0_320, $-398(%rip)
LBB0_338:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc7  // movl         %eax, %r15d
LBB0_339:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
LBB0_340:
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xfb4f890f; WORD $0xffff  // jns          LBB0_273, $-1201(%rip)
LBB0_341:
	LONG $0xc3f98341  // cmpl         $-61, %r9d
	LONG $0x00218e0f; WORD $0x0000  // jle          LBB0_345, $33(%rip)
	LONG $0x00019ce9; BYTE $0x00  // jmp          LBB0_365, $412(%rip)
LBB0_342:
	WORD $0xc9ff  // decl         %ecx
	WORD $0x8941; BYTE $0xcf  // movl         %ecx, %r15d
LBB0_343:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
LBB0_344:
	LONG $0x3c488d44  // leal         $60(%rax), %r9d
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0xf883; BYTE $0x88  // cmpl         $-120, %eax
	LONG $0x01718d0f; WORD $0x0000  // jge          LBB0_364, $369(%rip)
LBB0_345:
	WORD $0x8944; BYTE $0xc8  // movl         %r9d, %eax
	WORD $0x6348; BYTE $0xf7  // movslq       %edi, %rsi
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0xc931  // xorl         %ecx, %ecx
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_346:
	WORD $0x3948; BYTE $0xf2  // cmpq         %rsi, %rdx
	LONG $0x00278d0f; WORD $0x0000  // jge          LBB0_348, $39(%rip)
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	LONG $0x1cbe0f49; BYTE $0x14  // movsbq       (%r12,%rdx), %rbx
	LONG $0x4b4c8d48; BYTE $0xd0  // leaq         $-48(%rbx,%rcx,2), %rcx
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	LONG $0x015a8d49  // leaq         $1(%r10), %rbx
	WORD $0x3948; BYTE $0xd9  // cmpq         %rbx, %rcx
	LONG $0xffd9820f; WORD $0xffff  // jb           LBB0_346, $-39(%rip)
	LONG $0x00002ae9; BYTE $0x00  // jmp          LBB0_350, $42(%rip)
	LONG $0x90909090  // .p2align 4, 0x90
LBB0_348:
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0119840f; WORD $0x0000  // je           LBB0_363, $281(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_349:
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	WORD $0xc2ff  // incl         %edx
	LONG $0x01728d49  // leaq         $1(%r10), %rsi
	WORD $0x3948; BYTE $0xf1  // cmpq         %rsi, %rcx
	LONG $0xffea820f; WORD $0xffff  // jb           LBB0_349, $-22(%rip)
LBB0_350:
	WORD $0x2941; BYTE $0xd3  // subl         %edx, %r11d
	WORD $0xf631  // xorl         %esi, %esi
	WORD $0xfa39  // cmpl         %edi, %edx
	LONG $0x00498d0f; WORD $0x0000  // jge          LBB0_355, $73(%rip)
	WORD $0x6348; BYTE $0xd2  // movslq       %edx, %rdx
	WORD $0x6349; BYTE $0xf7  // movslq       %r15d, %rsi
	LONG $0x143c8d49  // leaq         (%r12,%rdx), %rdi
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	  // .p2align 4, 0x90
LBB0_352:
	WORD $0x8948; BYTE $0xcb  // movq         %rcx, %rbx
	LONG $0x3cebc148  // shrq         $60, %rbx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	WORD $0xcb80; BYTE $0x30  // orb          $48, %bl
	LONG $0x3c1c8843  // movb         %bl, (%r12,%r15)
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	LONG $0x1cbe0f4a; BYTE $0x3f  // movsbq       (%rdi,%r15), %rbx
	LONG $0x4b4c8d48; BYTE $0xd0  // leaq         $-48(%rbx,%rcx,2), %rcx
	LONG $0x3a5c8d4a; BYTE $0x01  // leaq         $1(%rdx,%r15), %rbx
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	WORD $0x3948; BYTE $0xf3  // cmpq         %rsi, %rbx
	LONG $0xffd08c0f; WORD $0xffff  // jl           LBB0_352, $-48(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0065840f; WORD $0x0000  // je           LBB0_359, $101(%rip)
	WORD $0x8944; BYTE $0xfe  // movl         %r15d, %esi
LBB0_355:
	WORD $0x8941; BYTE $0xf7  // movl         %esi, %r15d
	LONG $0x000028e9; BYTE $0x00  // jmp          LBB0_357, $40(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090  // .p2align 4, 0x90
LBB0_356:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	LONG $0xf2450f44  // cmovnel      %edx, %r14d
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0032840f; WORD $0x0000  // je           LBB0_359, $50(%rip)
LBB0_357:
	WORD $0x8948; BYTE $0xca  // movq         %rcx, %rdx
	LONG $0x3ceac148  // shrq         $60, %rdx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	WORD $0x6349; BYTE $0xf7  // movslq       %r15d, %rsi
	WORD $0x3949; BYTE $0xf5  // cmpq         %rsi, %r13
	LONG $0xffce860f; WORD $0xffff  // jbe          LBB0_356, $-50(%rip)
	WORD $0xca80; BYTE $0x30  // orb          $48, %dl
	LONG $0x34148841  // movb         %dl, (%r12,%rsi)
	WORD $0xc6ff  // incl         %esi
	WORD $0x8941; BYTE $0xf7  // movl         %esi, %r15d
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xffce850f; WORD $0xffff  // jne          LBB0_357, $-50(%rip)
LBB0_359:
	WORD $0xff41; BYTE $0xc3  // incl         %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xfeb88e0f; WORD $0xffff  // jle          LBB0_343, $-328(%rip)
	WORD $0x8944; BYTE $0xf9  // movl         %r15d, %ecx
	LONG $0x217c8042; WORD $0x30ff  // cmpb         $48, $-1(%rcx,%r12)
	LONG $0xfeb0850f; WORD $0xffff  // jne          LBB0_344, $-336(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_361:
	LONG $0x01f98348  // cmpq         $1, %rcx
	LONG $0xfe938e0f; WORD $0xffff  // jle          LBB0_342, $-365(%rip)
	LONG $0xff798d4c  // leaq         $-1(%rcx), %r15
	LONG $0x0c7c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rcx)
	WORD $0x894c; BYTE $0xf9  // movq         %r15, %rcx
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_361, $-29(%rip)
	LONG $0xfffe87e9; BYTE $0xff  // jmp          LBB0_344, $-377(%rip)
LBB0_363:
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0xfffe7fe9; BYTE $0xff  // jmp          LBB0_344, $-385(%rip)
LBB0_364:
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0x8545; BYTE $0xc9  // testl        %r9d, %r9d
	LONG $0xf9a4840f; WORD $0xffff  // je           LBB0_273, $-1628(%rip)
LBB0_365:
	WORD $0xf741; BYTE $0xd9  // negl         %r9d
	WORD $0x6348; BYTE $0xf7  // movslq       %edi, %rsi
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0xc031  // xorl         %eax, %eax
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_366:
	WORD $0x3948; BYTE $0xf2  // cmpq         %rsi, %rdx
	LONG $0x01228d0f; WORD $0x0000  // jge          LBB0_382, $290(%rip)
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	LONG $0x0cbe0f49; BYTE $0x14  // movsbq       (%r12,%rdx), %rcx
	LONG $0x41448d48; BYTE $0xd0  // leaq         $-48(%rcx,%rax,2), %rax
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	WORD $0x8948; BYTE $0xc3  // movq         %rax, %rbx
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xeb  // shrq         %cl, %rbx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xffd4840f; WORD $0xffff  // je           LBB0_366, $-44(%rip)
LBB0_368:
	LONG $0xffc6c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rsi
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xe6  // shlq         %cl, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0xfa39  // cmpl         %edi, %edx
	LONG $0x00588d0f; WORD $0x0000  // jge          LBB0_372, $88(%rip)
	LONG $0xc85d894c  // movq         %r11, $-56(%rbp)
	WORD $0x634c; BYTE $0xda  // movslq       %edx, %r11
	WORD $0x634d; BYTE $0xc7  // movslq       %r15d, %r8
	LONG $0x1c3c8d4f  // leaq         (%r12,%r11), %r15
	WORD $0xdb31  // xorl         %ebx, %ebx
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_370:
	WORD $0x8948; BYTE $0xc7  // movq         %rax, %rdi
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xef  // shrq         %cl, %rdi
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	LONG $0x30c78040  // addb         $48, %dil
	LONG $0x1c3c8841  // movb         %dil, (%r12,%rbx)
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	LONG $0x0cbe0f49; BYTE $0x1f  // movsbq       (%r15,%rbx), %rcx
	LONG $0x41448d48; BYTE $0xd0  // leaq         $-48(%rcx,%rax,2), %rax
	LONG $0x1b4c8d49; BYTE $0x01  // leaq         $1(%r11,%rbx), %rcx
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
	WORD $0x394c; BYTE $0xc1  // cmpq         %r8, %rcx
	LONG $0xffcd8c0f; WORD $0xffff  // jl           LBB0_370, $-51(%rip)
	LONG $0xc85d8b4c  // movq         $-56(%rbp), %r11
	LONG $0x52058d4c; WORD $0x0035; BYTE $0x00  // leaq         $13650(%rip), %r8  /* _LSHIFT_TAB+0(%rip) */
LBB0_372:
	WORD $0x2941; BYTE $0xd3  // subl         %edx, %r11d
	WORD $0x8941; BYTE $0xdf  // movl         %ebx, %r15d
	LONG $0x000013e9; BYTE $0x00  // jmp          LBB0_375, $19(%rip)
LBB0_373:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x000001b9; BYTE $0x00  // movl         $1, %ecx
	LONG $0xf1450f44  // cmovnel      %ecx, %r14d
LBB0_374:
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
LBB0_375:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0029840f; WORD $0x0000  // je           LBB0_378, $41(%rip)
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xea  // shrq         %cl, %rdx
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	WORD $0x6349; BYTE $0xcf  // movslq       %r15d, %rcx
	WORD $0x3949; BYTE $0xcd  // cmpq         %rcx, %r13
	LONG $0xffcc860f; WORD $0xffff  // jbe          LBB0_373, $-52(%rip)
	WORD $0xc280; BYTE $0x30  // addb         $48, %dl
	LONG $0x0c148841  // movb         %dl, (%r12,%rcx)
	WORD $0xc1ff  // incl         %ecx
	WORD $0x8941; BYTE $0xcf  // movl         %ecx, %r15d
	LONG $0xffffc7e9; BYTE $0xff  // jmp          LBB0_374, $-57(%rip)
LBB0_378:
	WORD $0xff41; BYTE $0xc3  // incl         %r11d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0x00698e0f; WORD $0x0000  // jle          LBB0_387, $105(%rip)
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0x0061850f; WORD $0x0000  // jne          LBB0_388, $97(%rip)
LBB0_380:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x004b8e0f; WORD $0x0000  // jle          LBB0_386, $75(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_380, $-29(%rip)
	LONG $0x00003fe9; BYTE $0x00  // jmp          LBB0_388, $63(%rip)
LBB0_382:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0020840f; WORD $0x0000  // je           LBB0_385, $32(%rip)
LBB0_383:
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0x8944; BYTE $0xc9  // movl         %r9d, %ecx
	WORD $0xd348; BYTE $0xee  // shrq         %cl, %rsi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xfee6850f; WORD $0xffff  // jne          LBB0_368, $-282(%rip)
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	WORD $0xc2ff  // incl         %edx
	LONG $0xffffe0e9; BYTE $0xff  // jmp          LBB0_383, $-32(%rip)
LBB0_385:
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0xc031  // xorl         %eax, %eax
	LONG $0xfff82fe9; BYTE $0xff  // jmp          LBB0_273, $-2001(%rip)
LBB0_386:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc7  // movl         %eax, %r15d
LBB0_387:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xdf440f45  // cmovel       %r15d, %r11d
LBB0_388:
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	LONG $0xfff81be9; BYTE $0xff  // jmp          LBB0_273, $-2021(%rip)
LBB0_389:
	LONG $0xfc02fe81; WORD $0xffff  // cmpl         $-1022, %esi
	LONG $0x01b18f0f; WORD $0x0000  // jg           LBB0_415, $433(%rip)
	LONG $0xfc02b841; WORD $0xffff  // movl         $-1022, %r8d
	WORD $0xff85  // testl        %edi, %edi
	LONG $0x01fd840f; WORD $0x0000  // je           LBB0_420, $509(%rip)
	LONG $0x03fd8e8d; WORD $0x0000  // leal         $1021(%rsi), %ecx
	LONG $0xfbc6fe81; WORD $0xffff  // cmpl         $-1082, %esi
	LONG $0x02068f0f; WORD $0x0000  // jg           LBB0_421, $518(%rip)
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
	LONG $0x01428d49  // leaq         $1(%r10), %rax
	LONG $0x0001bb41; WORD $0x0000  // movl         $1, %r11d
	LONG $0x00001de9; BYTE $0x00  // jmp          LBB0_396, $29(%rip)
LBB0_393:
	WORD $0xc9ff  // decl         %ecx
	WORD $0x8941; BYTE $0xcf  // movl         %ecx, %r15d
LBB0_394:
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xc7440f45  // cmovel       %r15d, %r8d
LBB0_395:
	LONG $0x3c498d41  // leal         $60(%r9), %ecx
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	LONG $0x88f98341  // cmpl         $-120, %r9d
	LONG $0x01e68d0f; WORD $0x0000  // jge          LBB0_422, $486(%rip)
LBB0_396:
	WORD $0x8941; BYTE $0xc9  // movl         %ecx, %r9d
	WORD $0x6348; BYTE $0xdf  // movslq       %edi, %rbx
	WORD $0xf631  // xorl         %esi, %esi
	WORD $0xc931  // xorl         %ecx, %ecx
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_397:
	WORD $0x3948; BYTE $0xde  // cmpq         %rbx, %rsi
	LONG $0x001f8d0f; WORD $0x0000  // jge          LBB0_399, $31(%rip)
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	LONG $0x14be0f49; BYTE $0x34  // movsbq       (%r12,%rsi), %rdx
	LONG $0x4a4c8d48; BYTE $0xd0  // leaq         $-48(%rdx,%rcx,2), %rcx
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0xffdd820f; WORD $0xffff  // jb           LBB0_397, $-35(%rip)
	LONG $0x00002ae9; BYTE $0x00  // jmp          LBB0_401, $42(%rip)
LBB0_399:
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0116840f; WORD $0x0000  // je           LBB0_414, $278(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_400:
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	WORD $0xc6ff  // incl         %esi
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0xffee820f; WORD $0xffff  // jb           LBB0_400, $-18(%rip)
LBB0_401:
	WORD $0x2941; BYTE $0xf0  // subl         %esi, %r8d
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0xfe39  // cmpl         %edi, %esi
	LONG $0x004d8d0f; WORD $0x0000  // jge          LBB0_406, $77(%rip)
	WORD $0x6348; BYTE $0xf6  // movslq       %esi, %rsi
	WORD $0x6349; BYTE $0xff  // movslq       %r15d, %rdi
	LONG $0x341c8d49  // leaq         (%r12,%rsi), %rbx
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0x90909090  // .p2align 4, 0x90
LBB0_403:
	WORD $0x8948; BYTE $0xca  // movq         %rcx, %rdx
	LONG $0x3ceac148  // shrq         $60, %rdx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	WORD $0xca80; BYTE $0x30  // orb          $48, %dl
	LONG $0x3c148843  // movb         %dl, (%r12,%r15)
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	LONG $0x14be0f4a; BYTE $0x3b  // movsbq       (%rbx,%r15), %rdx
	LONG $0x4a4c8d48; BYTE $0xd0  // leaq         $-48(%rdx,%rcx,2), %rcx
	LONG $0x3e548d4a; BYTE $0x01  // leaq         $1(%rsi,%r15), %rdx
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	WORD $0x3948; BYTE $0xfa  // cmpq         %rdi, %rdx
	LONG $0xffd08c0f; WORD $0xffff  // jl           LBB0_403, $-48(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0061840f; WORD $0x0000  // je           LBB0_410, $97(%rip)
	WORD $0x8944; BYTE $0xfb  // movl         %r15d, %ebx
LBB0_406:
	WORD $0x8941; BYTE $0xdf  // movl         %ebx, %r15d
	LONG $0x000023e9; BYTE $0x00  // jmp          LBB0_408, $35(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090  // .p2align 4, 0x90
LBB0_407:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xf3450f45  // cmovnel      %r11d, %r14d
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0033840f; WORD $0x0000  // je           LBB0_410, $51(%rip)
LBB0_408:
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	LONG $0x3ceec148  // shrq         $60, %rsi
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	WORD $0x6349; BYTE $0xff  // movslq       %r15d, %rdi
	WORD $0x3949; BYTE $0xfd  // cmpq         %rdi, %r13
	LONG $0xffd3860f; WORD $0xffff  // jbe          LBB0_407, $-45(%rip)
	LONG $0x30ce8040  // orb          $48, %sil
	LONG $0x3c348841  // movb         %sil, (%r12,%rdi)
	WORD $0xc7ff  // incl         %edi
	WORD $0x8941; BYTE $0xff  // movl         %edi, %r15d
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xffcd850f; WORD $0xffff  // jne          LBB0_408, $-51(%rip)
LBB0_410:
	WORD $0xff41; BYTE $0xc0  // incl         %r8d
	WORD $0x8545; BYTE $0xff  // testl        %r15d, %r15d
	LONG $0xfebf8e0f; WORD $0xffff  // jle          LBB0_394, $-321(%rip)
	WORD $0x8944; BYTE $0xf9  // movl         %r15d, %ecx
	LONG $0x217c8042; WORD $0x30ff  // cmpb         $48, $-1(%rcx,%r12)
	LONG $0xfeb7850f; WORD $0xffff  // jne          LBB0_395, $-329(%rip)
LBB0_412:
	LONG $0x01f98348  // cmpq         $1, %rcx
	LONG $0xfea18e0f; WORD $0xffff  // jle          LBB0_393, $-351(%rip)
	LONG $0xff798d4c  // leaq         $-1(%rcx), %r15
	LONG $0x0c7c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rcx)
	WORD $0x894c; BYTE $0xf9  // movq         %r15, %rcx
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_412, $-29(%rip)
	LONG $0xfffe95e9; BYTE $0xff  // jmp          LBB0_395, $-363(%rip)
LBB0_414:
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0xfffe8de9; BYTE $0xff  // jmp          LBB0_395, $-371(%rip)
LBB0_415:
	LONG $0x0400fe81; WORD $0x0000  // cmpl         $1024, %esi
	LONG $0x00288e0f; WORD $0x0000  // jle          LBB0_417, $40(%rip)
	WORD $0xf631  // xorl         %esi, %esi
	QUAD $0x000000000000b849; WORD $0x7ff0  // movabsq      $9218868437227405312, %r8
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	WORD $0x558a; BYTE $0xd7  // movb         $-41(%rbp), %dl
	LONG $0x0005b7e9; BYTE $0x00  // jmp          LBB0_506, $1463(%rip)
LBB0_417:
	WORD $0xceff  // decl         %esi
	WORD $0x8941; BYTE $0xf0  // movl         %esi, %r8d
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
LBB0_418:
	WORD $0xff85  // testl        %edi, %edi
	LONG $0x01c2840f; WORD $0x0000  // je           LBB0_443, $450(%rip)
	LONG $0xc845894c  // movq         %r8, $-56(%rbp)
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
	WORD $0x8945; BYTE $0xfa  // movl         %r15d, %r10d
	LONG $0x0001fae9; BYTE $0x00  // jmp          LBB0_448, $506(%rip)
LBB0_420:
	WORD $0xc031  // xorl         %eax, %eax
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x0003cfe9; BYTE $0x00  // jmp          LBB0_475, $975(%rip)
LBB0_421:
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x00001ee9; BYTE $0x00  // jmp          LBB0_423, $30(%rip)
LBB0_422:
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
	LONG $0xfc02b841; WORD $0xffff  // movl         $-1022, %r8d
	WORD $0xc985  // testl        %ecx, %ecx
	LONG $0xffa1840f; WORD $0xffff  // je           LBB0_418, $-95(%rip)
LBB0_423:
	WORD $0xd9f7  // negl         %ecx
	WORD $0x6348; BYTE $0xf7  // movslq       %edi, %rsi
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0xc031  // xorl         %eax, %eax
LBB0_424:
	WORD $0x3948; BYTE $0xf2  // cmpq         %rsi, %rdx
	LONG $0x00258d0f; WORD $0x0000  // jge          LBB0_440, $37(%rip)
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	LONG $0x1cbe0f49; BYTE $0x14  // movsbq       (%r12,%rdx), %rbx
	LONG $0x43448d48; BYTE $0xd0  // leaq         $-48(%rbx,%rax,2), %rax
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	WORD $0x8948; BYTE $0xc3  // movq         %rax, %rbx
	WORD $0xd348; BYTE $0xeb  // shrq         %cl, %rbx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xffd7840f; WORD $0xffff  // je           LBB0_424, $-41(%rip)
	LONG $0x000030e9; BYTE $0x00  // jmp          LBB0_426, $48(%rip)
LBB0_440:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x012b840f; WORD $0x0000  // je           LBB0_443, $299(%rip)
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0xd348; BYTE $0xee  // shrq         %cl, %rsi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0018850f; WORD $0x0000  // jne          LBB0_426, $24(%rip)
LBB0_442:
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	WORD $0xc2ff  // incl         %edx
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0xd348; BYTE $0xee  // shrq         %cl, %rsi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xffe8840f; WORD $0xffff  // je           LBB0_442, $-24(%rip)
LBB0_426:
	LONG $0xffc6c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rsi
	WORD $0xd348; BYTE $0xe6  // shlq         %cl, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0xfa39  // cmpl         %edi, %edx
	LONG $0x003d8d0f; WORD $0x0000  // jge          LBB0_429, $61(%rip)
	WORD $0x634c; BYTE $0xca  // movslq       %edx, %r9
	WORD $0x634d; BYTE $0xc7  // movslq       %r15d, %r8
	LONG $0x0c1c8d4b  // leaq         (%r12,%r9), %rbx
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
LBB0_428:
	WORD $0x8948; BYTE $0xc7  // movq         %rax, %rdi
	WORD $0xd348; BYTE $0xef  // shrq         %cl, %rdi
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	LONG $0x30c78040  // addb         $48, %dil
	LONG $0x143c8843  // movb         %dil, (%r12,%r10)
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	LONG $0x3cbe0f4a; BYTE $0x13  // movsbq       (%rbx,%r10), %rdi
	LONG $0x47448d48; BYTE $0xd0  // leaq         $-48(%rdi,%rax,2), %rax
	LONG $0x117c8d4b; BYTE $0x01  // leaq         $1(%r9,%r10), %rdi
	WORD $0xff49; BYTE $0xc2  // incq         %r10
	WORD $0x394c; BYTE $0xc7  // cmpq         %r8, %rdi
	LONG $0xffd08c0f; WORD $0xffff  // jl           LBB0_428, $-48(%rip)
LBB0_429:
	WORD $0x2941; BYTE $0xd3  // subl         %edx, %r11d
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0053840f; WORD $0x0000  // je           LBB0_434, $83(%rip)
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	LONG $0x000017e9; BYTE $0x00  // jmp          LBB0_432, $23(%rip)
LBB0_431:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xf2450f44  // cmovnel      %edx, %r14d
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0032840f; WORD $0x0000  // je           LBB0_434, $50(%rip)
LBB0_432:
	WORD $0x8948; BYTE $0xc7  // movq         %rax, %rdi
	WORD $0xd348; BYTE $0xef  // shrq         %cl, %rdi
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	WORD $0x6349; BYTE $0xda  // movslq       %r10d, %rbx
	WORD $0x3949; BYTE $0xdd  // cmpq         %rbx, %r13
	LONG $0xffd4860f; WORD $0xffff  // jbe          LBB0_431, $-44(%rip)
	LONG $0x30c78040  // addb         $48, %dil
	LONG $0x1c3c8841  // movb         %dil, (%r12,%rbx)
	WORD $0xc3ff  // incl         %ebx
	WORD $0x8941; BYTE $0xda  // movl         %ebx, %r10d
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	LONG $0x80048d48  // leaq         (%rax,%rax,4), %rax
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xffce850f; WORD $0xffff  // jne          LBB0_432, $-50(%rip)
LBB0_434:
	WORD $0xff41; BYTE $0xc3  // incl         %r11d
	WORD $0x8545; BYTE $0xd2  // testl        %r10d, %r10d
	LONG $0x006d8e0f; WORD $0x0000  // jle          LBB0_446, $109(%rip)
	WORD $0x8944; BYTE $0xd0  // movl         %r10d, %eax
	LONG $0x207c8042; WORD $0x30ff  // cmpb         $48, $-1(%rax,%r12)
	LONG $0x006d850f; WORD $0x0000  // jne          LBB0_447, $109(%rip)
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
LBB0_437:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x00458e0f; WORD $0x0000  // jle          LBB0_445, $69(%rip)
	LONG $0xff788d4c  // leaq         $-1(%rax), %r15
	LONG $0x047c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rax)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_437, $-29(%rip)
	LONG $0xfc02b841; WORD $0xffff  // movl         $-1022, %r8d
	WORD $0x8944; BYTE $0xff  // movl         %r15d, %edi
	LONG $0xfffe36e9; BYTE $0xff  // jmp          LBB0_418, $-458(%rip)
LBB0_443:
	WORD $0xc031  // xorl         %eax, %eax
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	LONG $0x000226e9; BYTE $0x00  // jmp          LBB0_475, $550(%rip)
LBB0_444:
	WORD $0xc701  // addl         %eax, %edi
	WORD $0x3145; BYTE $0xdb  // xorl         %r11d, %r11d
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0xf889  // movl         %edi, %eax
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0xc689  // movl         %eax, %esi
	LONG $0xfff41fe9; BYTE $0xff  // jmp          LBB0_271, $-3041(%rip)
LBB0_445:
	WORD $0xc8ff  // decl         %eax
	WORD $0x8941; BYTE $0xc2  // movl         %eax, %r10d
LBB0_446:
	LONG $0xfc02b841; WORD $0xffff  // movl         $-1022, %r8d
	WORD $0x8545; BYTE $0xd2  // testl        %r10d, %r10d
	LONG $0x031d840f; WORD $0x0000  // je           LBB0_499, $797(%rip)
LBB0_447:
	LONG $0xfffc02b8; BYTE $0xff  // movl         $-1022, %eax
	LONG $0xc8458948  // movq         %rax, $-56(%rbp)
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
	WORD $0x8944; BYTE $0xd7  // movl         %r10d, %edi
LBB0_448:
	WORD $0x634c; BYTE $0xdf  // movslq       %edi, %r11
	WORD $0x31b1  // movb         $49, %cl
	WORD $0xc031  // xorl         %eax, %eax
	LONG $0x0010b941; WORD $0x0000  // movl         $16, %r9d
LBB0_449:
	LONG $0x26f88348  // cmpq         $38, %rax
	LONG $0x0033840f; WORD $0x0000  // je           LBB0_454, $51(%rip)
	LONG $0x040c3841  // cmpb         %cl, (%r12,%rax)
	LONG $0x00d7850f; WORD $0x0000  // jne          LBB0_463, $215(%rip)
	LONG $0x450d8d48; WORD $0x0030; BYTE $0x00  // leaq         $12357(%rip), %rcx  /* _LSHIFT_TAB+0(%rip) */
	QUAD $0x0000158d088cb60f  // movzbl       $5517(%rax,%rcx), %ecx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0x3949; BYTE $0xc3  // cmpq         %rax, %r11
	LONG $0xffd1850f; WORD $0xffff  // jne          LBB0_449, $-47(%rip)
	WORD $0xc984  // testb        %cl, %cl
	LONG $0x0006840f; WORD $0x0000  // je           LBB0_454, $6(%rip)
LBB0_453:
	LONG $0x000fb941; WORD $0x0000  // movl         $15, %r9d
LBB0_454:
	WORD $0xff85  // testl        %edi, %edi
	LONG $0x009a8e0f; WORD $0x0000  // jle          LBB0_462, $154(%rip)
	WORD $0x0144; BYTE $0xcf  // addl         %r9d, %edi
	WORD $0x6348; BYTE $0xf7  // movslq       %edi, %rsi
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xc931  // xorl         %ecx, %ecx
	QUAD $0x000000000000bf49; WORD $0xfa00  // movabsq      $-432345564227567616, %r15
	LONG $0x00001ee9; BYTE $0x00  // jmp          LBB0_458, $30(%rip)
LBB0_456:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	LONG $0xf0450f44  // cmovnel      %eax, %r14d
LBB0_457:
	WORD $0xcfff  // decl         %edi
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	LONG $0x01fb8349  // cmpq         $1, %r11
	LONG $0x00498e0f; WORD $0x0000  // jle          LBB0_460, $73(%rip)
LBB0_458:
	LONG $0x5cbe0f4b; WORD $0xfe1c  // movsbq       $-2(%r12,%r11), %rbx
	LONG $0x35e3c148  // shlq         $53, %rbx
	WORD $0x0148; BYTE $0xcb  // addq         %rcx, %rbx
	WORD $0x014c; BYTE $0xfb  // addq         %r15, %rbx
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	QUAD $0xcccccccccccdb948; WORD $0xcccc  // movabsq      $-3689348814741910323, %rcx
	WORD $0xf748; BYTE $0xe1  // mulq         %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0x03e9c148  // shrq         $3, %rcx
	LONG $0x09048d48  // leaq         (%rcx,%rcx), %rax
	LONG $0x80148d48  // leaq         (%rax,%rax,4), %rdx
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	WORD $0x2948; BYTE $0xd0  // subq         %rdx, %rax
	WORD $0x394c; BYTE $0xee  // cmpq         %r13, %rsi
	LONG $0xffa4830f; WORD $0xffff  // jae          LBB0_456, $-92(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x34048841  // movb         %al, (%r12,%rsi)
	LONG $0xffffa5e9; BYTE $0xff  // jmp          LBB0_457, $-91(%rip)
LBB0_460:
	LONG $0x0afb8348  // cmpq         $10, %rbx
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
	LONG $0x0020830f; WORD $0x0000  // jae          LBB0_464, $32(%rip)
	LONG $0xc8458b4c  // movq         $-56(%rbp), %r8
	LONG $0x000083e9; BYTE $0x00  // jmp          LBB0_468, $131(%rip)
LBB0_462:
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
	LONG $0xc8458b4c  // movq         $-56(%rbp), %r8
	LONG $0x000077e9; BYTE $0x00  // jmp          LBB0_468, $119(%rip)
LBB0_463:
	LONG $0xff468c0f; WORD $0xffff  // jl           LBB0_453, $-186(%rip)
	LONG $0xffff47e9; BYTE $0xff  // jmp          LBB0_454, $-185(%rip)
LBB0_464:
	WORD $0x6348; BYTE $0xf7  // movslq       %edi, %rsi
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x000001bf; BYTE $0x00  // movl         $1, %edi
	LONG $0xc8458b4c  // movq         $-56(%rbp), %r8
	LONG $0x000017e9; BYTE $0x00  // jmp          LBB0_466, $23(%rip)
LBB0_465:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xf7450f44  // cmovnel      %edi, %r14d
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x09f98348  // cmpq         $9, %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0x0041860f; WORD $0x0000  // jbe          LBB0_468, $65(%rip)
LBB0_466:
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	QUAD $0xcccccccccccdba48; WORD $0xcccc  // movabsq      $-3689348814741910323, %rdx
	WORD $0xf748; BYTE $0xe2  // mulq         %rdx
	LONG $0x03eac148  // shrq         $3, %rdx
	LONG $0x12048d48  // leaq         (%rdx,%rdx), %rax
	LONG $0x801c8d48  // leaq         (%rax,%rax,4), %rbx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x2948; BYTE $0xd8  // subq         %rbx, %rax
	WORD $0x394c; BYTE $0xee  // cmpq         %r13, %rsi
	LONG $0xffbe830f; WORD $0xffff  // jae          LBB0_465, $-66(%rip)
	WORD $0x3004  // addb         $48, %al
	LONG $0x34048841  // movb         %al, (%r12,%rsi)
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x09f98348  // cmpq         $9, %rcx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	LONG $0xffbf870f; WORD $0xffff  // ja           LBB0_466, $-65(%rip)
LBB0_468:
	WORD $0x0145; BYTE $0xca  // addl         %r9d, %r10d
	WORD $0x6349; BYTE $0xc2  // movslq       %r10d, %rax
	WORD $0x3949; BYTE $0xc5  // cmpq         %rax, %r13
	LONG $0xc5460f41  // cmovbel      %r13d, %eax
	WORD $0x0145; BYTE $0xcb  // addl         %r9d, %r11d
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x00448e0f; WORD $0x0000  // jle          LBB0_472, $68(%rip)
	WORD $0xc189  // movl         %eax, %ecx
	LONG $0x217c8042; WORD $0x30ff  // cmpb         $48, $-1(%rcx,%r12)
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x0047850f; WORD $0x0000  // jne          LBB0_475, $71(%rip)
LBB0_470:
	LONG $0x01f98348  // cmpq         $1, %rcx
	LONG $0x00318e0f; WORD $0x0000  // jle          LBB0_473, $49(%rip)
	LONG $0xff418d48  // leaq         $-1(%rcx), %rax
	LONG $0x0c7c8041; WORD $0x30fe  // cmpb         $48, $-2(%r12,%rcx)
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	LONG $0xffe3840f; WORD $0xffff  // je           LBB0_470, $-29(%rip)
	LONG $0x000025e9; BYTE $0x00  // jmp          LBB0_475, $37(%rip)
LBB0_472:
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x000004e9; BYTE $0x00  // jmp          LBB0_474, $4(%rip)
LBB0_473:
	WORD $0xc9ff  // decl         %ecx
	WORD $0xc889  // movl         %ecx, %eax
LBB0_474:
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x0115840f; WORD $0x0000  // je           LBB0_498, $277(%rip)
LBB0_475:
	LONG $0xffc6c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rsi
	LONG $0x14fb8341  // cmpl         $20, %r11d
	LONG $0x00088e0f; WORD $0x0000  // jle          LBB0_477, $8(%rip)
	WORD $0x558a; BYTE $0xd7  // movb         $-41(%rbp), %dl
	LONG $0x00016ee9; BYTE $0x00  // jmp          LBB0_505, $366(%rip)
LBB0_477:
	WORD $0x8944; BYTE $0xda  // movl         %r11d, %edx
	WORD $0x8545; BYTE $0xdb  // testl        %r11d, %r11d
	LONG $0x00328e0f; WORD $0x0000  // jle          LBB0_482, $50(%rip)
	WORD $0x6348; BYTE $0xf0  // movslq       %eax, %rsi
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0xc931  // xorl         %ecx, %ecx
LBB0_479:
	WORD $0x3948; BYTE $0xf7  // cmpq         %rsi, %rdi
	LONG $0x001a8d0f; WORD $0x0000  // jge          LBB0_481, $26(%rip)
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	LONG $0x1cbe0f49; BYTE $0x3c  // movsbq       (%r12,%rdi), %rbx
	LONG $0x4b4c8d48; BYTE $0xd0  // leaq         $-48(%rbx,%rcx,2), %rcx
	WORD $0xff48; BYTE $0xc7  // incq         %rdi
	WORD $0x3948; BYTE $0xfa  // cmpq         %rdi, %rdx
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_479, $-35(%rip)
LBB0_481:
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x000007e9; BYTE $0x00  // jmp          LBB0_483, $7(%rip)
LBB0_482:
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0xb141; BYTE $0x01  // movb         $1, %r9b
	WORD $0xc931  // xorl         %ecx, %ecx
LBB0_483:
	WORD $0x8944; BYTE $0xde  // movl         %r11d, %esi
	WORD $0xfe29  // subl         %edi, %esi
	LONG $0x00528e0f; WORD $0x0000  // jle          LBB0_491, $82(%rip)
	WORD $0x8941; BYTE $0xfa  // movl         %edi, %r10d
	WORD $0xf741; BYTE $0xd2  // notl         %r10d
	WORD $0x0145; BYTE $0xda  // addl         %r11d, %r10d
	WORD $0xe683; BYTE $0x07  // andl         $7, %esi
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_488, $23(%rip)
	WORD $0xdef7  // negl         %esi
	WORD $0xdb31  // xorl         %ebx, %ebx
LBB0_486:
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	LONG $0x890c8d48  // leaq         (%rcx,%rcx,4), %rcx
	WORD $0xcbff  // decl         %ebx
	WORD $0xde39  // cmpl         %ebx, %esi
	LONG $0xffef850f; WORD $0xffff  // jne          LBB0_486, $-17(%rip)
	WORD $0xdf29  // subl         %ebx, %edi
LBB0_488:
	LONG $0x07fa8341  // cmpl         $7, %r10d
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
	LONG $0x0015820f; WORD $0x0000  // jb           LBB0_491, $21(%rip)
	WORD $0x8944; BYTE $0xde  // movl         %r11d, %esi
	WORD $0xfe29  // subl         %edi, %esi
LBB0_490:
	LONG $0x00c96948; WORD $0xf5e1; BYTE $0x05  // imulq        $100000000, %rcx, %rcx
	WORD $0xc683; BYTE $0xf8  // addl         $-8, %esi
	LONG $0xfff0850f; WORD $0xffff  // jne          LBB0_490, $-16(%rip)
LBB0_491:
	WORD $0xff31  // xorl         %edi, %edi
	WORD $0x8545; BYTE $0xdb  // testl        %r11d, %r11d
	LONG $0x0066880f; WORD $0x0000  // js           LBB0_500, $102(%rip)
	WORD $0x3944; BYTE $0xd8  // cmpl         %r11d, %eax
	LONG $0x005d8e0f; WORD $0x0000  // jle          LBB0_500, $93(%rip)
	LONG $0x14148a41  // movb         (%r12,%rdx), %dl
	LONG $0x01738d41  // leal         $1(%r11), %esi
	WORD $0xc639  // cmpl         %eax, %esi
	LONG $0x002a850f; WORD $0x0000  // jne          LBB0_497, $42(%rip)
	WORD $0xfa80; BYTE $0x35  // cmpb         $53, %dl
	LONG $0x0021850f; WORD $0x0000  // jne          LBB0_497, $33(%rip)
	WORD $0x8545; BYTE $0xf6  // testl        %r14d, %r14d
	LONG $0xc7950f40  // setne        %dil
	WORD $0x0841; BYTE $0xf9  // orb          %dil, %r9b
	LONG $0x0034850f; WORD $0x0000  // jne          LBB0_500, $52(%rip)
	WORD $0x6349; BYTE $0xc3  // movslq       %r11d, %rax
	LONG $0x207c8a42; BYTE $0xff  // movb         $-1(%rax,%r12), %dil
	LONG $0x01e78040  // andb         $1, %dil
	LONG $0x000023e9; BYTE $0x00  // jmp          LBB0_500, $35(%rip)
LBB0_497:
	WORD $0xfa80; BYTE $0x34  // cmpb         $52, %dl
	LONG $0xc79f0f40  // setg         %dil
	LONG $0x000017e9; BYTE $0x00  // jmp          LBB0_500, $23(%rip)
LBB0_498:
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0xff31  // xorl         %edi, %edi
	LONG $0x00000ee9; BYTE $0x00  // jmp          LBB0_500, $14(%rip)
LBB0_499:
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0xff31  // xorl         %edi, %edi
	QUAD $0xffffffffffffba49; WORD $0x000f  // movabsq      $4503599627370495, %r10
LBB0_500:
	WORD $0x558a; BYTE $0xd7  // movb         $-41(%rbp), %dl
	LONG $0xf7b60f40  // movzbl       %dil, %esi
	WORD $0x0148; BYTE $0xce  // addq         %rcx, %rsi
	QUAD $0x000000000000b848; WORD $0x0020  // movabsq      $9007199254740992, %rax
	WORD $0x3948; BYTE $0xc6  // cmpq         %rax, %rsi
	LONG $0x0028850f; WORD $0x0000  // jne          LBB0_503, $40(%rip)
	LONG $0xfef88141; WORD $0x0003; BYTE $0x00  // cmpl         $1022, %r8d
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	LONG $0x00208e0f; WORD $0x0000  // jle          LBB0_504, $32(%rip)
	WORD $0xf631  // xorl         %esi, %esi
	QUAD $0x000000000000b849; WORD $0x7ff0  // movabsq      $9218868437227405312, %r8
	LONG $0x000036e9; BYTE $0x00  // jmp          LBB0_506, $54(%rip)
LBB0_503:
	QUAD $0x000000000000bf48; WORD $0x8000  // movabsq      $-9223372036854775808, %rdi
	LONG $0x000007e9; BYTE $0x00  // jmp          LBB0_505, $7(%rip)
LBB0_504:
	WORD $0xff41; BYTE $0xc0  // incl         %r8d
	LONG $0x01728d49  // leaq         $1(%r10), %rsi
LBB0_505:
	LONG $0x01428d49  // leaq         $1(%r10), %rax
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	LONG $0xffc08141; WORD $0x0003; BYTE $0x00  // addl         $1023, %r8d
	LONG $0xffe08141; WORD $0x0007; BYTE $0x00  // andl         $2047, %r8d
	LONG $0x34e0c149  // shlq         $52, %r8
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
LBB0_506:
	WORD $0x214c; BYTE $0xd6  // andq         %r10, %rsi
	WORD $0x094c; BYTE $0xc6  // orq          %r8, %rsi
	WORD $0x8948; BYTE $0xf3  // movq         %rsi, %rbx
	WORD $0x0948; BYTE $0xfb  // orq          %rdi, %rbx
	WORD $0xfa80; BYTE $0x2d  // cmpb         $45, %dl
	LONG $0xde450f48  // cmovneq      %rsi, %rbx
LBB0_507:
	WORD $0xff48; BYTE $0xcf  // decq         %rdi
	WORD $0x2148; BYTE $0xdf  // andq         %rbx, %rdi
	QUAD $0x000000000000b848; WORD $0x7ff0  // movabsq      $9218868437227405312, %rax
	WORD $0x3948; BYTE $0xc7  // cmpq         %rax, %rdi
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x0007850f; WORD $0x0000  // jne          LBB0_509, $7(%rip)
	LONG $0xf800c748; WORD $0xffff; BYTE $0xff  // movq         $-8, (%rax)
LBB0_509:
	LONG $0x08588948  // movq         %rbx, $8(%rax)
	LONG $0xa0458b48  // movq         $-96(%rbp), %rax
	LONG $0xa84d8b48  // movq         $-88(%rbp), %rcx
	WORD $0x8948; BYTE $0x08  // movq         %rcx, (%rax)
	LONG $0xffe00ae9; BYTE $0xff  // jmp          LBB0_51, $-8182(%rip)
	WORD $0x0000; BYTE $0x00  // .p2align 2, 0x00
_MASK_USE_NUMBER:
	LONG $0x00000002  // .long 2
	LONG $0x00000000  // .p2align 4, 0x00
_P10_TAB:
	QUAD $0x3ff0000000000000  // .quad 4607182418800017408
	QUAD $0x4024000000000000  // .quad 4621819117588971520
	QUAD $0x4059000000000000  // .quad 4636737291354636288
	QUAD $0x408f400000000000  // .quad 4652007308841189376
	QUAD $0x40c3880000000000  // .quad 4666723172467343360
	QUAD $0x40f86a0000000000  // .quad 4681608360884174848
	QUAD $0x412e848000000000  // .quad 4696837146684686336
	QUAD $0x416312d000000000  // .quad 4711630319722168320
	QUAD $0x4197d78400000000  // .quad 4726483295884279808
	QUAD $0x41cdcd6500000000  // .quad 4741671816366391296
	QUAD $0x4202a05f20000000  // .quad 4756540486875873280
	QUAD $0x42374876e8000000  // .quad 4771362005757984768
	QUAD $0x426d1a94a2000000  // .quad 4786511204640096256
	QUAD $0x42a2309ce5400000  // .quad 4801453603149578240
	QUAD $0x42d6bcc41e900000  // .quad 4816244402031689728
	QUAD $0x430c6bf526340000  // .quad 4831355200913801216
	QUAD $0x4341c37937e08000  // .quad 4846369599423283200
	QUAD $0x4376345785d8a000  // .quad 4861130398305394688
	QUAD $0x43abc16d674ec800  // .quad 4876203697187506176
	QUAD $0x43e158e460913d00  // .quad 4891288408196988160
	QUAD $0x4415af1d78b58c40  // .quad 4906019910204099648
	QUAD $0x444b1ae4d6e2ef50  // .quad 4921056587992461136
	QUAD $0x4480f0cf064dd592  // .quad 4936209963552724370
	QUAD $0x0000000000000000  // .p2align 4, 0x00
_POW10_M128_TAB:
	QUAD $0x1732c869cd60e453  // .quad 1671618768450675795
	QUAD $0xfa8fd5a0081c0288  // .quad -391859759250406776
	QUAD $0x0e7fbd42205c8eb4  // .quad 1044761730281672372
	QUAD $0x9c99e58405118195  // .quad -7162441377172586091
	QUAD $0x521fac92a873b261  // .quad 5917638181279478369
	QUAD $0xc3c05ee50655e1fa  // .quad -4341365703038344710
	QUAD $0xe6a797b752909ef9  // .quad -1826324310255427847
	QUAD $0xf4b0769e47eb5a78  // .quad -815021110370542984
	QUAD $0x9028bed2939a635c  // .quad -8058981721550724260
	QUAD $0x98ee4a22ecf3188b  // .quad -7426917221622671221
	QUAD $0x7432ee873880fc33  // .quad 8373016921771146291
	QUAD $0xbf29dcaba82fdeae  // .quad -4671960508600951122
	QUAD $0x113faa2906a13b3f  // .quad 1242899115359157055
	QUAD $0xeef453d6923bd65a  // .quad -1228264617323800998
	QUAD $0x4ac7ca59a424c507  // .quad 5388497965526861063
	QUAD $0x9558b4661b6565f8  // .quad -7685194413468457480
	QUAD $0x5d79bcf00d2df649  // .quad 6735622456908576329
	QUAD $0xbaaee17fa23ebf76  // .quad -4994806998408183946
	QUAD $0xf4d82c2c107973dc  // .quad -803843965719055396
	QUAD $0xe95a99df8ace6f53  // .quad -1631822729582842029
	QUAD $0x79071b9b8a4be869  // .quad 8720969558280366185
	QUAD $0x91d8a02bb6c10594  // .quad -7937418233630358124
	QUAD $0x9748e2826cdee284  // .quad -7545532125859093884
	QUAD $0xb64ec836a47146f9  // .quad -5310086773610559751
	QUAD $0xfd1b1b2308169b25  // .quad -208543120469091547
	QUAD $0xe3e27a444d8d98b7  // .quad -2025922448585811785
	QUAD $0xfe30f0f5e50e20f7  // .quad -130339450293182217
	QUAD $0x8e6d8c6ab0787f72  // .quad -8183730558007214222
	QUAD $0xbdbd2d335e51a935  // .quad -4774610331293865675
	QUAD $0xb208ef855c969f4f  // .quad -5617977179081629873
	QUAD $0xad2c788035e61382  // .quad -5968262914117332094
	QUAD $0xde8b2b66b3bc4723  // .quad -2410785455424649437
	QUAD $0x4c3bcb5021afcc31  // .quad 5493207715531443249
	QUAD $0x8b16fb203055ac76  // .quad -8424269937281487754
	QUAD $0xdf4abe242a1bbf3d  // .quad -2356862392440471747
	QUAD $0xaddcb9e83c6b1793  // .quad -5918651403174471789
	QUAD $0xd71d6dad34a2af0d  // .quad -2946077990550589683
	QUAD $0xd953e8624b85dd78  // .quad -2786628235540701832
	QUAD $0x8672648c40e5ad68  // .quad -8758827771735200408
	QUAD $0x87d4713d6f33aa6b  // .quad -8659171674854020501
	QUAD $0x680efdaf511f18c2  // .quad 7498209359040551106
	QUAD $0xa9c98d8ccb009506  // .quad -6212278575140137722
	QUAD $0x0212bd1b2566def2  // .quad 149389661945913074
	QUAD $0xd43bf0effdc0ba48  // .quad -3153662200497784248
	QUAD $0x014bb630f7604b57  // .quad 93368538716195671
	QUAD $0x84a57695fe98746d  // .quad -8888567902952197011
	QUAD $0x419ea3bd35385e2d  // .quad 4728396691822632493
	QUAD $0xa5ced43b7e3e9188  // .quad -6499023860262858360
	QUAD $0x52064cac828675b9  // .quad 5910495864778290617
	QUAD $0xcf42894a5dce35ea  // .quad -3512093806901185046
	QUAD $0x7343efebd1940993  // .quad 8305745933913819539
	QUAD $0x818995ce7aa0e1b2  // .quad -9112587656954322510
	QUAD $0x1014ebe6c5f90bf8  // .quad 1158810380537498616
	QUAD $0xa1ebfb4219491a1f  // .quad -6779048552765515233
	QUAD $0xd41a26e077774ef6  // .quad -3163173042755514634
	QUAD $0xca66fa129f9b60a6  // .quad -3862124672529506138
	QUAD $0x8920b098955522b4  // .quad -8565652321871781196
	QUAD $0xfd00b897478238d0  // .quad -215969822234494768
	QUAD $0x55b46e5f5d5535b0  // .quad 6175682344898606512
	QUAD $0x9e20735e8cb16382  // .quad -7052510166537641086
	QUAD $0xeb2189f734aa831d  // .quad -1503769105731517667
	QUAD $0xc5a890362fddbc62  // .quad -4203951689744663454
	QUAD $0xa5e9ec7501d523e4  // .quad -6491397400591784988
	QUAD $0xf712b443bbd52b7b  // .quad -643253593753441413
	QUAD $0x47b233c92125366e  // .quad 5166248661484910190
	QUAD $0x9a6bb0aa55653b2d  // .quad -7319562523736982739
	QUAD $0x999ec0bb696e840a  // .quad -7377247228426025974
	QUAD $0xc1069cd4eabe89f8  // .quad -4537767136243840520
	QUAD $0xc00670ea43ca250d  // .quad -4609873017105144563
	QUAD $0xf148440a256e2c76  // .quad -1060522901877412746
	QUAD $0x380406926a5e5728  // .quad 4036358391950366504
	QUAD $0x96cd2a865764dbca  // .quad -7580355841314464822
	QUAD $0xc605083704f5ecf2  // .quad -4177924046916817678
	QUAD $0xbc807527ed3e12bc  // .quad -4863758783215693124
	QUAD $0xf7864a44c633682e  // .quad -610719040218634194
	QUAD $0xeba09271e88d976b  // .quad -1468012460592228501
	QUAD $0x7ab3ee6afbe0211d  // .quad 8841672636718129437
	QUAD $0x93445b8731587ea3  // .quad -7835036815511224669
	QUAD $0x5960ea05bad82964  // .quad 6440404777470273892
	QUAD $0xb8157268fdae9e4c  // .quad -5182110000961642932
	QUAD $0x6fb92487298e33bd  // .quad 8050505971837842365
	QUAD $0xe61acf033d1a45df  // .quad -1865951482774665761
	QUAD $0xa5d3b6d479f8e056  // .quad -6497648813669818282
	QUAD $0x8fd0c16206306bab  // .quad -8083748704375247957
	QUAD $0x8f48a4899877186c  // .quad -8122061017087272852
	QUAD $0xb3c4f1ba87bc8696  // .quad -5492999862041672042
	QUAD $0x331acdabfe94de87  // .quad 3682481783923072647
	QUAD $0xe0b62e2929aba83c  // .quad -2254563809124702148
	QUAD $0x9ff0c08b7f1d0b14  // .quad -6921820921902855404
	QUAD $0x8c71dcd9ba0b4925  // .quad -8326631408344020699
	QUAD $0x07ecf0ae5ee44dd9  // .quad 571095884476206553
	QUAD $0xaf8e5410288e1b6f  // .quad -5796603242002637969
	QUAD $0xc9e82cd9f69d6150  // .quad -3897816162832129712
	QUAD $0xdb71e91432b1a24a  // .quad -2634068034075909558
	QUAD $0xbe311c083a225cd2  // .quad -4741978110983775022
	QUAD $0x892731ac9faf056e  // .quad -8563821548938525330
	QUAD $0x6dbd630a48aaf406  // .quad 7907585416552444934
	QUAD $0xab70fe17c79ac6ca  // .quad -6093090917745768758
	QUAD $0x092cbbccdad5b108  // .quad 661109733835780360
	QUAD $0xd64d3d9db981787d  // .quad -3004677628754823043
	QUAD $0x25bbf56008c58ea5  // .quad 2719036592861056677
	QUAD $0x85f0468293f0eb4e  // .quad -8795452545612846258
	QUAD $0xaf2af2b80af6f24e  // .quad -5824576295778454962
	QUAD $0xa76c582338ed2621  // .quad -6382629663588669919
	QUAD $0x1af5af660db4aee1  // .quad 1942651667131707105
	QUAD $0xd1476e2c07286faa  // .quad -3366601061058449494
	QUAD $0x50d98d9fc890ed4d  // .quad 5825843310384704845
	QUAD $0x82cca4db847945ca  // .quad -9021654690802612790
	QUAD $0xe50ff107bab528a0  // .quad -1941067898873894752
	QUAD $0xa37fce126597973c  // .quad -6665382345075878084
	QUAD $0x1e53ed49a96272c8  // .quad 2185351144835019464
	QUAD $0xcc5fc196fefd7d0c  // .quad -3720041912917459700
	QUAD $0x25e8e89c13bb0f7a  // .quad 2731688931043774330
	QUAD $0xff77b1fcbebcdc4f  // .quad -38366372719436721
	QUAD $0x77b191618c54e9ac  // .quad 8624834609543440812
	QUAD $0x9faacf3df73609b1  // .quad -6941508010590729807
	QUAD $0xd59df5b9ef6a2417  // .quad -3054014793352862697
	QUAD $0xc795830d75038c1d  // .quad -4065198994811024355
	QUAD $0x4b0573286b44ad1d  // .quad 5405853545163697437
	QUAD $0xf97ae3d0d2446f25  // .quad -469812725086392539
	QUAD $0x4ee367f9430aec32  // .quad 5684501474941004850
	QUAD $0x9becce62836ac577  // .quad -7211161980820077193
	QUAD $0x229c41f793cda73f  // .quad 2493940825248868159
	QUAD $0xc2e801fb244576d5  // .quad -4402266457597708587
	QUAD $0x6b43527578c1110f  // .quad 7729112049988473103
	QUAD $0xf3a20279ed56d48a  // .quad -891147053569747830
	QUAD $0x830a13896b78aaa9  // .quad -9004363024039368023
	QUAD $0x9845418c345644d6  // .quad -7474495936122174250
	QUAD $0x23cc986bc656d553  // .quad 2579604275232953683
	QUAD $0xbe5691ef416bd60c  // .quad -4731433901725329908
	QUAD $0x2cbfbe86b7ec8aa8  // .quad 3224505344041192104
	QUAD $0xedec366b11c6cb8f  // .quad -1302606358729274481
	QUAD $0x7bf7d71432f3d6a9  // .quad 8932844867666826921
	QUAD $0x94b3a202eb1c3f39  // .quad -7731658001846878407
	QUAD $0xdaf5ccd93fb0cc53  // .quad -2669001970698630061
	QUAD $0xb9e08a83a5e34f07  // .quad -5052886483881210105
	QUAD $0xd1b3400f8f9cff68  // .quad -3336252463373287576
	QUAD $0xe858ad248f5c22c9  // .quad -1704422086424124727
	QUAD $0x23100809b9c21fa1  // .quad 2526528228819083169
	QUAD $0x91376c36d99995be  // .quad -7982792831656159810
	QUAD $0xabd40a0c2832a78a  // .quad -6065211750830921846
	QUAD $0xb58547448ffffb2d  // .quad -5366805021142811859
	QUAD $0x16c90c8f323f516c  // .quad 1641857348316123500
	QUAD $0xe2e69915b3fff9f9  // .quad -2096820258001126919
	QUAD $0xae3da7d97f6792e3  // .quad -5891368184943504669
	QUAD $0x8dd01fad907ffc3b  // .quad -8228041688891786181
	QUAD $0x99cd11cfdf41779c  // .quad -7364210231179380836
	QUAD $0xb1442798f49ffb4a  // .quad -5673366092687344822
	QUAD $0x40405643d711d583  // .quad 4629795266307937667
	QUAD $0xdd95317f31c7fa1d  // .quad -2480021597431793123
	QUAD $0x482835ea666b2572  // .quad 5199465050656154994
	QUAD $0x8a7d3eef7f1cfc52  // .quad -8467542526035952558
	QUAD $0xda3243650005eecf  // .quad -2724040723534582065
	QUAD $0xad1c8eab5ee43b66  // .quad -5972742139117552794
	QUAD $0x90bed43e40076a82  // .quad -8016736922845615486
	QUAD $0xd863b256369d4a40  // .quad -2854241655469553088
	QUAD $0x5a7744a6e804a291  // .quad 6518754469289960081
	QUAD $0x873e4f75e2224e68  // .quad -8701430062309552536
	QUAD $0x711515d0a205cb36  // .quad 8148443086612450102
	QUAD $0xa90de3535aaae202  // .quad -6265101559459552766
	QUAD $0x0d5a5b44ca873e03  // .quad 962181821410786819
	QUAD $0xd3515c2831559a83  // .quad -3219690930897053053
	QUAD $0xe858790afe9486c2  // .quad -1704479370831952190
	QUAD $0x8412d9991ed58091  // .quad -8929835859451740015
	QUAD $0x626e974dbe39a872  // .quad 7092772823314835570
	QUAD $0xa5178fff668ae0b6  // .quad -6550608805887287114
	QUAD $0xfb0a3d212dc8128f  // .quad -357406007711231345
	QUAD $0xce5d73ff402d98e3  // .quad -3576574988931720989
	QUAD $0x7ce66634bc9d0b99  // .quad 8999993282035256217
	QUAD $0x80fa687f881c7f8e  // .quad -9152888395723407474
	QUAD $0x1c1fffc1ebc44e80  // .quad 2026619565689294464
	QUAD $0xa139029f6a239f72  // .quad -6829424476226871438
	QUAD $0xa327ffb266b56220  // .quad -6690097579743157728
	QUAD $0xc987434744ac874e  // .quad -3925094576856201394
	QUAD $0x4bf1ff9f0062baa8  // .quad 5472436080603216552
	QUAD $0xfbe9141915d7a922  // .quad -294682202642863838
	QUAD $0x6f773fc3603db4a9  // .quad 8031958568804398249
	QUAD $0x9d71ac8fada6c9b5  // .quad -7101705404292871755
	QUAD $0xcb550fb4384d21d3  // .quad -3795109844276665901
	QUAD $0xc4ce17b399107c22  // .quad -4265445736938701790
	QUAD $0x7e2a53a146606a48  // .quad 9091170749936331336
	QUAD $0xf6019da07f549b2b  // .quad -720121152745989333
	QUAD $0x2eda7444cbfc426d  // .quad 3376138709496513133
	QUAD $0x99c102844f94e0fb  // .quad -7367604748107325189
	QUAD $0xfa911155fefb5308  // .quad -391512631556746488
	QUAD $0xc0314325637a1939  // .quad -4597819916706768583
	QUAD $0x793555ab7eba27ca  // .quad 8733981247408842698
	QUAD $0xf03d93eebc589f88  // .quad -1135588877456072824
	QUAD $0x4bc1558b2f3458de  // .quad 5458738279630526686
	QUAD $0x96267c7535b763b5  // .quad -7627272076051127371
	QUAD $0x9eb1aaedfb016f16  // .quad -7011635205744005354
	QUAD $0xbbb01b9283253ca2  // .quad -4922404076636521310
	QUAD $0x465e15a979c1cadc  // .quad 5070514048102157020
	QUAD $0xea9c227723ee8bcb  // .quad -1541319077368263733
	QUAD $0x0bfacd89ec191ec9  // .quad 863228270850154185
	QUAD $0x92a1958a7675175f  // .quad -7880853450996246689
	QUAD $0xcef980ec671f667b  // .quad -3532650679864695173
	QUAD $0xb749faed14125d36  // .quad -5239380795317920458
	QUAD $0x82b7e12780e7401a  // .quad -9027499368258256870
	QUAD $0xe51c79a85916f484  // .quad -1937539975720012668
	QUAD $0xd1b2ecb8b0908810  // .quad -3336344095947716592
	QUAD $0x8f31cc0937ae58d2  // .quad -8128491512466089774
	QUAD $0x861fa7e6dcb4aa15  // .quad -8782116138362033643
	QUAD $0xb2fe3f0b8599ef07  // .quad -5548928372155224313
	QUAD $0x67a791e093e1d49a  // .quad 7469098900757009562
	QUAD $0xdfbdcece67006ac9  // .quad -2324474446766642487
	QUAD $0xe0c8bb2c5c6d24e0  // .quad -2249342214667950880
	QUAD $0x8bd6a141006042bd  // .quad -8370325556870233411
	QUAD $0x58fae9f773886e18  // .quad 6411694268519837208
	QUAD $0xaecc49914078536d  // .quad -5851220927660403859
	QUAD $0xaf39a475506a899e  // .quad -5820440219632367202
	QUAD $0xda7f5bf590966848  // .quad -2702340141148116920
	QUAD $0x6d8406c952429603  // .quad 7891439908798240259
	QUAD $0x888f99797a5e012d  // .quad -8606491615858654931
	QUAD $0xc8e5087ba6d33b83  // .quad -3970758169284363389
	QUAD $0xaab37fd7d8f58178  // .quad -6146428501395930760
	QUAD $0xfb1e4a9a90880a64  // .quad -351761693178066332
	QUAD $0xd5605fcdcf32e1d6  // .quad -3071349608317525546
	QUAD $0x5cf2eea09a55067f  // .quad 6697677969404790399
	QUAD $0x855c3be0a17fcd26  // .quad -8837122532839535322
	QUAD $0xf42faa48c0ea481e  // .quad -851274575098787810
	QUAD $0xa6b34ad8c9dfc06f  // .quad -6434717147622031249
	QUAD $0xf13b94daf124da26  // .quad -1064093218873484762
	QUAD $0xd0601d8efc57b08b  // .quad -3431710416100151157
	QUAD $0x76c53d08d6b70858  // .quad 8558313775058847832
	QUAD $0x823c12795db6ce57  // .quad -9062348037703676329
	QUAD $0x54768c4b0c64ca6e  // .quad 6086206200396171886
	QUAD $0xa2cb1717b52481ed  // .quad -6716249028702207507
	QUAD $0xa9942f5dcf7dfd09  // .quad -6227300304786948855
	QUAD $0xcb7ddcdda26da268  // .quad -3783625267450371480
	QUAD $0xd3f93b35435d7c4c  // .quad -3172439362556298164
	QUAD $0xfe5d54150b090b02  // .quad -117845565885576446
	QUAD $0xc47bc5014a1a6daf  // .quad -4288617610811380305
	QUAD $0x9efa548d26e5a6e1  // .quad -6991182506319567135
	QUAD $0x359ab6419ca1091b  // .quad 3862600023340550427
	QUAD $0xc6b8e9b0709f109a  // .quad -4127292114472071014
	QUAD $0xc30163d203c94b62  // .quad -4395122007679087774
	QUAD $0xf867241c8cc6d4c0  // .quad -547429124662700864
	QUAD $0x79e0de63425dcf1d  // .quad 8782263791269039901
	QUAD $0x9b407691d7fc44f8  // .quad -7259672230555269896
	QUAD $0x985915fc12f542e4  // .quad -7468914334623251740
	QUAD $0xc21094364dfb5636  // .quad -4462904269766699466
	QUAD $0x3e6f5b7b17b2939d  // .quad 4498915137003099037
	QUAD $0xf294b943e17a2bc4  // .quad -966944318780986428
	QUAD $0xa705992ceecf9c42  // .quad -6411550076227838910
	QUAD $0x979cf3ca6cec5b5a  // .quad -7521869226879198374
	QUAD $0x50c6ff782a838353  // .quad 5820620459997365075
	QUAD $0xbd8430bd08277231  // .quad -4790650515171610063
	QUAD $0xa4f8bf5635246428  // .quad -6559282480285457368
	QUAD $0xece53cec4a314ebd  // .quad -1376627125537124675
	QUAD $0x871b7795e136be99  // .quad -8711237568605798759
	QUAD $0x940f4613ae5ed136  // .quad -7777920981101784778
	QUAD $0x28e2557b59846e3f  // .quad 2946011094524915263
	QUAD $0xb913179899f68584  // .quad -5110715207949843068
	QUAD $0x331aeada2fe589cf  // .quad 3682513868156144079
	QUAD $0xe757dd7ec07426e5  // .quad -1776707991509915931
	QUAD $0x3ff0d2c85def7621  // .quad 4607414176811284001
	QUAD $0x9096ea6f3848984f  // .quad -8027971522334779313
	QUAD $0x0fed077a756b53a9  // .quad 1147581702586717097
	QUAD $0xb4bca50b065abe63  // .quad -5423278384491086237
	QUAD $0xd3e8495912c62894  // .quad -3177208890193991532
	QUAD $0xe1ebce4dc7f16dfb  // .quad -2167411962186469893
	QUAD $0x64712dd7abbbd95c  // .quad 7237616480483531100
	QUAD $0x8d3360f09cf6e4bd  // .quad -8272161504007625539
	QUAD $0xbd8d794d96aacfb3  // .quad -4788037454677749837
	QUAD $0xb080392cc4349dec  // .quad -5728515861582144020
	QUAD $0xecf0d7a0fc5583a0  // .quad -1373360799919799392
	QUAD $0xdca04777f541c567  // .quad -2548958808550292121
	QUAD $0xf41686c49db57244  // .quad -858350499949874620
	QUAD $0x89e42caaf9491b60  // .quad -8510628282985014432
	QUAD $0x311c2875c522ced5  // .quad 3538747893490044629
	QUAD $0xac5d37d5b79b6239  // .quad -6026599335303880135
	QUAD $0x7d633293366b828b  // .quad 9035120885289943691
	QUAD $0xd77485cb25823ac7  // .quad -2921563150702462265
	QUAD $0xae5dff9c02033197  // .quad -5882264492762254953
	QUAD $0x86a8d39ef77164bc  // .quad -8743505996830120772
	QUAD $0xd9f57f830283fdfc  // .quad -2741144597525430788
	QUAD $0xa8530886b54dbdeb  // .quad -6317696477610263061
	QUAD $0xd072df63c324fd7b  // .quad -3426430746906788485
	QUAD $0xd267caa862a12d66  // .quad -3285434578585440922
	QUAD $0x4247cb9e59f71e6d  // .quad 4776009810824339053
	QUAD $0x8380dea93da4bc60  // .quad -8970925639256982432
	QUAD $0x52d9be85f074e608  // .quad 5970012263530423816
	QUAD $0xa46116538d0deb78  // .quad -6601971030643840136
	QUAD $0x67902e276c921f8b  // .quad 7462515329413029771
	QUAD $0xcd795be870516656  // .quad -3640777769877412266
	QUAD $0x00ba1cd8a3db53b6  // .quad 52386062455755702
	QUAD $0x806bd9714632dff6  // .quad -9193015133814464522
	QUAD $0x80e8a40eccd228a4  // .quad -9157889458785081180
	QUAD $0xa086cfcd97bf97f3  // .quad -6879582898840692749
	QUAD $0x6122cd128006b2cd  // .quad 6999382250228200141
	QUAD $0xc8a883c0fdaf7df0  // .quad -3987792605123478032
	QUAD $0x796b805720085f81  // .quad 8749227812785250177
	QUAD $0xfad2a4b13d1b5d6c  // .quad -373054737976959636
	QUAD $0xcbe3303674053bb0  // .quad -3755104653863994448
	QUAD $0x9cc3a6eec6311a63  // .quad -7150688238876681629
	QUAD $0xbedbfc4411068a9c  // .quad -4693880817329993060
	QUAD $0xc3f490aa77bd60fc  // .quad -4326674280168464132
	QUAD $0xee92fb5515482d44  // .quad -1255665003235103420
	QUAD $0xf4f1b4d515acb93b  // .quad -796656831783192261
	QUAD $0x751bdd152d4d1c4a  // .quad 8438581409832836170
	QUAD $0x991711052d8bf3c5  // .quad -7415439547505577019
	QUAD $0xd262d45a78a0635d  // .quad -3286831292991118499
	QUAD $0xbf5cd54678eef0b6  // .quad -4657613415954583370
	QUAD $0x86fb897116c87c34  // .quad -8720225134666286028
	QUAD $0xef340a98172aace4  // .quad -1210330751515841308
	QUAD $0xd45d35e6ae3d4da0  // .quad -3144297699952734816
	QUAD $0x9580869f0e7aac0e  // .quad -7673985747338482674
	QUAD $0x8974836059cca109  // .quad -8542058143368306423
	QUAD $0xbae0a846d2195712  // .quad -4980796165745715438
	QUAD $0x2bd1a438703fc94b  // .quad 3157485376071780683
	QUAD $0xe998d258869facd7  // .quad -1614309188754756393
	QUAD $0x7b6306a34627ddcf  // .quad 8890957387685944783
	QUAD $0x91ff83775423cc06  // .quad -7926472270612804602
	QUAD $0x1a3bc84c17b1d542  // .quad 1890324697752655170
	QUAD $0xb67f6455292cbf08  // .quad -5296404319838617848
	QUAD $0x20caba5f1d9e4a93  // .quad 2362905872190818963
	QUAD $0xe41f3d6a7377eeca  // .quad -2008819381370884406
	QUAD $0x547eb47b7282ee9c  // .quad 6088502188546649756
	QUAD $0x8e938662882af53e  // .quad -8173041140997884610
	QUAD $0xe99e619a4f23aa43  // .quad -1612744301171463613
	QUAD $0xb23867fb2a35b28d  // .quad -5604615407819967859
	QUAD $0x6405fa00e2ec94d4  // .quad 7207441660390446292
	QUAD $0xdec681f9f4c31f31  // .quad -2394083241347571919
	QUAD $0xde83bc408dd3dd04  // .quad -2412877989897052924
	QUAD $0x8b3c113c38f9f37e  // .quad -8413831053483314306
	QUAD $0x9624ab50b148d445  // .quad -7627783505798704059
	QUAD $0xae0b158b4738705e  // .quad -5905602798426754978
	QUAD $0x3badd624dd9b0957  // .quad 4300328673033783639
	QUAD $0xd98ddaee19068c76  // .quad -2770317479606055818
	QUAD $0xe54ca5d70a80e5d6  // .quad -1923980597781273130
	QUAD $0x87f8a8d4cfa417c9  // .quad -8648977452394866743
	QUAD $0x5e9fcf4ccd211f4c  // .quad 6818396289628184396
	QUAD $0xa9f6d30a038d1dbc  // .quad -6199535797066195524
	QUAD $0x7647c3200069671f  // .quad 8522995362035230495
	QUAD $0xd47487cc8470652b  // .quad -3137733727905356501
	QUAD $0x29ecd9f40041e073  // .quad 3021029092058325107
	QUAD $0x84c8d4dfd2c63f3b  // .quad -8878612607581929669
	QUAD $0xf468107100525890  // .quad -835399653354481520
	QUAD $0xa5fb0a17c777cf09  // .quad -6486579741050024183
	QUAD $0x7182148d4066eeb4  // .quad 8179122470161673908
	QUAD $0xcf79cc9db955c2cc  // .quad -3496538657885142324
	QUAD $0xc6f14cd848405530  // .quad -4111420493003729616
	QUAD $0x81ac1fe293d599bf  // .quad -9102865688819295809
	QUAD $0xb8ada00e5a506a7c  // .quad -5139275616254662020
	QUAD $0xa21727db38cb002f  // .quad -6766896092596731857
	QUAD $0xa6d90811f0e4851c  // .quad -6424094520318327524
	QUAD $0xca9cf1d206fdc03b  // .quad -3846934097318526917
	QUAD $0x908f4a166d1da663  // .quad -8030118150397909405
	QUAD $0xfd442e4688bd304a  // .quad -196981603220770742
	QUAD $0x9a598e4e043287fe  // .quad -7324666853212387330
	QUAD $0x9e4a9cec15763e2e  // .quad -7040642529654063570
	QUAD $0x40eff1e1853f29fd  // .quad 4679224488766679549
	QUAD $0xc5dd44271ad3cdba  // .quad -4189117143640191558
	QUAD $0xd12bee59e68ef47c  // .quad -3374341425896426372
	QUAD $0xf7549530e188c128  // .quad -624710411122851544
	QUAD $0x82bb74f8301958ce  // .quad -9026492418826348338
	QUAD $0x9a94dd3e8cf578b9  // .quad -7307973034592864071
	QUAD $0xe36a52363c1faf01  // .quad -2059743486678159615
	QUAD $0xc13a148e3032d6e7  // .quad -4523280274813692185
	QUAD $0xdc44e6c3cb279ac1  // .quad -2574679358347699519
	QUAD $0xf18899b1bc3f8ca1  // .quad -1042414325089727327
	QUAD $0x29ab103a5ef8c0b9  // .quad 3002511419460075705
	QUAD $0x96f5600f15a7b7e5  // .quad -7569037980822161435
	QUAD $0x7415d448f6b6f0e7  // .quad 8364825292752482535
	QUAD $0xbcb2b812db11a5de  // .quad -4849611457600313890
	QUAD $0x111b495b3464ad21  // .quad 1232659579085827361
	QUAD $0xebdf661791d60f56  // .quad -1450328303573004458
	QUAD $0xcab10dd900beec34  // .quad -3841273781498745804
	QUAD $0x936b9fcebb25c995  // .quad -7823984217374209643
	QUAD $0x3d5d514f40eea742  // .quad 4421779809981343554
	QUAD $0xb84687c269ef3bfb  // .quad -5168294253290374149
	QUAD $0x0cb4a5a3112a5112  // .quad 915538744049291538
	QUAD $0xe65829b3046b0afa  // .quad -1848681798185579782
	QUAD $0x47f0e785eaba72ab  // .quad 5183897733458195115
	QUAD $0x8ff71a0fe2c2e6dc  // .quad -8072955151507069220
	QUAD $0x59ed216765690f56  // .quad 6479872166822743894
	QUAD $0xb3f4e093db73a093  // .quad -5479507920956448621
	QUAD $0x306869c13ec3532c  // .quad 3488154190101041964
	QUAD $0xe0f218b8d25088b8  // .quad -2237698882768172872
	QUAD $0x1e414218c73a13fb  // .quad 2180096368813151227
	QUAD $0x8c974f7383725573  // .quad -8316090829371189901
	QUAD $0xe5d1929ef90898fa  // .quad -1886565557410948870
	QUAD $0xafbd2350644eeacf  // .quad -5783427518286599473
	QUAD $0xdf45f746b74abf39  // .quad -2358206946763686087
	QUAD $0xdbac6c247d62a583  // .quad -2617598379430861437
	QUAD $0x6b8bba8c328eb783  // .quad 7749492695127472003
	QUAD $0x894bc396ce5da772  // .quad -8553528014785370254
	QUAD $0x066ea92f3f326564  // .quad 463493832054564196
	QUAD $0xab9eb47c81f5114f  // .quad -6080224000054324913
	QUAD $0xc80a537b0efefebd  // .quad -4032318728359182659
	QUAD $0xd686619ba27255a2  // .quad -2988593981640518238
	QUAD $0xbd06742ce95f5f36  // .quad -4826042214438183114
	QUAD $0x8613fd0145877585  // .quad -8785400266166405755
	QUAD $0x2c48113823b73704  // .quad 3190819268807046916
	QUAD $0xa798fc4196e952e7  // .quad -6370064314280619289
	QUAD $0xf75a15862ca504c5  // .quad -623161932418579259
	QUAD $0xd17f3b51fca3a7a0  // .quad -3350894374423386208
	QUAD $0x9a984d73dbe722fb  // .quad -7307005235402693893
	QUAD $0x82ef85133de648c4  // .quad -9011838011655698236
	QUAD $0xc13e60d0d2e0ebba  // .quad -4522070525825979462
	QUAD $0xa3ab66580d5fdaf5  // .quad -6653111496142234891
	QUAD $0x318df905079926a8  // .quad 3570783879572301480
	QUAD $0xcc963fee10b7d1b3  // .quad -3704703351750405709
	QUAD $0xfdf17746497f7052  // .quad -148206168962011054
	QUAD $0xffbbcfe994e5c61f  // .quad -19193171260619233
	QUAD $0xfeb6ea8bedefa633  // .quad -92628855601256909
	QUAD $0x9fd561f1fd0f9bd3  // .quad -6929524759678968877
	QUAD $0xfe64a52ee96b8fc0  // .quad -115786069501571136
	QUAD $0xc7caba6e7c5382c8  // .quad -4050219931171323192
	QUAD $0x3dfdce7aa3c673b0  // .quad 4466953431550423984
	QUAD $0xf9bd690a1b68637b  // .quad -451088895536766085
	QUAD $0x06bea10ca65c084e  // .quad 486002885505321038
	QUAD $0x9c1661a651213e2d  // .quad -7199459587351560659
	QUAD $0x486e494fcff30a62  // .quad 5219189625309039202
	QUAD $0xc31bfa0fe5698db8  // .quad -4387638465762062920
	QUAD $0x5a89dba3c3efccfa  // .quad 6523987031636299002
	QUAD $0xf3e2f893dec3f126  // .quad -872862063775190746
	QUAD $0xf89629465a75e01c  // .quad -534194123654701028
	QUAD $0x986ddb5c6b3a76b7  // .quad -7463067817500576073
	QUAD $0xf6bbb397f1135823  // .quad -667742654568376285
	QUAD $0xbe89523386091465  // .quad -4717148753448332187
	QUAD $0x746aa07ded582e2c  // .quad 8388693718644305452
	QUAD $0xee2ba6c0678b597f  // .quad -1284749923383027329
	QUAD $0xa8c2a44eb4571cdc  // .quad -6286281471915778852
	QUAD $0x94db483840b717ef  // .quad -7720497729755473937
	QUAD $0x92f34d62616ce413  // .quad -7857851839894723565
	QUAD $0xba121a4650e4ddeb  // .quad -5038936143766954517
	QUAD $0x77b020baf9c81d17  // .quad 8624429273841147159
	QUAD $0xe896a0d7e51e1566  // .quad -1686984161281305242
	QUAD $0x0ace1474dc1d122e  // .quad 778582277723329070
	QUAD $0x915e2486ef32cd60  // .quad -7971894128441897632
	QUAD $0x0d819992132456ba  // .quad 973227847154161338
	QUAD $0xb5b5ada8aaff80b8  // .quad -5353181642124984136
	QUAD $0x10e1fff697ed6c69  // .quad 1216534808942701673
	QUAD $0xe3231912d5bf60e6  // .quad -2079791034228842266
	QUAD $0xca8d3ffa1ef463c1  // .quad -3851351762838199359
	QUAD $0x8df5efabc5979c8f  // .quad -8217398424034108273
	QUAD $0xbd308ff8a6b17cb2  // .quad -4814189703547749198
	QUAD $0xb1736b96b6fd83b3  // .quad -5660062011615247437
	QUAD $0xac7cb3f6d05ddbde  // .quad -6017737129434686498
	QUAD $0xddd0467c64bce4a0  // .quad -2463391496091671392
	QUAD $0x6bcdf07a423aa96b  // .quad 7768129340171790699
	QUAD $0x8aa22c0dbef60ee4  // .quad -8457148712698376476
	QUAD $0x86c16c98d2c953c6  // .quad -8736582398494813242
	QUAD $0xad4ab7112eb3929d  // .quad -5959749872445582691
	QUAD $0xe871c7bf077ba8b7  // .quad -1697355961263740745
	QUAD $0xd89d64d57a607744  // .quad -2838001322129590460
	QUAD $0x11471cd764ad4972  // .quad 1244995533423855986
	QUAD $0x87625f056c7c4a8b  // .quad -8691279853972075893
	QUAD $0xd598e40d3dd89bcf  // .quad -3055441601647567921
	QUAD $0xa93af6c6c79b5d2d  // .quad -6252413799037706963
	QUAD $0x4aff1d108d4ec2c3  // .quad 5404070034795315907
	QUAD $0xd389b47879823479  // .quad -3203831230369745799
	QUAD $0xcedf722a585139ba  // .quad -3539985255894009414
	QUAD $0x843610cb4bf160cb  // .quad -8919923546622172981
	QUAD $0xc2974eb4ee658828  // .quad -4424981569867511768
	QUAD $0xa54394fe1eedb8fe  // .quad -6538218414850328322
	QUAD $0x733d226229feea32  // .quad 8303831092947774002
	QUAD $0xce947a3da6a9273e  // .quad -3561087000135522498
	QUAD $0x0806357d5a3f525f  // .quad 578208414664970847
	QUAD $0x811ccc668829b887  // .quad -9143208402725783417
	QUAD $0xca07c2dcb0cf26f7  // .quad -3888925500096174345
	QUAD $0xa163ff802a3426a8  // .quad -6817324484979841368
	QUAD $0xfc89b393dd02f0b5  // .quad -249470856692830027
	QUAD $0xc9bcff6034c13052  // .quad -3909969587797413806
	QUAD $0xbbac2078d443ace2  // .quad -4923524589293425438
	QUAD $0xfc2c3f3841f17c67  // .quad -275775966319379353
	QUAD $0xd54b944b84aa4c0d  // .quad -3077202868308390899
	QUAD $0x9d9ba7832936edc0  // .quad -7089889006590693952
	QUAD $0x0a9e795e65d4df11  // .quad 765182433041899281
	QUAD $0xc5029163f384a931  // .quad -4250675239810979535
	QUAD $0x4d4617b5ff4a16d5  // .quad 5568164059729762005
	QUAD $0xf64335bcf065d37d  // .quad -701658031336336515
	QUAD $0x504bced1bf8e4e45  // .quad 5785945546544795205
	QUAD $0x99ea0196163fa42e  // .quad -7356065297226292178
	QUAD $0xe45ec2862f71e1d6  // .quad -1990940103673781802
	QUAD $0xc06481fb9bcf8d39  // .quad -4583395603105477319
	QUAD $0x5d767327bb4e5a4c  // .quad 6734696907262548556
	QUAD $0xf07da27a82c37088  // .quad -1117558485454458744
	QUAD $0x3a6a07f8d510f86f  // .quad 4209185567039092847
	QUAD $0x964e858c91ba2655  // .quad -7616003081050118571
	QUAD $0x890489f70a55368b  // .quad -8573576096483297653
	QUAD $0xbbe226efb628afea  // .quad -4908317832885260310
	QUAD $0x2b45ac74ccea842e  // .quad 3118087934678041646
	QUAD $0xeadab0aba3b2dbe5  // .quad -1523711272679187483
	QUAD $0x3b0b8bc90012929d  // .quad 4254647968387469981
	QUAD $0x92c8ae6b464fc96f  // .quad -7869848573065574033
	QUAD $0x09ce6ebb40173744  // .quad 706623942056949572
	QUAD $0xb77ada0617e3bbcb  // .quad -5225624697904579637
	QUAD $0xcc420a6a101d0515  // .quad -3728406090856200939
	QUAD $0xe55990879ddcaabd  // .quad -1920344853953336643
	QUAD $0x9fa946824a12232d  // .quad -6941939825212513491
	QUAD $0x8f57fa54c2a9eab6  // .quad -8117744561361917258
	QUAD $0x47939822dc96abf9  // .quad 5157633273766521849
	QUAD $0xb32df8e9f3546564  // .quad -5535494683275008668
	QUAD $0x59787e2b93bc56f7  // .quad 6447041592208152311
	QUAD $0xdff9772470297ebd  // .quad -2307682335666372931
	QUAD $0x57eb4edb3c55b65a  // .quad 6335244004343789146
	QUAD $0x8bfbea76c619ef36  // .quad -8359830487432564938
	QUAD $0xede622920b6b23f1  // .quad -1304317031425039375
	QUAD $0xaefae51477a06b03  // .quad -5838102090863318269
	QUAD $0xe95fab368e45eced  // .quad -1630396289281299219
	QUAD $0xdab99e59958885c4  // .quad -2685941595151759932
	QUAD $0x11dbcb0218ebb414  // .quad 1286845328412881940
	QUAD $0x88b402f7fd75539b  // .quad -8596242524610931813
	QUAD $0xd652bdc29f26a119  // .quad -3003129357911285479
	QUAD $0xaae103b5fcd2a881  // .quad -6133617137336276863
	QUAD $0x4be76d3346f0495f  // .quad 5469460339465668959
	QUAD $0xd59944a37c0752a2  // .quad -3055335403242958174
	QUAD $0x6f70a4400c562ddb  // .quad 8030098730593431003
	QUAD $0x857fcae62d8493a5  // .quad -8827113654667930715
	QUAD $0xcb4ccd500f6bb952  // .quad -3797434642040374958
	QUAD $0xa6dfbd9fb8e5b88e  // .quad -6422206049907525490
	QUAD $0x7e2000a41346a7a7  // .quad 9088264752731695015
	QUAD $0xd097ad07a71f26b2  // .quad -3416071543957018958
	QUAD $0x8ed400668c0c28c8  // .quad -8154892584824854328
	QUAD $0x825ecc24c873782f  // .quad -9052573742614218705
	QUAD $0x728900802f0f32fa  // .quad 8253128342678483706
	QUAD $0xa2f67f2dfa90563b  // .quad -6704031159840385477
	QUAD $0x4f2b40a03ad2ffb9  // .quad 5704724409920716729
	QUAD $0xcbb41ef979346bca  // .quad -3768352931373093942
	QUAD $0xe2f610c84987bfa8  // .quad -2092466524453879896
	QUAD $0xfea126b7d78186bc  // .quad -98755145788979524
	QUAD $0x0dd9ca7d2df4d7c9  // .quad 998051431430019017
	QUAD $0x9f24b832e6b0f436  // .quad -6979250993759194058
	QUAD $0x91503d1c79720dbb  // .quad -7975807747567252037
	QUAD $0xc6ede63fa05d3143  // .quad -4112377723771604669
	QUAD $0x75a44c6397ce912a  // .quad 8476984389250486570
	QUAD $0xf8a95fcf88747d94  // .quad -528786136287117932
	QUAD $0xc986afbe3ee11aba  // .quad -3925256793573221702
	QUAD $0x9b69dbe1b548ce7c  // .quad -7248020362820530564
	QUAD $0xfbe85badce996168  // .quad -294884973539139224
	QUAD $0xc24452da229b021b  // .quad -4448339435098275301
	QUAD $0xfae27299423fb9c3  // .quad -368606216923924029
	QUAD $0xf2d56790ab41c2a2  // .quad -948738275445456222
	QUAD $0xdccd879fc967d41a  // .quad -2536221894791146470
	QUAD $0x97c560ba6b0919a5  // .quad -7510490449794491995
	QUAD $0x5400e987bbc1c920  // .quad 6053094668365842720
	QUAD $0xbdb6b8e905cb600f  // .quad -4776427043815727089
	QUAD $0x290123e9aab23b68  // .quad 2954682317029915496
	QUAD $0xed246723473e3813  // .quad -1358847786342270957
	QUAD $0xf9a0b6720aaf6521  // .quad -459166561069996767
	QUAD $0x9436c0760c86e30b  // .quad -7766808894105001205
	QUAD $0xf808e40e8d5b3e69  // .quad -573958201337495959
	QUAD $0xb94470938fa89bce  // .quad -5096825099203863602
	QUAD $0xb60b1d1230b20e04  // .quad -5329133770099257852
	QUAD $0xe7958cb87392c2c2  // .quad -1759345355577441598
	QUAD $0xb1c6f22b5e6f48c2  // .quad -5636551615525730110
	QUAD $0x90bd77f3483bb9b9  // .quad -8017119874876982855
	QUAD $0x1e38aeb6360b1af3  // .quad 2177682517447613171
	QUAD $0xb4ecd5f01a4aa828  // .quad -5409713825168840664
	QUAD $0x25c6da63c38de1b0  // .quad 2722103146809516464
	QUAD $0xe2280b6c20dd5232  // .quad -2150456263033662926
	QUAD $0x579c487e5a38ad0e  // .quad 6313000485183335694
	QUAD $0x8d590723948a535f  // .quad -8261564192037121185
	QUAD $0x2d835a9df0c6d851  // .quad 3279564588051781713
	QUAD $0xb0af48ec79ace837  // .quad -5715269221619013577
	QUAD $0xf8e431456cf88e65  // .quad -512230283362660763
	QUAD $0xdcdb1b2798182244  // .quad -2532400508596379068
	QUAD $0x1b8e9ecb641b58ff  // .quad 1985699082112030975
	QUAD $0x8a08f0f8bf0f156b  // .quad -8500279345513818773
	QUAD $0xe272467e3d222f3f  // .quad -2129562165787349185
	QUAD $0xac8b2d36eed2dac5  // .quad -6013663163464885563
	QUAD $0x5b0ed81dcc6abb0f  // .quad 6561419329620589327
	QUAD $0xd7adf884aa879177  // .quad -2905392935903719049
	QUAD $0x98e947129fc2b4e9  // .quad -7428327965055601431
	QUAD $0x86ccbb52ea94baea  // .quad -8733399612580906262
	QUAD $0x3f2398d747b36224  // .quad 4549648098962661924
	QUAD $0xa87fea27a539e9a5  // .quad -6305063497298744923
	QUAD $0x8eec7f0d19a03aad  // .quad -8147997931578836307
	QUAD $0xd29fe4b18e88640e  // .quad -3269643353196043250
	QUAD $0x1953cf68300424ac  // .quad 1825030320404309164
	QUAD $0x83a3eeeef9153e89  // .quad -8961056123388608887
	QUAD $0x5fa8c3423c052dd7  // .quad 6892973918932774359
	QUAD $0xa48ceaaab75a8e2b  // .quad -6589634135808373205
	QUAD $0x3792f412cb06794d  // .quad 4004531380238580045
	QUAD $0xcdb02555653131b6  // .quad -3625356651333078602
	QUAD $0xe2bbd88bbee40bd0  // .quad -2108853905778275376
	QUAD $0x808e17555f3ebf11  // .quad -9183376934724255983
	QUAD $0x5b6aceaeae9d0ec4  // .quad 6587304654631931588
	QUAD $0xa0b19d2ab70e6ed6  // .quad -6867535149977932074
	QUAD $0xf245825a5a445275  // .quad -989241218564861323
	QUAD $0xc8de047564d20a8b  // .quad -3972732919045027189
	QUAD $0xeed6e2f0f0d56712  // .quad -1236551523206076654
	QUAD $0xfb158592be068d2e  // .quad -354230130378896082
	QUAD $0x55464dd69685606b  // .quad 6144684325637283947
	QUAD $0x9ced737bb6c4183d  // .quad -7138922859127891907
	QUAD $0xaa97e14c3c26b886  // .quad -6154202648235558778
	QUAD $0xc428d05aa4751e4c  // .quad -4311967555482476980
	QUAD $0xd53dd99f4b3066a8  // .quad -3081067291867060568
	QUAD $0xf53304714d9265df  // .quad -778273425925708321
	QUAD $0xe546a8038efe4029  // .quad -1925667057416912855
	QUAD $0x993fe2c6d07b7fab  // .quad -7403949918844649557
	QUAD $0xde98520472bdd033  // .quad -2407083821771141069
	QUAD $0xbf8fdb78849a5f96  // .quad -4643251380128424042
	QUAD $0x963e66858f6d4440  // .quad -7620540795641314240
	QUAD $0xef73d256a5c0f77c  // .quad -1192378206733142148
	QUAD $0xdde7001379a44aa8  // .quad -2456994988062127448
	QUAD $0x95a8637627989aad  // .quad -7662765406849295699
	QUAD $0x5560c018580d5d52  // .quad 6152128301777116498
	QUAD $0xbb127c53b17ec159  // .quad -4966770740134231719
	QUAD $0xaab8f01e6e10b4a6  // .quad -6144897678060768090
	QUAD $0xe9d71b689dde71af  // .quad -1596777406740401745
	QUAD $0xcab3961304ca70e8  // .quad -3840561048787980056
	QUAD $0x9226712162ab070d  // .quad -7915514906853832947
	QUAD $0x3d607b97c5fd0d22  // .quad 4422670725869800738
	QUAD $0xb6b00d69bb55c8d1  // .quad -5282707615139903279
	QUAD $0x8cb89a7db77c506a  // .quad -8306719647944912790
	QUAD $0xe45c10c42a2b3b05  // .quad -1991698500497491195
	QUAD $0x77f3608e92adb242  // .quad 8643358275316593218
	QUAD $0x8eb98a7a9a5b04e3  // .quad -8162340590452013853
	QUAD $0x55f038b237591ed3  // .quad 6192511825718353619
	QUAD $0xb267ed1940f1c61c  // .quad -5591239719637629412
	QUAD $0x6b6c46dec52f6688  // .quad 7740639782147942024
	QUAD $0xdf01e85f912e37a3  // .quad -2377363631119648861
	QUAD $0x2323ac4b3b3da015  // .quad 2532056854628769813
	QUAD $0x8b61313bbabce2c6  // .quad -8403381297090862394
	QUAD $0xabec975e0a0d081a  // .quad -6058300968568813542
	QUAD $0xae397d8aa96c1b77  // .quad -5892540602936190089
	QUAD $0x96e7bd358c904a21  // .quad -7572876210711016927
	QUAD $0xd9c7dced53c72255  // .quad -2753989735242849707
	QUAD $0x7e50d64177da2e54  // .quad 9102010423587778132
	QUAD $0x881cea14545c7575  // .quad -8638772612167862923
	QUAD $0xdde50bd1d5d0b9e9  // .quad -2457545025797441047
	QUAD $0xaa242499697392d2  // .quad -6186779746782440750
	QUAD $0x955e4ec64b44e864  // .quad -7683617300674189212
	QUAD $0xd4ad2dbfc3d07787  // .quad -3121788665050663033
	QUAD $0xbd5af13bef0b113e  // .quad -4802260812921368258
	QUAD $0x84ec3c97da624ab4  // .quad -8868646943297746252
	QUAD $0xecb1ad8aeacdd58e  // .quad -1391139997724322418
	QUAD $0xa6274bbdd0fadd61  // .quad -6474122660694794911
	QUAD $0x67de18eda5814af2  // .quad 7484447039699372786
	QUAD $0xcfb11ead453994ba  // .quad -3480967307441105734
	QUAD $0x80eacf948770ced7  // .quad -9157278655470055721
	QUAD $0x81ceb32c4b43fcf4  // .quad -9093133594791772940
	QUAD $0xa1258379a94d028d  // .quad -6834912300910181747
	QUAD $0xa2425ff75e14fc31  // .quad -6754730975062328271
	QUAD $0x096ee45813a04330  // .quad 679731660717048624
	QUAD $0xcad2f7f5359a3b3e  // .quad -3831727700400522434
	QUAD $0x8bca9d6e188853fc  // .quad -8373707460958465028
	QUAD $0xfd87b5f28300ca0d  // .quad -177973607073265139
	QUAD $0x775ea264cf55347d  // .quad 8601490892183123069
	QUAD $0x9e74d1b791e07e48  // .quad -7028762532061872568
	QUAD $0x95364afe032a819d  // .quad -7694880458480647779
	QUAD $0xc612062576589dda  // .quad -4174267146649952806
	QUAD $0x3a83ddbd83f52204  // .quad 4216457482181353988
	QUAD $0xf79687aed3eec551  // .quad -606147914885053103
	QUAD $0xc4926a9672793542  // .quad -4282243101277735614
	QUAD $0x9abe14cd44753b52  // .quad -7296371474444240046
	QUAD $0x75b7053c0f178293  // .quad 8482254178684994195
	QUAD $0xc16d9a0095928a27  // .quad -4508778324627912153
	QUAD $0x5324c68b12dd6338  // .quad 5991131704928854840
	QUAD $0xf1c90080baf72cb1  // .quad -1024286887357502287
	QUAD $0xd3f6fc16ebca5e03  // .quad -3173071712060547581
	QUAD $0x971da05074da7bee  // .quad -7557708332239520786
	QUAD $0x88f4bb1ca6bcf584  // .quad -8578025658503072380
	QUAD $0xbce5086492111aea  // .quad -4835449396872013078
	QUAD $0x2b31e9e3d06c32e5  // .quad 3112525982153323237
	QUAD $0xec1e4a7db69561a5  // .quad -1432625727662628443
	QUAD $0x3aff322e62439fcf  // .quad 4251171748059520975
	QUAD $0x9392ee8e921d5d07  // .quad -7812920107430224633
	QUAD $0x09befeb9fad487c2  // .quad 702278666647013314
	QUAD $0xb877aa3236a4b449  // .quad -5154464115860392887
	QUAD $0x4c2ebe687989a9b3  // .quad 5489534351736154547
	QUAD $0xe69594bec44de15b  // .quad -1831394126398103205
	QUAD $0x0f9d37014bf60a10  // .quad 1125115960621402640
	QUAD $0x901d7cf73ab0acd9  // .quad -8062150356639896359
	QUAD $0x538484c19ef38c94  // .quad 6018080969204141204
	QUAD $0xb424dc35095cd80f  // .quad -5466001927372482545
	QUAD $0x2865a5f206b06fb9  // .quad 2910915193077788601
	QUAD $0xe12e13424bb40e13  // .quad -2220816390788215277
	QUAD $0xf93f87b7442e45d3  // .quad -486521013540076077
	QUAD $0x8cbccc096f5088cb  // .quad -8305539271883716405
	QUAD $0xf78f69a51539d748  // .quad -608151266925095096
	QUAD $0xafebff0bcb24aafe  // .quad -5770238071427257602
	QUAD $0xb573440e5a884d1b  // .quad -5371875102083756773
	QUAD $0xdbe6fecebdedd5be  // .quad -2601111570856684098
	QUAD $0x31680a88f8953030  // .quad 3560107088838733872
	QUAD $0x89705f4136b4a597  // .quad -8543223759426509417
	QUAD $0xfdc20d2b36ba7c3d  // .quad -161552157378970563
	QUAD $0xabcc77118461cefc  // .quad -6067343680855748868
	QUAD $0x3d32907604691b4c  // .quad 4409745821703674700
	QUAD $0xd6bf94d5e57a42bc  // .quad -2972493582642298180
	QUAD $0xa63f9a49c2c1b10f  // .quad -6467280898289979121
	QUAD $0x8637bd05af6c69b5  // .quad -8775337516792518219
	QUAD $0x0fcf80dc33721d53  // .quad 1139270913992301907
	QUAD $0xa7c5ac471b478423  // .quad -6357485877563259869
	QUAD $0xd3c36113404ea4a8  // .quad -3187597375937010520
	QUAD $0xd1b71758e219652b  // .quad -3335171328526686933
	QUAD $0x645a1cac083126e9  // .quad 7231123676894144233
	QUAD $0x83126e978d4fdf3b  // .quad -9002011107970261189
	QUAD $0x3d70a3d70a3d70a3  // .quad 4427218577690292387
	QUAD $0xa3d70a3d70a3d70a  // .quad -6640827866535438582
	QUAD $0xcccccccccccccccc; QUAD $0xcccccccccccccccc  // .space 16, '\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc\xcc'
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x8000000000000000  // .quad -9223372036854775808
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xa000000000000000  // .quad -6917529027641081856
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xc800000000000000  // .quad -4035225266123964416
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xfa00000000000000  // .quad -432345564227567616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x9c40000000000000  // .quad -7187745005283311616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xc350000000000000  // .quad -4372995238176751616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xf424000000000000  // .quad -854558029293551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x9896800000000000  // .quad -7451627795949551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xbebc200000000000  // .quad -4702848726509551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xee6b280000000000  // .quad -1266874889709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x9502f90000000000  // .quad -7709325833709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xba43b74000000000  // .quad -5024971273709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xe8d4a51000000000  // .quad -1669528073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x9184e72a00000000  // .quad -7960984073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xb5e620f480000000  // .quad -5339544073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xe35fa931a0000000  // .quad -2062744073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x8e1bc9bf04000000  // .quad -8206744073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xb1a2bc2ec5000000  // .quad -5646744073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xde0b6b3a76400000  // .quad -2446744073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x8ac7230489e80000  // .quad -8446744073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xad78ebc5ac620000  // .quad -5946744073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xd8d726b7177a8000  // .quad -2821744073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x878678326eac9000  // .quad -8681119073709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xa968163f0a57b400  // .quad -6239712823709551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xd3c21bcecceda100  // .quad -3187955011209551616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0x84595161401484a0  // .quad -8910000909647051616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xa56fa5b99019a5c8  // .quad -6525815118631426616
	QUAD $0x0000000000000000  // .quad 0
	QUAD $0xcecb8f27f4200f3a  // .quad -3545582879861895366
	QUAD $0x4000000000000000  // .quad 4611686018427387904
	QUAD $0x813f3978f8940984  // .quad -9133518327554766460
	QUAD $0x5000000000000000  // .quad 5764607523034234880
	QUAD $0xa18f07d736b90be5  // .quad -6805211891016070171
	QUAD $0xa400000000000000  // .quad -6629298651489370112
	QUAD $0xc9f2c9cd04674ede  // .quad -3894828845342699810
	QUAD $0x4d00000000000000  // .quad 5548434740920451072
	QUAD $0xfc6f7c4045812296  // .quad -256850038250986858
	QUAD $0xf020000000000000  // .quad -1143914305352105984
	QUAD $0x9dc5ada82b70b59d  // .quad -7078060301547948643
	QUAD $0x6c28000000000000  // .quad 7793479155164643328
	QUAD $0xc5371912364ce305  // .quad -4235889358507547899
	QUAD $0xc732000000000000  // .quad -4093209111326359552
	QUAD $0xf684df56c3e01bc6  // .quad -683175679707046970
	QUAD $0x3c7f400000000000  // .quad 4359273333062107136
	QUAD $0x9a130b963a6c115c  // .quad -7344513827457986212
	QUAD $0x4b9f100000000000  // .quad 5449091666327633920
	QUAD $0xc097ce7bc90715b3  // .quad -4568956265895094861
	QUAD $0x1e86d40000000000  // .quad 2199678564482154496
	QUAD $0xf0bdc21abb48db20  // .quad -1099509313941480672
	QUAD $0x1314448000000000  // .quad 1374799102801346560
	QUAD $0x96769950b50d88f4  // .quad -7604722348854507276
	QUAD $0x17d955a000000000  // .quad 1718498878501683200
	QUAD $0xbc143fa4e250eb31  // .quad -4894216917640746191
	QUAD $0x5dcfab0800000000  // .quad 6759809616554491904
	QUAD $0xeb194f8e1ae525fd  // .quad -1506085128623544835
	QUAD $0x5aa1cae500000000  // .quad 6530724019560251392
	QUAD $0x92efd1b8d0cf37be  // .quad -7858832233030797378
	QUAD $0xf14a3d9e40000000  // .quad -1059967012404461568
	QUAD $0xb7abc627050305ad  // .quad -5211854272861108819
	QUAD $0x6d9ccd05d0000000  // .quad 7898413271349198848
	QUAD $0xe596b7b0c643c719  // .quad -1903131822648998119
	QUAD $0xe4820023a2000000  // .quad -1981020733047832576
	QUAD $0x8f7e32ce7bea5c6f  // .quad -8106986416796705681
	QUAD $0xdda2802c8a800000  // .quad -2476275916309790720
	QUAD $0xb35dbf821ae4f38b  // .quad -5522047002568494197
	QUAD $0xd50b2037ad200000  // .quad -3095344895387238400
	QUAD $0xe0352f62a19e306e  // .quad -2290872734783229842
	QUAD $0x4526f422cc340000  // .quad 4982938468024057856
	QUAD $0x8c213d9da502de45  // .quad -8349324486880600507
	QUAD $0x9670b12b7f410000  // .quad -7606384970252091392
	QUAD $0xaf298d050e4395d6  // .quad -5824969590173362730
	QUAD $0x3c0cdd765f114000  // .quad 4327076842467049472
	QUAD $0xdaf3f04651d47b4c  // .quad -2669525969289315508
	QUAD $0xa5880a69fb6ac800  // .quad -6518949010312869888
	QUAD $0x88d8762bf324cd0f  // .quad -8585982758446904049
	QUAD $0x8eea0d047a457a00  // .quad -8148686262891087360
	QUAD $0xab0e93b6efee0053  // .quad -6120792429631242157
	QUAD $0x72a4904598d6d880  // .quad 8260886245095692416
	QUAD $0xd5d238a4abe98068  // .quad -3039304518611664792
	QUAD $0x47a6da2b7f864750  // .quad 5163053903184807760
	QUAD $0x85a36366eb71f041  // .quad -8817094351773372351
	QUAD $0x999090b65f67d924  // .quad -7381240676301154012
	QUAD $0xa70c3c40a64e6c51  // .quad -6409681921289327535
	QUAD $0xfff4b4e3f741cf6d  // .quad -3178808521666707
	QUAD $0xd0cf4b50cfe20765  // .quad -3400416383184271515
	QUAD $0xbff8f10e7a8921a4  // .quad -4613672773753429596
	QUAD $0x82818f1281ed449f  // .quad -9042789267131251553
	QUAD $0xaff72d52192b6a0d  // .quad -5767090967191786995
	QUAD $0xa321f2d7226895c7  // .quad -6691800565486676537
	QUAD $0x9bf4f8a69f764490  // .quad -7208863708989733744
	QUAD $0xcbea6f8ceb02bb39  // .quad -3753064688430957767
	QUAD $0x02f236d04753d5b4  // .quad 212292400617608628
	QUAD $0xfee50b7025c36a08  // .quad -79644842111309304
	QUAD $0x01d762422c946590  // .quad 132682750386005392
	QUAD $0x9f4f2726179a2245  // .quad -6967307053960650171
	QUAD $0x424d3ad2b7b97ef5  // .quad 4777539456409894645
	QUAD $0xc722f0ef9d80aad6  // .quad -4097447799023424810
	QUAD $0xd2e0898765a7deb2  // .quad -3251447716342407502
	QUAD $0xf8ebad2b84e0d58b  // .quad -510123730351893109
	QUAD $0x63cc55f49f88eb2f  // .quad 7191217214140771119
	QUAD $0x9b934c3b330c8577  // .quad -7236356359111015049
	QUAD $0x3cbf6b71c76b25fb  // .quad 4377335499248575995
	QUAD $0xc2781f49ffcfa6d5  // .quad -4433759430461380907
	QUAD $0x8bef464e3945ef7a  // .quad -8363388681221443718
	QUAD $0xf316271c7fc3908a  // .quad -930513269649338230
	QUAD $0x97758bf0e3cbb5ac  // .quad -7532960934977096276
	QUAD $0x97edd871cfda3a56  // .quad -7499099821171918250
	QUAD $0x3d52eeed1cbea317  // .quad 4418856886560793367
	QUAD $0xbde94e8e43d0c8ec  // .quad -4762188758037509908
	QUAD $0x4ca7aaa863ee4bdd  // .quad 5523571108200991709
	QUAD $0xed63a231d4c4fb27  // .quad -1341049929119499481
	QUAD $0x8fe8caa93e74ef6a  // .quad -8076983103442849942
	QUAD $0x945e455f24fb1cf8  // .quad -7755685233340769032
	QUAD $0xb3e2fd538e122b44  // .quad -5484542860876174524
	QUAD $0xb975d6b6ee39e436  // .quad -5082920523248573386
	QUAD $0x60dbbca87196b616  // .quad 6979379479186945558
	QUAD $0xe7d34c64a9c85d44  // .quad -1741964635633328828
	QUAD $0xbc8955e946fe31cd  // .quad -4861259862362934835
	QUAD $0x90e40fbeea1d3a4a  // .quad -8006256924911912374
	QUAD $0x6babab6398bdbe41  // .quad 7758483227328495169
	QUAD $0xb51d13aea4a488dd  // .quad -5396135137712502563
	QUAD $0xc696963c7eed2dd1  // .quad -4136954021121544751
	QUAD $0xe264589a4dcdab14  // .quad -2133482903713240300
	QUAD $0xfc1e1de5cf543ca2  // .quad -279753253987271518
	QUAD $0x8d7eb76070a08aec  // .quad -8250955842461857044
	QUAD $0x3b25a55f43294bcb  // .quad 4261994450943298507
	QUAD $0xb0de65388cc8ada8  // .quad -5702008784649933400
	QUAD $0x49ef0eb713f39ebe  // .quad 5327493063679123134
	QUAD $0xdd15fe86affad912  // .quad -2515824962385028846
	QUAD $0x6e3569326c784337  // .quad 7941369183226839863
	QUAD $0x8a2dbf142dfcc7ab  // .quad -8489919629131724885
	QUAD $0x49c2c37f07965404  // .quad 5315025460606161924
	QUAD $0xacb92ed9397bf996  // .quad -6000713517987268202
	QUAD $0xdc33745ec97be906  // .quad -2579590211097073402
	QUAD $0xd7e77a8f87daf7fb  // .quad -2889205879056697349
	QUAD $0x69a028bb3ded71a3  // .quad 7611128154919104931
	QUAD $0x86f0ac99b4e8dafd  // .quad -8723282702051517699
	QUAD $0xc40832ea0d68ce0c  // .quad -4321147861633282548
	QUAD $0xa8acd7c0222311bc  // .quad -6292417359137009220
	QUAD $0xf50a3fa490c30190  // .quad -789748808614215280
	QUAD $0xd2d80db02aabd62b  // .quad -3253835680493873621
	QUAD $0x792667c6da79e0fa  // .quad 8729779031470891258
	QUAD $0x83c7088e1aab65db  // .quad -8951176327949752869
	QUAD $0x577001b891185938  // .quad 6300537770911226168
	QUAD $0xa4b8cab1a1563f52  // .quad -6577284391509803182
	QUAD $0xed4c0226b55e6f86  // .quad -1347699823215743098
	QUAD $0xcde6fd5e09abcf26  // .quad -3609919470959866074
	QUAD $0x544f8158315b05b4  // .quad 6075216638131242420
	QUAD $0x80b05e5ac60b6178  // .quad -9173728696990998152
	QUAD $0x696361ae3db1c721  // .quad 7594020797664053025
	QUAD $0xa0dc75f1778e39d6  // .quad -6855474852811359786
	QUAD $0x03bc3a19cd1e38e9  // .quad 269153960225290473
	QUAD $0xc913936dd571c84c  // .quad -3957657547586811828
	QUAD $0x04ab48a04065c723  // .quad 336442450281613091
	QUAD $0xfb5878494ace3a5f  // .quad -335385916056126881
	QUAD $0x62eb0d64283f9c76  // .quad 7127805559067090038
	QUAD $0x9d174b2dcec0e47b  // .quad -7127145225176161157
	QUAD $0x3ba5d0bd324f8394  // .quad 4298070930406474644
	QUAD $0xc45d1df942711d9a  // .quad -4297245513042813542
	QUAD $0xca8f44ec7ee36479  // .quad -3850783373846682503
	QUAD $0xf5746577930d6500  // .quad -759870872876129024
	QUAD $0x7e998b13cf4e1ecb  // .quad 9122475437414293195
	QUAD $0x9968bf6abbe85f20  // .quad -7392448323188662496
	QUAD $0x9e3fedd8c321a67e  // .quad -7043649776941685122
	QUAD $0xbfc2ef456ae276e8  // .quad -4628874385558440216
	QUAD $0xc5cfe94ef3ea101e  // .quad -4192876202749718498
	QUAD $0xefb3ab16c59b14a2  // .quad -1174406963520662366
	QUAD $0xbba1f1d158724a12  // .quad -4926390635932268014
	QUAD $0x95d04aee3b80ece5  // .quad -7651533379841495835
	QUAD $0x2a8a6e45ae8edc97  // .quad 3065383741939440791
	QUAD $0xbb445da9ca61281f  // .quad -4952730706374481889
	QUAD $0xf52d09d71a3293bd  // .quad -779956341003086915
	QUAD $0xea1575143cf97226  // .quad -1579227364540714458
	QUAD $0x593c2626705f9c56  // .quad 6430056314514152534
	QUAD $0x924d692ca61be758  // .quad -7904546130479028392
	QUAD $0x6f8b2fb00c77836c  // .quad 8037570393142690668
	QUAD $0xb6e0c377cfa2e12e  // .quad -5268996644671397586
	QUAD $0x0b6dfb9c0f956447  // .quad 823590954573587527
	QUAD $0xe498f455c38b997a  // .quad -1974559787411859078
	QUAD $0x4724bd4189bd5eac  // .quad 5126430365035880108
	QUAD $0x8edf98b59a373fec  // .quad -8151628894773493780
	QUAD $0x58edec91ec2cb657  // .quad 6408037956294850135
	QUAD $0xb2977ee300c50fe7  // .quad -5577850100039479321
	QUAD $0x2f2967b66737e3ed  // .quad 3398361426941174765
	QUAD $0xdf3d5e9bc0f653e1  // .quad -2360626606621961247
	QUAD $0xbd79e0d20082ee74  // .quad -4793553135802847628
	QUAD $0x8b865b215899f46c  // .quad -8392920656779807636
	QUAD $0xecd8590680a3aa11  // .quad -1380255401326171631
	QUAD $0xae67f1e9aec07187  // .quad -5879464802547371641
	QUAD $0xe80e6f4820cc9495  // .quad -1725319251657714539
	QUAD $0xda01ee641a708de9  // .quad -2737644984756826647
	QUAD $0x3109058d147fdcdd  // .quad 3533361486141316317
	QUAD $0x884134fe908658b2  // .quad -8628557143114098510
	QUAD $0xbd4b46f0599fd415  // .quad -4806670179178130411
	QUAD $0xaa51823e34a7eede  // .quad -6174010410465235234
	QUAD $0x6c9e18ac7007c91a  // .quad 7826720331309500698
	QUAD $0xd4e5e2cdc1d1ea96  // .quad -3105826994654156138
	QUAD $0x03e2cf6bc604ddb0  // .quad 280014188641050032
	QUAD $0x850fadc09923329e  // .quad -8858670899299929442
	QUAD $0x84db8346b786151c  // .quad -8873354301053463268
	QUAD $0xa6539930bf6bff45  // .quad -6461652605697523899
	QUAD $0xe612641865679a63  // .quad -1868320839462053277
	QUAD $0xcfe87f7cef46ff16  // .quad -3465379738694516970
	QUAD $0x4fcb7e8f3f60c07e  // .quad 5749828502977298558
	QUAD $0x81f14fae158c5f6e  // .quad -9083391364325154962
	QUAD $0xe3be5e330f38f09d  // .quad -2036086408133152611
	QUAD $0xa26da3999aef7749  // .quad -6742553186979055799
	QUAD $0x5cadf5bfd3072cc5  // .quad 6678264026688335045
	QUAD $0xcb090c8001ab551c  // .quad -3816505465296431844
	QUAD $0x73d9732fc7c8f7f6  // .quad 8347830033360418806
	QUAD $0xfdcb4fa002162a63  // .quad -158945813193151901
	QUAD $0x2867e7fddcdd9afa  // .quad 2911550761636567802
	QUAD $0x9e9f11c4014dda7e  // .quad -7016870160886801794
	QUAD $0xb281e1fd541501b8  // .quad -5583933584809066056
	QUAD $0xc646d63501a1511d  // .quad -4159401682681114339
	QUAD $0x1f225a7ca91a4226  // .quad 2243455055843443238
	QUAD $0xf7d88bc24209a565  // .quad -587566084924005019
	QUAD $0x3375788de9b06958  // .quad 3708002419115845976
	QUAD $0x9ae757596946075f  // .quad -7284757830718584993
	QUAD $0x0052d6b1641c83ae  // .quad 23317005467419566
	QUAD $0xc1a12d2fc3978937  // .quad -4494261269970843337
	QUAD $0xc0678c5dbd23a49a  // .quad -4582539761593113446
	QUAD $0xf209787bb47d6b84  // .quad -1006140569036166268
	QUAD $0xf840b7ba963646e0  // .quad -558244341782001952
	QUAD $0x9745eb4d50ce6332  // .quad -7546366883288685774
	QUAD $0xb650e5a93bc3d898  // .quad -5309491445654890344
	QUAD $0xbd176620a501fbff  // .quad -4821272585683469313
	QUAD $0xa3e51f138ab4cebe  // .quad -6636864307068612930
	QUAD $0xec5d3fa8ce427aff  // .quad -1414904713676948737
	QUAD $0xc66f336c36b10137  // .quad -4148040191917883081
	QUAD $0x93ba47c980e98cdf  // .quad -7801844473689174817
	QUAD $0xb80b0047445d4184  // .quad -5185050239897353852
	QUAD $0xb8a8d9bbe123f017  // .quad -5140619573684080617
	QUAD $0xa60dc059157491e5  // .quad -6481312799871692315
	QUAD $0xe6d3102ad96cec1d  // .quad -1814088448677712867
	QUAD $0x87c89837ad68db2f  // .quad -8662506518347195601
	QUAD $0x9043ea1ac7e41392  // .quad -8051334308064652398
	QUAD $0x29babe4598c311fb  // .quad 3006924907348169211
	QUAD $0xb454e4a179dd1877  // .quad -5452481866653427593
	QUAD $0xf4296dd6fef3d67a  // .quad -853029884242176390
	QUAD $0xe16a1dc9d8545e94  // .quad -2203916314889396588
	QUAD $0x1899e4a65f58660c  // .quad 1772699331562333708
	QUAD $0x8ce2529e2734bb1d  // .quad -8294976724446954723
	QUAD $0x5ec05dcff72e7f8f  // .quad 6827560182880305039
	QUAD $0xb01ae745b101e9e4  // .quad -5757034887131305500
	QUAD $0x76707543f4fa1f73  // .quad 8534450228600381299
	QUAD $0xdc21a1171d42645d  // .quad -2584607590486743971
	QUAD $0x6a06494a791c53a8  // .quad 7639874402088932264
	QUAD $0x899504ae72497eba  // .quad -8532908771695296838
	QUAD $0x0487db9d17636892  // .quad 326470965756389522
	QUAD $0xabfa45da0edbde69  // .quad -6054449946191733143
	QUAD $0x45a9d2845d3c42b6  // .quad 5019774725622874806
	QUAD $0xd6f8d7509292d603  // .quad -2956376414312278525
	QUAD $0x0b8a2392ba45a9b2  // .quad 831516194300602802
	QUAD $0x865b86925b9bc5c2  // .quad -8765264286586255934
	QUAD $0x8e6cac7768d7141e  // .quad -8183976793979022306
	QUAD $0xa7f26836f282b732  // .quad -6344894339805432014
	QUAD $0x3207d795430cd926  // .quad 3605087062808385830
	QUAD $0xd1ef0244af2364ff  // .quad -3319431906329402113
	QUAD $0x7f44e6bd49e807b8  // .quad 9170708441896323000
	QUAD $0x8335616aed761f1f  // .quad -8992173969096958177
	QUAD $0x5f16206c9c6209a6  // .quad 6851699533943015846
	QUAD $0xa402b9c5a8d3a6e7  // .quad -6628531442943809817
	QUAD $0x36dba887c37a8c0f  // .quad 3952938399001381903
	QUAD $0xcd036837130890a1  // .quad -3673978285252374367
	QUAD $0xc2494954da2c9789  // .quad -4446942528265218167
	QUAD $0x802221226be55a64  // .quad -9213765455923815836
	QUAD $0xf2db9baa10b7bd6c  // .quad -946992141904134804
	QUAD $0xa02aa96b06deb0fd  // .quad -6905520801477381891
	QUAD $0x6f92829494e5acc7  // .quad 8039631859474607303
	QUAD $0xc83553c5c8965d3d  // .quad -4020214983419339459
	QUAD $0xcb772339ba1f17f9  // .quad -3785518230938904583
	QUAD $0xfa42a8b73abbf48c  // .quad -413582710846786420
	QUAD $0xff2a760414536efb  // .quad -60105885123121413
	QUAD $0x9c69a97284b578d7  // .quad -7176018221920323369
	QUAD $0xfef5138519684aba  // .quad -75132356403901766
	QUAD $0xc38413cf25e2d70d  // .quad -4358336758973016307
	QUAD $0x7eb258665fc25d69  // .quad 9129456591349898601
	QUAD $0xf46518c2ef5b8cd1  // .quad -836234930288882479
	QUAD $0xef2f773ffbd97a61  // .quad -1211618658047395231
	QUAD $0x98bf2f79d5993802  // .quad -7440175859071633406
	QUAD $0xaafb550ffacfd8fa  // .quad -6126209340986631942
	QUAD $0xbeeefb584aff8603  // .quad -4688533805412153853
	QUAD $0x95ba2a53f983cf38  // .quad -7657761676233289928
	QUAD $0xeeaaba2e5dbf6784  // .quad -1248981238337804412
	QUAD $0xdd945a747bf26183  // .quad -2480258038432112253
	QUAD $0x952ab45cfa97a0b2  // .quad -7698142301602209614
	QUAD $0x94f971119aeef9e4  // .quad -7712008566467528220
	QUAD $0xba756174393d88df  // .quad -5010991858575374113
	QUAD $0x7a37cd5601aab85d  // .quad 8806733365625141341
	QUAD $0xe912b9d1478ceb17  // .quad -1652053804791829737
	QUAD $0xac62e055c10ab33a  // .quad -6025006692552756422
	QUAD $0x91abb422ccb812ee  // .quad -7950062655635975442
	QUAD $0x577b986b314d6009  // .quad 6303799689591218185
	QUAD $0xb616a12b7fe617aa  // .quad -5325892301117581398
	QUAD $0xed5a7e85fda0b80b  // .quad -1343622424865753077
	QUAD $0xe39c49765fdf9d94  // .quad -2045679357969588844
	QUAD $0x14588f13be847307  // .quad 1466078993672598279
	QUAD $0x8e41ade9fbebc27d  // .quad -8196078626372074883
	QUAD $0x596eb2d8ae258fc8  // .quad 6444284760518135752
	QUAD $0xb1d219647ae6b31c  // .quad -5633412264537705700
	QUAD $0x6fca5f8ed9aef3bb  // .quad 8055355950647669691
	QUAD $0xde469fbd99a05fe3  // .quad -2430079312244744221
	QUAD $0x25de7bb9480d5854  // .quad 2728754459941099604
	QUAD $0x8aec23d680043bee  // .quad -8436328597794046994
	QUAD $0xaf561aa79a10ae6a  // .quad -5812428961928401302
	QUAD $0xada72ccc20054ae9  // .quad -5933724728815170839
	QUAD $0x1b2ba1518094da04  // .quad 1957835834444274180
	QUAD $0xd910f7ff28069da4  // .quad -2805469892591575644
	QUAD $0x90fb44d2f05d0842  // .quad -7999724640327104446
	QUAD $0x87aa9aff79042286  // .quad -8670947710510816634
	QUAD $0x353a1607ac744a53  // .quad 3835402254873283155
	QUAD $0xa99541bf57452b28  // .quad -6226998619711132888
	QUAD $0x42889b8997915ce8  // .quad 4794252818591603944
	QUAD $0xd3fa922f2d1675f2  // .quad -3172062256211528206
	QUAD $0x69956135febada11  // .quad 7608094030047140369
	QUAD $0x847c9b5d7c2e09b7  // .quad -8900067937773286985
	QUAD $0x43fab9837e699095  // .quad 4898431519131537557
	QUAD $0xa59bc234db398c25  // .quad -6513398903789220827
	QUAD $0x94f967e45e03f4bb  // .quad -7712018656367741765
	QUAD $0xcf02b2c21207ef2e  // .quad -3530062611309138130
	QUAD $0x1d1be0eebac278f5  // .quad 2097517367411243253
	QUAD $0x8161afb94b44f57d  // .quad -9123818159709293187
	QUAD $0x6462d92a69731732  // .quad 7233582727691441970
	QUAD $0xa1ba1ba79e1632dc  // .quad -6793086681209228580
	QUAD $0x7d7b8f7503cfdcfe  // .quad 9041978409614302462
	QUAD $0xca28a291859bbf93  // .quad -3879672333084147821
	QUAD $0x5cda735244c3d43e  // .quad 6690786993590490174
	QUAD $0xfcb2cb35e702af78  // .quad -237904397927796872
	QUAD $0x3a0888136afa64a7  // .quad 4181741870994056359
	QUAD $0x9defbf01b061adab  // .quad -7066219276345954901
	QUAD $0x088aaa1845b8fdd0  // .quad 615491320315182544
	QUAD $0xc56baec21c7a1916  // .quad -4221088077005055722
	QUAD $0x8aad549e57273d45  // .quad -8454007886460797627
	QUAD $0xf6c69a72a3989f5b  // .quad -664674077828931749
	QUAD $0x36ac54e2f678864b  // .quad 3939617107816777291
	QUAD $0x9a3c2087a63f6399  // .quad -7332950326284164199
	QUAD $0x84576a1bb416a7dd  // .quad -8910536670511192099
	QUAD $0xc0cb28a98fcf3c7f  // .quad -4554501889427817345
	QUAD $0x656d44a2a11c51d5  // .quad 7308573235570561493
	QUAD $0xf0fdf2d3f3c30b9f  // .quad -1081441343357383777
	QUAD $0x9f644ae5a4b1b325  // .quad -6961356773836868827
	QUAD $0x969eb7c47859e743  // .quad -7593429867239446717
	QUAD $0x873d5d9f0dde1fee  // .quad -8701695967296086034
	QUAD $0xbc4665b596706114  // .quad -4880101315621920492
	QUAD $0xa90cb506d155a7ea  // .quad -6265433940692719638
	QUAD $0xeb57ff22fc0c7959  // .quad -1488440626100012711
	QUAD $0x09a7f12442d588f2  // .quad 695789805494438130
	QUAD $0x9316ff75dd87cbd8  // .quad -7847804418953589800
	QUAD $0x0c11ed6d538aeb2f  // .quad 869737256868047663
	QUAD $0xb7dcbf5354e9bece  // .quad -5198069505264599346
	QUAD $0x8f1668c8a86da5fa  // .quad -8136200465769716230
	QUAD $0xe5d3ef282a242e81  // .quad -1885900863153361279
	QUAD $0xf96e017d694487bc  // .quad -473439272678684740
	QUAD $0x8fa475791a569d10  // .quad -8096217067111932656
	QUAD $0x37c981dcc395a9ac  // .quad 4019886927579031980
	QUAD $0xb38d92d760ec4455  // .quad -5508585315462527915
	QUAD $0x85bbe253f47b1417  // .quad -8810199395808373737
	QUAD $0xe070f78d3927556a  // .quad -2274045625900771990
	QUAD $0x93956d7478ccec8e  // .quad -7812217631593927538
	QUAD $0x8c469ab843b89562  // .quad -8338807543829064350
	QUAD $0x387ac8d1970027b2  // .quad 4069786015789754290
	QUAD $0xaf58416654a6babb  // .quad -5811823411358942533
	QUAD $0x06997b05fcc0319e  // .quad 475546501309804958
	QUAD $0xdb2e51bfe9d0696a  // .quad -2653093245771290262
	QUAD $0x441fece3bdf81f03  // .quad 4908902581746016003
	QUAD $0x88fcf317f22241e2  // .quad -8575712306248138270
	QUAD $0xd527e81cad7626c3  // .quad -3087243809672255805
	QUAD $0xab3c2fddeeaad25a  // .quad -6107954364382784934
	QUAD $0x8a71e223d8d3b074  // .quad -8470740780517707660
	QUAD $0xd60b3bd56a5586f1  // .quad -3023256937051093263
	QUAD $0xf6872d5667844e49  // .quad -682526969396179383
	QUAD $0x85c7056562757456  // .quad -8807064613298015146
	QUAD $0xb428f8ac016561db  // .quad -5464844730172612133
	QUAD $0xa738c6bebb12d16c  // .quad -6397144748195131028
	QUAD $0xe13336d701beba52  // .quad -2219369894288377262
	QUAD $0xd106f86e69d785c7  // .quad -3384744916816525881
	QUAD $0xecc0024661173473  // .quad -1387106183930235789
	QUAD $0x82a45b450226b39c  // .quad -9032994600651410532
	QUAD $0x27f002d7f95d0190  // .quad 2877803288514593168
	QUAD $0xa34d721642b06084  // .quad -6679557232386875260
	QUAD $0x31ec038df7b441f4  // .quad 3597254110643241460
	QUAD $0xcc20ce9bd35c78a5  // .quad -3737760522056206171
	QUAD $0x7e67047175a15271  // .quad 9108253656731439729
	QUAD $0xff290242c83396ce  // .quad -60514634142869810
	QUAD $0x0f0062c6e984d386  // .quad 1080972517029761926
	QUAD $0x9f79a169bd203e41  // .quad -6955350673980375487
	QUAD $0x52c07b78a3e60868  // .quad 5962901664714590312
	QUAD $0xc75809c42c684dd1  // .quad -4082502324048081455
	QUAD $0xa7709a56ccdf8a82  // .quad -6381430974388925822
	QUAD $0xf92e0c3537826145  // .quad -491441886632713915
	QUAD $0x88a66076400bb691  // .quad -8600080377420466543
	QUAD $0x9bbcc7a142b17ccb  // .quad -7224680206786528053
	QUAD $0x6acff893d00ea435  // .quad 7696643601933968437
	QUAD $0xc2abf989935ddbfe  // .quad -4419164240055772162
	QUAD $0x0583f6b8c4124d43  // .quad 397432465562684739
	QUAD $0xf356f7ebf83552fe  // .quad -912269281642327298
	QUAD $0xc3727a337a8b704a  // .quad -4363290727450709942
	QUAD $0x98165af37b2153de  // .quad -7487697328667536418
	QUAD $0x744f18c0592e4c5c  // .quad 8380944645968776284
	QUAD $0xbe1bf1b059e9a8d6  // .quad -4747935642407032618
	QUAD $0x1162def06f79df73  // .quad 1252808770606194547
	QUAD $0xeda2ee1c7064130c  // .quad -1323233534581402868
	QUAD $0x8addcb5645ac2ba8  // .quad -8440366555225904216
	QUAD $0x9485d4d1c63e8be7  // .quad -7744549986754458649
	QUAD $0x6d953e2bd7173692  // .quad 7896285879677171346
	QUAD $0xb9a74a0637ce2ee1  // .quad -5069001465015685407
	QUAD $0xc8fa8db6ccdd0437  // .quad -3964700705685699529
	QUAD $0xe8111c87c5c1ba99  // .quad -1724565812842218855
	QUAD $0x1d9c9892400a22a2  // .quad 2133748077373825698
	QUAD $0x910ab1d4db9914a0  // .quad -7995382660667468640
	QUAD $0x2503beb6d00cab4b  // .quad 2667185096717282123
	QUAD $0xb54d5e4a127f59c8  // .quad -5382542307406947896
	QUAD $0x2e44ae64840fd61d  // .quad 3333981370896602653
	QUAD $0xe2a0b5dc971f303a  // .quad -2116491865831296966
	QUAD $0x5ceaecfed289e5d2  // .quad 6695424375237764562
	QUAD $0x8da471a9de737e24  // .quad -8240336443785642460
	QUAD $0x7425a83e872c5f47  // .quad 8369280469047205703
	QUAD $0xb10d8e1456105dad  // .quad -5688734536304665171
	QUAD $0xd12f124e28f77719  // .quad -3373457468973156583
	QUAD $0xdd50f1996b947518  // .quad -2499232151953443560
	QUAD $0x82bd6b70d99aaa6f  // .quad -9025939945749304721
	QUAD $0x8a5296ffe33cc92f  // .quad -8479549122611984081
	QUAD $0x636cc64d1001550b  // .quad 7164319141522920715
	QUAD $0xace73cbfdc0bfb7b  // .quad -5987750384837592197
	QUAD $0x3c47f7e05401aa4e  // .quad 4343712908476262990
	QUAD $0xd8210befd30efa5a  // .quad -2873001962619602342
	QUAD $0x65acfaec34810a71  // .quad 7326506586225052273
	QUAD $0x8714a775e3e95c78  // .quad -8713155254278333320
	QUAD $0x7f1839a741a14d0d  // .quad 9158133232781315341
	QUAD $0xa8d9d1535ce3b396  // .quad -6279758049420528746
	QUAD $0x1ede48111209a050  // .quad 2224294504121868368
	QUAD $0xd31045a8341ca07c  // .quad -3238011543348273028
	QUAD $0x934aed0aab460432  // .quad -7833187971778608078
	QUAD $0x83ea2b892091e44d  // .quad -8941286242233752499
	QUAD $0xf81da84d5617853f  // .quad -568112927868484289
	QUAD $0xa4e4b66b68b65d60  // .quad -6564921784364802720
	QUAD $0x36251260ab9d668e  // .quad 3901544858591782542
	QUAD $0xce1de40642e3f4b9  // .quad -3594466212028615495
	QUAD $0xc1d72b7c6b426019  // .quad -4479063491021217767
	QUAD $0x80d2ae83e9ce78f3  // .quad -9164070410158966541
	QUAD $0xb24cf65b8612f81f  // .quad -5598829363776522209
	QUAD $0xa1075a24e4421730  // .quad -6843401994271320272
	QUAD $0xdee033f26797b627  // .quad -2386850686293264857
	QUAD $0xc94930ae1d529cfc  // .quad -3942566474411762436
	QUAD $0x169840ef017da3b1  // .quad 1628122660560806833
	QUAD $0xfb9b7cd9a4a7443c  // .quad -316522074587315140
	QUAD $0x8e1f289560ee864e  // .quad -8205795374004271538
	QUAD $0x9d412e0806e88aa5  // .quad -7115355324258153819
	QUAD $0xf1a6f2bab92a27e2  // .quad -1033872180650563614
	QUAD $0xc491798a08a2ad4e  // .quad -4282508136895304370
	QUAD $0xae10af696774b1db  // .quad -5904026244240592421
	QUAD $0xf5b5d7ec8acb58a2  // .quad -741449152691742558
	QUAD $0xacca6da1e0a8ef29  // .quad -5995859411864064215
	QUAD $0x9991a6f3d6bf1765  // .quad -7380934748073420955
	QUAD $0x17fd090a58d32af3  // .quad 1728547772024695539
	QUAD $0xbff610b0cc6edd3f  // .quad -4614482416664388289
	QUAD $0xddfc4b4cef07f5b0  // .quad -2451001303396518480
	QUAD $0xeff394dcff8a948e  // .quad -1156417002403097458
	QUAD $0x4abdaf101564f98e  // .quad 5385653213018257806
	QUAD $0x95f83d0a1fb69cd9  // .quad -7640289654143017767
	QUAD $0x9d6d1ad41abe37f1  // .quad -7102991539009341455
	QUAD $0xbb764c4ca7a4440f  // .quad -4938676049251384305
	QUAD $0x84c86189216dc5ed  // .quad -8878739423761676819
	QUAD $0xea53df5fd18d5513  // .quad -1561659043136842477
	QUAD $0x32fd3cf5b4e49bb4  // .quad 3674159897003727796
	QUAD $0x92746b9be2f8552c  // .quad -7893565929601608404
	QUAD $0x3fbc8c33221dc2a1  // .quad 4592699871254659745
	QUAD $0xb7118682dbb66a77  // .quad -5255271393574622601
	QUAD $0x0fabaf3feaa5334a  // .quad 1129188820640936778
	QUAD $0xe4d5e82392a40515  // .quad -1957403223540890347
	QUAD $0x29cb4d87f2a7400e  // .quad 3011586022114279438
	QUAD $0x8f05b1163ba6832d  // .quad -8140906042354138323
	QUAD $0x743e20e9ef511012  // .quad 8376168546070237202
	QUAD $0xb2c71d5bca9023f8  // .quad -5564446534515285000
	QUAD $0x914da9246b255416  // .quad -7976533391121755114
	QUAD $0xdf78e4b2bd342cf6  // .quad -2343872149716718346
	QUAD $0x1ad089b6c2f7548e  // .quad 1932195658189984910
	QUAD $0x8bab8eefb6409c1a  // .quad -8382449121214030822
	QUAD $0xa184ac2473b529b1  // .quad -6808127464117294671
	QUAD $0xae9672aba3d0c320  // .quad -5866375383090150624
	QUAD $0xc9e5d72d90a2741e  // .quad -3898473311719230434
	QUAD $0xda3c0f568cc4f3e8  // .quad -2721283210435300376
	QUAD $0x7e2fa67c7a658892  // .quad 9092669226243950738
	QUAD $0x8865899617fb1871  // .quad -8618331034163144591
	QUAD $0xddbb901b98feeab7  // .quad -2469221522477225289
	QUAD $0xaa7eebfb9df9de8d  // .quad -6161227774276542835
	QUAD $0x552a74227f3ea565  // .quad 6136845133758244197
	QUAD $0xd51ea6fa85785631  // .quad -3089848699418290639
	QUAD $0xd53a88958f87275f  // .quad -3082000819042179233
	QUAD $0x8533285c936b35de  // .quad -8848684464777513506
	QUAD $0x8a892abaf368f137  // .quad -8464187042230111945
	QUAD $0xa67ff273b8460356  // .quad -6449169562544503978
	QUAD $0x2d2b7569b0432d85  // .quad 3254824252494523781
	QUAD $0xd01fef10a657842c  // .quad -3449775934753242068
	QUAD $0x9c3b29620e29fc73  // .quad -7189106879045698445
	QUAD $0x8213f56a67f6b29b  // .quad -9073638986861858149
	QUAD $0x8349f3ba91b47b8f  // .quad -8986383598807123057
	QUAD $0xa298f2c501f45f42  // .quad -6730362715149934782
	QUAD $0x241c70a936219a73  // .quad 2602078556773259891
	QUAD $0xcb3f2f7642717713  // .quad -3801267375510030573
	QUAD $0xed238cd383aa0110  // .quad -1359087822460813040
	QUAD $0xfe0efb53d30dd4d7  // .quad -139898200960150313
	QUAD $0xf4363804324a40aa  // .quad -849429889038008150
	QUAD $0x9ec95d1463e8a506  // .quad -7004965403241175802
	QUAD $0xb143c6053edcd0d5  // .quad -5673473379724898091
	QUAD $0xc67bb4597ce2ce48  // .quad -4144520735624081848
	QUAD $0xdd94b7868e94050a  // .quad -2480155706228734710
	QUAD $0xf81aa16fdc1b81da  // .quad -568964901102714406
	QUAD $0xca7cf2b4191c8326  // .quad -3855940325606653146
	QUAD $0x9b10a4e5e9913128  // .quad -7273132090830278360
	QUAD $0xfd1c2f611f63a3f0  // .quad -208239388580928528
	QUAD $0xc1d4ce1f63f57d72  // .quad -4479729095110460046
	QUAD $0xbc633b39673c8cec  // .quad -4871985254153548564
	QUAD $0xf24a01a73cf2dccf  // .quad -987975350460687153
	QUAD $0xd5be0503e085d813  // .quad -3044990783845967853
	QUAD $0x976e41088617ca01  // .quad -7535013621679011327
	QUAD $0x4b2d8644d8a74e18  // .quad 5417133557047315992
	QUAD $0xbd49d14aa79dbc82  // .quad -4807081008671376254
	QUAD $0xddf8e7d60ed1219e  // .quad -2451955090545630818
	QUAD $0xec9c459d51852ba2  // .quad -1397165242411832414
	QUAD $0xcabb90e5c942b503  // .quad -3838314940804713213
	QUAD $0x93e1ab8252f33b45  // .quad -7790757304148477115
	QUAD $0x3d6a751f3b936243  // .quad 4425478360848884291
	QUAD $0xb8da1662e7b00a17  // .quad -5126760611758208489
	QUAD $0x0cc512670a783ad4  // .quad 920161932633717460
	QUAD $0xe7109bfba19c0c9d  // .quad -1796764746270372707
	QUAD $0x27fb2b80668b24c5  // .quad 2880944217109767365
	QUAD $0x906a617d450187e2  // .quad -8040506994060064798
	QUAD $0xb1f9f660802dedf6  // .quad -5622191765467566602
	QUAD $0xb484f9dc9641e9da  // .quad -5438947724147693094
	QUAD $0x5e7873f8a0396973  // .quad 6807318348447705459
	QUAD $0xe1a63853bbd26451  // .quad -2186998636757228463
	QUAD $0xdb0b487b6423e1e8  // .quad -2662955059861265944
	QUAD $0x8d07e33455637eb2  // .quad -8284403175614349646
	QUAD $0x91ce1a9a3d2cda62  // .quad -7940379843253970334
	QUAD $0xb049dc016abc5e5f  // .quad -5743817951090549153
	QUAD $0x7641a140cc7810fb  // .quad 8521269269642088699
	QUAD $0xdc5c5301c56b75f7  // .quad -2568086420435798537
	QUAD $0xa9e904c87fcb0a9d  // .quad -6203421752542164323
	QUAD $0x89b9b3e11b6329ba  // .quad -8522583040413455942
	QUAD $0x546345fa9fbdcd44  // .quad 6080780864604458308
	QUAD $0xac2820d9623bf429  // .quad -6041542782089432023
	QUAD $0xa97c177947ad4095  // .quad -6234081974526590827
	QUAD $0xd732290fbacaf133  // .quad -2940242459184402125
	QUAD $0x49ed8eabcccc485d  // .quad 5327070802775656541
	QUAD $0x867f59a9d4bed6c0  // .quad -8755180564631333184
	QUAD $0x5c68f256bfff5a74  // .quad 6658838503469570676
	QUAD $0xa81f301449ee8c70  // .quad -6332289687361778576
	QUAD $0x73832eec6fff3111  // .quad 8323548129336963345
	QUAD $0xd226fc195c6a2f8c  // .quad -3303676090774835316
	QUAD $0xc831fd53c5ff7eab  // .quad -4021154456019173717
	QUAD $0x83585d8fd9c25db7  // .quad -8982326584375353929
	QUAD $0xba3e7ca8b77f5e55  // .quad -5026443070023967147
	QUAD $0xa42e74f3d032f525  // .quad -6616222212041804507
	QUAD $0x28ce1bd2e55f35eb  // .quad 2940318199324816875
	QUAD $0xcd3a1230c43fb26f  // .quad -3658591746624867729
	QUAD $0x7980d163cf5b81b3  // .quad 8755227902219092403
	QUAD $0x80444b5e7aa7cf85  // .quad -9204148869281624187
	QUAD $0xd7e105bcc332621f  // .quad -2891023177508298209
	QUAD $0xa0555e361951c366  // .quad -6893500068174642330
	QUAD $0x8dd9472bf3fefaa7  // .quad -8225464990312760665
	QUAD $0xc86ab5c39fa63440  // .quad -4005189066790915008
	QUAD $0xb14f98f6f0feb951  // .quad -5670145219463562927
	QUAD $0xfa856334878fc150  // .quad -394800315061255856
	QUAD $0x6ed1bf9a569f33d3  // .quad 7985374283903742931
	QUAD $0x9c935e00d4b9d8d2  // .quad -7164279224554366766
	QUAD $0x0a862f80ec4700c8  // .quad 758345818024902856
	QUAD $0xc3b8358109e84f07  // .quad -4343663012265570553
	QUAD $0xcd27bb612758c0fa  // .quad -3663753745896259334
	QUAD $0xf4a642e14c6262c8  // .quad -817892746904575288
	QUAD $0x8038d51cb897789c  // .quad -9207375118826243940
	QUAD $0x98e7e9cccfbd7dbd  // .quad -7428711994456441411
	QUAD $0xe0470a63e6bd56c3  // .quad -2285846861678029117
	QUAD $0xbf21e44003acdd2c  // .quad -4674203974643163860
	QUAD $0x1858ccfce06cac74  // .quad 1754377441329851508
	QUAD $0xeeea5d5004981478  // .quad -1231068949876566920
	QUAD $0x0f37801e0c43ebc8  // .quad 1096485900831157192
	QUAD $0x95527a5202df0ccb  // .quad -7686947121313936181
	QUAD $0xd30560258f54e6ba  // .quad -3241078642388441414
	QUAD $0xbaa718e68396cffd  // .quad -4996997883215032323
	QUAD $0x47c6b82ef32a2069  // .quad 5172023733869224041
	QUAD $0xe950df20247c83fd  // .quad -1634561335591402499
	QUAD $0x4cdc331d57fa5441  // .quad 5538357842881958977
	QUAD $0x91d28b7416cdd27e  // .quad -7939129862385708418
	QUAD $0xe0133fe4adf8e952  // .quad -2300424733252327086
	QUAD $0xb6472e511c81471d  // .quad -5312226309554747619
	QUAD $0x58180fddd97723a6  // .quad 6347841120289366950
	QUAD $0xe3d8f9e563a198e5  // .quad -2028596868516046619
	QUAD $0x570f09eaa7ea7648  // .quad 6273243709394548296
	QUAD $0x8e679c2f5e44ff8f  // .quad -8185402070463610993
	QUAD $0x2cd2cc6551e513da  // .quad 3229868618315797466
	QUAD $0xb201833b35d63f73  // .quad -5620066569652125837
	QUAD $0xf8077f7ea65e58d1  // .quad -574350245532641071
	QUAD $0xde81e40a034bcf4f  // .quad -2413397193637769393
	QUAD $0xfb04afaf27faf782  // .quad -358968903457900670
	QUAD $0x8b112e86420f6191  // .quad -8425902273664687727
	QUAD $0x79c5db9af1f9b563  // .quad 8774660907532399971
	QUAD $0xadd57a27d29339f6  // .quad -5920691823653471754
	QUAD $0x18375281ae7822bc  // .quad 1744954097560724156
	QUAD $0xd94ad8b1c7380874  // .quad -2789178761139451788
	QUAD $0x8f2293910d0b15b5  // .quad -8132775725879323211
	QUAD $0x87cec76f1c830548  // .quad -8660765753353239224
	QUAD $0xb2eb3875504ddb22  // .quad -5554283638921766110
	QUAD $0xa9c2794ae3a3c69a  // .quad -6214271173264161126
	QUAD $0x5fa60692a46151eb  // .quad 6892203506629956075
	QUAD $0xd433179d9c8cb841  // .quad -3156152948152813503
	QUAD $0xdbc7c41ba6bcd333  // .quad -2609901835997359309
	QUAD $0x849feec281d7f328  // .quad -8890124620236590296
	QUAD $0x12b9b522906c0800  // .quad 1349308723430688768
	QUAD $0xa5c7ea73224deff3  // .quad -6500969756868349965
	QUAD $0xd768226b34870a00  // .quad -2925050114139026944
	QUAD $0xcf39e50feae16bef  // .quad -3514526177658049553
	QUAD $0xe6a1158300d46640  // .quad -1828156321336891840
	QUAD $0x81842f29f2cce375  // .quad -9114107888677362827
	QUAD $0x60495ae3c1097fd0  // .quad 6938176635183661008
	QUAD $0xa1e53af46f801c53  // .quad -6780948842419315629
	QUAD $0x385bb19cb14bdfc4  // .quad 4061034775552188356
	QUAD $0xca5e89b18b602368  // .quad -3864500034596756632
	QUAD $0x46729e03dd9ed7b5  // .quad 5076293469440235445
	QUAD $0xfcf62c1dee382c42  // .quad -218939024818557886
	QUAD $0x6c07a2c26a8346d1  // .quad 7784369436827535057
	QUAD $0x9e19db92b4e31ba9  // .quad -7054365918152680535
	QUAD $0xc7098b7305241885  // .quad -4104596259247744891
	QUAD $0xc5a05277621be293  // .quad -4206271379263462765
	QUAD $0xb8cbee4fc66d1ea7  // .quad -5130745324059681113
	QUAD $0xf70867153aa2db38  // .quad -646153205651940552
	QUAD $0x737f74f1dc043328  // .quad 8322499218531169064
	QUAD $0x9a65406d44a5c903  // .quad -7321374781173544701
	QUAD $0x505f522e53053ff2  // .quad 5791438004736573426
	QUAD $0xc0fe908895cf3b44  // .quad -4540032458039542972
	QUAD $0x647726b9e7c68fef  // .quad 7239297505920716783
	QUAD $0xf13e34aabb430a15  // .quad -1063354554122040811
	QUAD $0x5eca783430dc19f5  // .quad 6830403950414141941
	QUAD $0x96c6e0eab509e64d  // .quad -7582125623967357363
	QUAD $0xb67d16413d132072  // .quad -5297053117264486286
	QUAD $0xbc789925624c5fe0  // .quad -4865971011531808800
	QUAD $0xe41c5bd18c57e88f  // .quad -2009630378153219953
	QUAD $0xeb96bf6ebadf77d8  // .quad -1470777745987373096
	QUAD $0x8e91b962f7b6f159  // .quad -8173548013986844327
	QUAD $0x933e37a534cbaae7  // .quad -7836765118883190041
	QUAD $0x723627bbb5a4adb0  // .quad 8229809056225996208
	QUAD $0xb80dc58e81fe95a1  // .quad -5184270380176599647
	QUAD $0xcec3b1aaa30dd91c  // .quad -3547796734999668452
	QUAD $0xe61136f2227e3b09  // .quad -1868651956793361655
	QUAD $0x213a4f0aa5e8a7b1  // .quad 2394313059052595121
	QUAD $0x8fcac257558ee4e6  // .quad -8085436500636932890
	QUAD $0xa988e2cd4f62d19d  // .quad -6230480713039031907
	QUAD $0xb3bd72ed2af29e1f  // .quad -5495109607368778209
	QUAD $0x93eb1b80a33b8605  // .quad -7788100891298789883
	QUAD $0xe0accfa875af45a7  // .quad -2257200990783584857
	QUAD $0xbc72f130660533c3  // .quad -4867563057061743677
	QUAD $0x8c6c01c9498d8b88  // .quad -8328279646880822392
	QUAD $0xeb8fad7c7f8680b4  // .quad -1472767802899791692
	QUAD $0xaf87023b9bf0ee6a  // .quad -5798663540173640086
	QUAD $0xa67398db9f6820e1  // .quad -6452645772052127519
	QUAD $0xdb68c2ca82ed2a05  // .quad -2636643406789662203
	QUAD $0x88083f8943a1148c  // .quad -8644589625959967604
	QUAD $0x892179be91d43a43  // .quad -8565431156884620733
	QUAD $0x6a0a4f6b948959b0  // .quad 7641007041259592112
	QUAD $0xab69d82e364948d4  // .quad -6095102927678388012
	QUAD $0x848ce34679abb01c  // .quad -8895485272135061476
	QUAD $0xd6444e39c3db9b09  // .quad -3007192641170597111
	QUAD $0xf2d80e0c0c0b4e11  // .quad -947992276657025519
	QUAD $0x85eab0e41a6940e5  // .quad -8797024428372705051
	QUAD $0x6f8e118f0f0e2195  // .quad 8038381691033493909
	QUAD $0xa7655d1d2103911f  // .quad -6384594517038493409
	QUAD $0x4b7195f2d2d1a9fb  // .quad 5436291095364479483
	QUAD $0xd13eb46469447567  // .quad -3369057127870728857
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	  // .p2align 4, 0x00
_POW_TAB:
	LONG $0x00000001  // .long 1
	LONG $0x00000003  // .long 3
	LONG $0x00000006  // .long 6
	LONG $0x00000009  // .long 9
	LONG $0x0000000d  // .long 13
	LONG $0x00000010  // .long 16
	LONG $0x00000013  // .long 19
	LONG $0x00000017  // .long 23
	LONG $0x0000001a  // .long 26
	QUAD $0x0000000000000000; LONG $0x00000000  // .p2align 4, 0x00
_LSHIFT_TAB:
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000  // .space 8, '\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000001  // .long 1
	QUAD $0x0000000000000035; QUAD $0x0000000000000000  // .asciz 16, '5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000001  // .long 1
	QUAD $0x0000000000003532; QUAD $0x0000000000000000  // .asciz 16, '25\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000001  // .long 1
	QUAD $0x0000000000353231; QUAD $0x0000000000000000  // .asciz 16, '125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000002  // .long 2
	QUAD $0x0000000000353236; QUAD $0x0000000000000000  // .asciz 16, '625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000002  // .long 2
	QUAD $0x0000000035323133; QUAD $0x0000000000000000  // .asciz 16, '3125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000002  // .long 2
	QUAD $0x0000003532363531; QUAD $0x0000000000000000  // .asciz 16, '15625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000003  // .long 3
	QUAD $0x0000003532313837; QUAD $0x0000000000000000  // .asciz 16, '78125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000003  // .long 3
	QUAD $0x0000353236303933; QUAD $0x0000000000000000  // .asciz 16, '390625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000003  // .long 3
	QUAD $0x0035323133353931; QUAD $0x0000000000000000  // .asciz 16, '1953125\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000004  // .long 4
	QUAD $0x0035323635363739; QUAD $0x0000000000000000  // .asciz 16, '9765625\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000004  // .long 4
	QUAD $0x3532313832383834; QUAD $0x0000000000000000  // .asciz 16, '48828125\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000004  // .long 4
	QUAD $0x3236303431343432; QUAD $0x0000000000000035  // .asciz 16, '244140625\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000004  // .long 4
	QUAD $0x3133303730323231; QUAD $0x0000000000003532  // .asciz 16, '1220703125\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000005  // .long 5
	QUAD $0x3635313533303136; QUAD $0x0000000000003532  // .asciz 16, '6103515625\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000005  // .long 5
	QUAD $0x3837353731353033; QUAD $0x0000000000353231  // .asciz 16, '30517578125\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000005  // .long 5
	QUAD $0x3938373835323531; QUAD $0x0000000035323630  // .asciz 16, '152587890625\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000006  // .long 6
	QUAD $0x3534393339323637; QUAD $0x0000000035323133  // .asciz 16, '762939453125\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000006  // .long 6
	QUAD $0x3237393634313833; QUAD $0x0000003532363536  // .asciz 16, '3814697265625\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000006  // .long 6
	QUAD $0x3638343337303931; QUAD $0x0000353231383233  // .asciz 16, '19073486328125\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000007  // .long 7
	QUAD $0x3133343736333539; QUAD $0x0000353236303436  // .asciz 16, '95367431640625\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000007  // .long 7
	QUAD $0x3531373338363734; QUAD $0x0035323133303238  // .asciz 16, '476837158203125\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000007  // .long 7
	QUAD $0x3735383134383332; QUAD $0x3532363531303139  // .asciz 16, '2384185791015625'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000007  // .long 7
	QUAD $0x3832393032393131; QUAD $0x3231383730353539  // .asciz 16, '1192092895507812'
	QUAD $0x0000000000000035; QUAD $0x0000000000000000  // .asciz 16, '5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000008  // .long 8
	QUAD $0x3434363430363935; QUAD $0x3236303933353737  // .asciz 16, '5960464477539062'
	QUAD $0x0000000000000035; QUAD $0x0000000000000000  // .asciz 16, '5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000008  // .long 8
	QUAD $0x3232333230383932; QUAD $0x3133353936373833  // .asciz 16, '2980232238769531'
	QUAD $0x0000000000003532; QUAD $0x0000000000000000  // .asciz 16, '25\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000008  // .long 8
	QUAD $0x3136313130393431; QUAD $0x3536373438333931  // .asciz 16, '1490116119384765'
	QUAD $0x0000000000353236; QUAD $0x0000000000000000  // .asciz 16, '625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000009  // .long 9
	QUAD $0x3530383530353437; QUAD $0x3832383332393639  // .asciz 16, '7450580596923828'
	QUAD $0x0000000000353231; QUAD $0x0000000000000000  // .asciz 16, '125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000009  // .long 9
	QUAD $0x3230393235323733; QUAD $0x3431393136343839  // .asciz 16, '3725290298461914'
	QUAD $0x0000000035323630; QUAD $0x0000000000000000  // .asciz 16, '0625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000009  // .long 9
	QUAD $0x3135343632363831; QUAD $0x3735393033323934  // .asciz 16, '1862645149230957'
	QUAD $0x0000003532313330; QUAD $0x0000000000000000  // .asciz 16, '03125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000a  // .long 10
	QUAD $0x3735323233313339; QUAD $0x3538373435313634  // .asciz 16, '9313225746154785'
	QUAD $0x0000003532363531; QUAD $0x0000000000000000  // .asciz 16, '15625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000a  // .long 10
	QUAD $0x3832313636353634; QUAD $0x3239333737303337  // .asciz 16, '4656612873077392'
	QUAD $0x0000353231383735; QUAD $0x0000000000000000  // .asciz 16, '578125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000a  // .long 10
	QUAD $0x3436303338323332; QUAD $0x3639363833353633  // .asciz 16, '2328306436538696'
	QUAD $0x0035323630393832; QUAD $0x0000000000000000  // .asciz 16, '2890625\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000a  // .long 10
	QUAD $0x3233353134363131; QUAD $0x3834333936323831  // .asciz 16, '1164153218269348'
	QUAD $0x3532313335343431; QUAD $0x0000000000000000  // .asciz 16, '14453125\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000b  // .long 11
	QUAD $0x3036363730323835; QUAD $0x3034373634333139  // .asciz 16, '5820766091346740'
	QUAD $0x3532363536323237; QUAD $0x0000000000000000  // .asciz 16, '72265625\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000b  // .long 11
	QUAD $0x3033383330313932; QUAD $0x3037333337363534  // .asciz 16, '2910383045673370'
	QUAD $0x3231383233313633; QUAD $0x0000000000000035  // .asciz 16, '361328125\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000b  // .long 11
	QUAD $0x3531393135353431; QUAD $0x3538363633383232  // .asciz 16, '1455191522836685'
	QUAD $0x3630343636303831; QUAD $0x0000000000003532  // .asciz 16, '1806640625\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000c  // .long 12
	QUAD $0x3637353935373237; QUAD $0x3532343338313431  // .asciz 16, '7275957614183425'
	QUAD $0x3133303233333039; QUAD $0x0000000000003532  // .asciz 16, '9033203125\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000c  // .long 12
	QUAD $0x3838373937333633; QUAD $0x3231373139303730  // .asciz 16, '3637978807091712'
	QUAD $0x3531303636313539; QUAD $0x0000000000353236  // .asciz 16, '95166015625\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000c  // .long 12
	QUAD $0x3439383938313831; QUAD $0x3635383534353330  // .asciz 16, '1818989403545856'
	QUAD $0x3730303338353734; QUAD $0x0000000035323138  // .asciz 16, '475830078125\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000d  // .long 13
	QUAD $0x3037343934393039; QUAD $0x3238323932373731  // .asciz 16, '9094947017729282'
	QUAD $0x3933303531393733; QUAD $0x0000000035323630  // .asciz 16, '379150390625\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000d  // .long 13
	QUAD $0x3533373437343534; QUAD $0x3134363436383830  // .asciz 16, '4547473508864641'
	QUAD $0x3931353735393831; QUAD $0x0000003532313335  // .asciz 16, '1895751953125\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000d  // .long 13
	QUAD $0x3736333733373232; QUAD $0x3032333233343435  // .asciz 16, '2273736754432320'
	QUAD $0x3935373837343935; QUAD $0x0000353236353637  // .asciz 16, '59478759765625\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000d  // .long 13
	QUAD $0x3338363836333131; QUAD $0x3036313631323737  // .asciz 16, '1136868377216160'
	QUAD $0x3937333933373932; QUAD $0x0035323138323838  // .asciz 16, '297393798828125\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000e  // .long 14
	QUAD $0x3831343334383635; QUAD $0x3130383038303638  // .asciz 16, '5684341886080801'
	QUAD $0x3939383639363834; QUAD $0x0035323630343134  // .asciz 16, '486968994140625\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000e  // .long 14
	QUAD $0x3930373132343832; QUAD $0x3030343034303334  // .asciz 16, '2842170943040400'
	QUAD $0x3934343834333437; QUAD $0x3532313330373037  // .asciz 16, '7434844970703125'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000e  // .long 14
	QUAD $0x3435383031323431; QUAD $0x3030323032353137  // .asciz 16, '1421085471520200'
	QUAD $0x3432323437313733; QUAD $0x3236353135333538  // .asciz 16, '3717422485351562'
	QUAD $0x0000000000000035; QUAD $0x0000000000000000  // .asciz 16, '5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000f  // .long 15
	QUAD $0x3337323435303137; QUAD $0x3130303130363735  // .asciz 16, '7105427357601001'
	QUAD $0x3432313137383538; QUAD $0x3231383735373632  // .asciz 16, '8587112426757812'
	QUAD $0x0000000000000035; QUAD $0x0000000000000000  // .asciz 16, '5\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000f  // .long 15
	QUAD $0x3633313732353533; QUAD $0x3030353030383837  // .asciz 16, '3552713678800500'
	QUAD $0x3236353533393239; QUAD $0x3630393837333331  // .asciz 16, '9293556213378906'
	QUAD $0x0000000000003532; QUAD $0x0000000000000000  // .asciz 16, '25\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x0000000f  // .long 15
	QUAD $0x3836353336373731; QUAD $0x3035323030343933  // .asciz 16, '1776356839400250'
	QUAD $0x3138373736343634; QUAD $0x3335343938363630  // .asciz 16, '4646778106689453'
	QUAD $0x0000000000353231; QUAD $0x0000000000000000  // .asciz 16, '125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000010  // .long 16
	QUAD $0x3134383731383838; QUAD $0x3235323130303739  // .asciz 16, '8881784197001252'
	QUAD $0x3530393833333233; QUAD $0x3536323734343333  // .asciz 16, '3233890533447265'
	QUAD $0x0000000000353236; QUAD $0x0000000000000000  // .asciz 16, '625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000010  // .long 16
	QUAD $0x3032393830343434; QUAD $0x3632363030353839  // .asciz 16, '4440892098500626'
	QUAD $0x3235343936313631; QUAD $0x3233363332373636  // .asciz 16, '1616945266723632'
	QUAD $0x0000000035323138; QUAD $0x0000000000000000  // .asciz 16, '8125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000010  // .long 16
	QUAD $0x3036343430323232; QUAD $0x3331333035323934  // .asciz 16, '2220446049250313'
	QUAD $0x3632373438303830; QUAD $0x3631383136333333  // .asciz 16, '0808472633361816'
	QUAD $0x0000003532363034; QUAD $0x0000000000000000  // .asciz 16, '40625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000010  // .long 16
	QUAD $0x3033323230313131; QUAD $0x3635313532363432  // .asciz 16, '1110223024625156'
	QUAD $0x3336333234303435; QUAD $0x3830393038363631  // .asciz 16, '5404236316680908'
	QUAD $0x0000353231333032; QUAD $0x0000000000000000  // .asciz 16, '203125\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000011  // .long 17
	QUAD $0x3135313131353535; QUAD $0x3238373532313332  // .asciz 16, '5551115123125782'
	QUAD $0x3531383131323037; QUAD $0x3134353430343338  // .asciz 16, '7021181583404541'
	QUAD $0x0000353236353130; QUAD $0x0000000000000000  // .asciz 16, '015625\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000011  // .long 17
	QUAD $0x3537353535373732; QUAD $0x3139383236353136  // .asciz 16, '2775557561562891'
	QUAD $0x3730393530313533; QUAD $0x3037323230373139  // .asciz 16, '3510590791702270'
	QUAD $0x0035323138373035; QUAD $0x0000000000000000  // .asciz 16, '5078125\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000011  // .long 17
	QUAD $0x3738373737383331; QUAD $0x3534343138373038  // .asciz 16, '1387778780781445'
	QUAD $0x3335393235353736; QUAD $0x3533313135383539  // .asciz 16, '6755295395851135'
	QUAD $0x3532363039333532; QUAD $0x0000000000000000  // .asciz 16, '25390625\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000012  // .long 18
	QUAD $0x3933393838333936; QUAD $0x3832323730393330  // .asciz 16, '6938893903907228'
	QUAD $0x3936373436373733; QUAD $0x3637363535323937  // .asciz 16, '3776476979255676'
	QUAD $0x3532313335393632; QUAD $0x0000000000000000  // .asciz 16, '26953125\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000012  // .long 18
	QUAD $0x3936343439363433; QUAD $0x3431363335393135  // .asciz 16, '3469446951953614'
	QUAD $0x3438333238383831; QUAD $0x3833383732363938  // .asciz 16, '1888238489627838'
	QUAD $0x3236353637343331; QUAD $0x0000000000000035  // .asciz 16, '134765625\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000012  // .long 18
	QUAD $0x3433323734333731; QUAD $0x3730383637393537  // .asciz 16, '1734723475976807'
	QUAD $0x3239313134343930; QUAD $0x3931393331383434  // .asciz 16, '0944119244813919'
	QUAD $0x3138323833373630; QUAD $0x0000000000003532  // .asciz 16, '0673828125\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'
	LONG $0x00000013  // .long 19
	QUAD $0x3337313633373638; QUAD $0x3533303438383937  // .asciz 16, '8673617379884035'
	QUAD $0x3236393530323734; QUAD $0x3539353936303432  // .asciz 16, '4720596224069595'
	QUAD $0x3630343139363333; QUAD $0x0000000000003532  // .asciz 16, '3369140625\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .asciz 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	LONG $0x00000000  // .asciz 4, '\x00\x00\x00\x00'

TEXT Â·__vnumber(SB), NOSPLIT | NOFRAME, $0 - 24
	NO_LOCAL_POINTERS

_entry:
	MOVQ (TLS), R14
	LEAQ -112(SP), R12
	CMPQ R12, 16(R14)
	JBE  _stack_grow

_vnumber:
	MOVQ s+0(FP), DI
	MOVQ p+8(FP), SI
	MOVQ v+16(FP), DX
	LEAQ Â·__vnumber_entry+78(SB), AX  // _vnumber
	JMP AX

_stack_grow:
	CALL runtimeÂ·morestack_noctxt<>(SB)
	JMP  _entry
