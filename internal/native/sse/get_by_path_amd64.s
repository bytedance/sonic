// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

#include "go_asm.h"
#include "funcdata.h"
#include "textflag.h"

TEXT Â·__get_by_path_entry(SB), NOSPLIT, $208
	NO_LOCAL_POINTERS
	LONG $0xe90d8d4c; WORD $0xffff; BYTE $0xff  // leaq         $-23(%rip), %r9
	QUAD $0x000000e0248c894c  // movq         %r9, $224(%rsp)
	BYTE $0xc3  // retq         
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	  // .p2align 4, 0x00
LCPI0_0:
	QUAD $0x2c2c2c2c2c2c2c2c; QUAD $0x2c2c2c2c2c2c2c2c  // .space 16, ',,,,,,,,,,,,,,,,'
LCPI0_1:
	QUAD $0x2020202020202020; QUAD $0x2020202020202020  // .space 16, '                '
LCPI0_2:
	QUAD $0x7d7d7d7d7d7d7d7d; QUAD $0x7d7d7d7d7d7d7d7d  // .space 16, '}}}}}}}}}}}}}}}}'
LCPI0_3:
	QUAD $0x2222222222222222; QUAD $0x2222222222222222  // .space 16, '""""""""""""""""'
LCPI0_4:
	QUAD $0x5c5c5c5c5c5c5c5c; QUAD $0x5c5c5c5c5c5c5c5c  // .space 16, '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
LCPI0_5:
	QUAD $0x7b7b7b7b7b7b7b7b; QUAD $0x7b7b7b7b7b7b7b7b  // .space 16, '{{{{{{{{{{{{{{{{'
LCPI0_6:
	QUAD $0x5b5b5b5b5b5b5b5b; QUAD $0x5b5b5b5b5b5b5b5b  // .space 16, '[[[[[[[[[[[[[[[['
LCPI0_7:
	QUAD $0x5d5d5d5d5d5d5d5d; QUAD $0x5d5d5d5d5d5d5d5d  // .space 16, ']]]]]]]]]]]]]]]]'
LCPI0_8:
	QUAD $0x2f2f2f2f2f2f2f2f; QUAD $0x2f2f2f2f2f2f2f2f  // .space 16, '////////////////'
LCPI0_9:
	QUAD $0x3a3a3a3a3a3a3a3a; QUAD $0x3a3a3a3a3a3a3a3a  // .space 16, '::::::::::::::::'
LCPI0_10:
	QUAD $0x2b2b2b2b2b2b2b2b; QUAD $0x2b2b2b2b2b2b2b2b  // .space 16, '++++++++++++++++'
LCPI0_11:
	QUAD $0x2d2d2d2d2d2d2d2d; QUAD $0x2d2d2d2d2d2d2d2d  // .space 16, '----------------'
LCPI0_12:
	QUAD $0x2e2e2e2e2e2e2e2e; QUAD $0x2e2e2e2e2e2e2e2e  // .space 16, '................'
LCPI0_13:
	QUAD $0x6565656565656565; QUAD $0x6565656565656565  // .space 16, 'eeeeeeeeeeeeeeee'
	  // .p2align 4, 0x90
_get_by_path:
	BYTE $0x55  // pushq        %rbp
	WORD $0x8948; BYTE $0xe5  // movq         %rsp, %rbp
	WORD $0x5741  // pushq        %r15
	WORD $0x5641  // pushq        %r14
	WORD $0x5541  // pushq        %r13
	WORD $0x5441  // pushq        %r12
	BYTE $0x53  // pushq        %rbx
	LONG $0xa8ec8148; WORD $0x0000; BYTE $0x00  // subq         $168, %rsp
	WORD $0x8949; BYTE $0xce  // movq         %rcx, %r14
	WORD $0x8949; BYTE $0xf3  // movq         %rsi, %r11
	WORD $0x8949; BYTE $0xfd  // movq         %rdi, %r13
	LONG $0x08428b48  // movq         $8(%rdx), %rax
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xd0758948  // movq         %rsi, $-48(%rbp)
	LONG $0xc07d8948  // movq         %rdi, $-64(%rbp)
	LONG $0xa84d8948  // movq         %rcx, $-88(%rbp)
	LONG $0x2f22840f; WORD $0x0000  // je           LBB0_448, $12066(%rip)
	WORD $0x8b4c; BYTE $0x0a  // movq         (%rdx), %r9
	LONG $0x04e0c148  // shlq         $4, %rax
	WORD $0x014c; BYTE $0xc8  // addq         %r9, %rax
	LONG $0x30858948; WORD $0xffff; BYTE $0xff  // movq         %rax, $-208(%rbp)
	LONG $0x08458d4d  // leaq         $8(%r13), %r8
	LONG $0x007d8b49  // movq         (%r13), %rdi
	WORD $0x8b49; BYTE $0x03  // movq         (%r11), %rax
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	QUAD $0xfffffeec056f0ff3  // movdqu       $-276(%rip), %xmm0  /* LCPI0_3+0(%rip) */
	QUAD $0xfffffef40d6f0ff3  // movdqu       $-268(%rip), %xmm1  /* LCPI0_4+0(%rip) */
	QUAD $0xfffeab2d6f0f44f3; BYTE $0xff  // movdqu       $-341(%rip), %xmm13  /* LCPI0_0+0(%rip) */
	QUAD $0xfffeb2356f0f44f3; BYTE $0xff  // movdqu       $-334(%rip), %xmm14  /* LCPI0_1+0(%rip) */
	QUAD $0xfffffeba256f0ff3  // movdqu       $-326(%rip), %xmm4  /* LCPI0_2+0(%rip) */
	LONG $0x760f4566; BYTE $0xc9  // pcmpeqd      %xmm9, %xmm9
	QUAD $0xfffeec156f0f44f3; BYTE $0xff  // movdqu       $-276(%rip), %xmm10  /* LCPI0_6+0(%rip) */
	QUAD $0xfffef31d6f0f44f3; BYTE $0xff  // movdqu       $-269(%rip), %xmm11  /* LCPI0_7+0(%rip) */
	LONG $0xef0f4566; BYTE $0xc0  // pxor         %xmm8, %xmm8
	QUAD $0xfffec5256f0f44f3; BYTE $0xff  // movdqu       $-315(%rip), %xmm12  /* LCPI0_5+0(%rip) */
	LONG $0xb045894c  // movq         %r8, $-80(%rbp)
LBB0_2:
	WORD $0x8b49; BYTE $0x08  // movq         (%r8), %rcx
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0x2948; BYTE $0xca  // subq         %rcx, %rdx
	LONG $0x0032830f; WORD $0x0000  // jae          LBB0_7, $50(%rip)
	WORD $0x1c8a; BYTE $0x07  // movb         (%rdi,%rax), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_7, $38(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x001d840f; WORD $0x0000  // je           LBB0_7, $29(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0011860f; WORD $0x0000  // jbe          LBB0_7, $17(%rip)
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	LONG $0x000139e9; BYTE $0x00  // jmp          LBB0_27, $313(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_7:
	LONG $0x01708d48  // leaq         $1(%rax), %rsi
	WORD $0x3948; BYTE $0xce  // cmpq         %rcx, %rsi
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_11, $35(%rip)
	WORD $0x1c8a; BYTE $0x37  // movb         (%rdi,%rsi), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_11, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_11, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0102870f; WORD $0x0000  // ja           LBB0_27, $258(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_11:
	LONG $0x02708d48  // leaq         $2(%rax), %rsi
	WORD $0x3948; BYTE $0xce  // cmpq         %rcx, %rsi
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_15, $35(%rip)
	WORD $0x1c8a; BYTE $0x37  // movb         (%rdi,%rsi), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_15, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_15, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00d2870f; WORD $0x0000  // ja           LBB0_27, $210(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_15:
	LONG $0x03708d48  // leaq         $3(%rax), %rsi
	WORD $0x3948; BYTE $0xce  // cmpq         %rcx, %rsi
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_19, $35(%rip)
	WORD $0x1c8a; BYTE $0x37  // movb         (%rdi,%rsi), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_19, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_19, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00a2870f; WORD $0x0000  // ja           LBB0_27, $162(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_19:
	LONG $0x04708d4c  // leaq         $4(%rax), %r14
	WORD $0x394c; BYTE $0xf1  // cmpq         %r14, %rcx
	LONG $0x0063860f; WORD $0x0000  // jbe          LBB0_551, $99(%rip)
	WORD $0x394c; BYTE $0xf1  // cmpq         %r14, %rcx
	LONG $0x0070840f; WORD $0x0000  // je           LBB0_26, $112(%rip)
	LONG $0x0f348d4c  // leaq         (%rdi,%rcx), %r14
	LONG $0x04c28348  // addq         $4, %rdx
	WORD $0x8948; BYTE $0xfb  // movq         %rdi, %rbx
	LONG $0x07748d48; BYTE $0x05  // leaq         $5(%rdi,%rax), %rsi
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_22:
	LONG $0xff7ebe0f  // movsbl       $-1(%rsi), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x007e870f; WORD $0x0000  // ja           LBB0_28, $126(%rip)
	LONG $0xfaa30f49  // btq          %rdi, %r10
	LONG $0x0074830f; WORD $0x0000  // jae          LBB0_28, $116(%rip)
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_22, $-35(%rip)
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x3948; BYTE $0xce  // cmpq         %rcx, %rsi
	LONG $0x003b820f; WORD $0x0000  // jb           LBB0_27, $59(%rip)
	LONG $0x000066e9; BYTE $0x00  // jmp          LBB0_29, $102(%rip)
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_551:
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0x8b49; BYTE $0x01  // movq         (%r9), %rax
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x006f850f; WORD $0x0000  // jne          LBB0_30, $111(%rip)
	LONG $0x002f1ce9; BYTE $0x00  // jmp          LBB0_552, $12060(%rip)
LBB0_26:
	WORD $0x0149; BYTE $0xfe  // addq         %rdi, %r14
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x3948; BYTE $0xce  // cmpq         %rcx, %rsi
	LONG $0x0038830f; WORD $0x0000  // jae          LBB0_29, $56(%rip)
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_27:
	LONG $0x01768d4c  // leaq         $1(%rsi), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0x0c8a; BYTE $0x37  // movb         (%rdi,%rsi), %cl
	WORD $0x8b49; BYTE $0x01  // movq         (%r9), %rax
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x003a850f; WORD $0x0000  // jne          LBB0_30, $58(%rip)
	LONG $0x002ee7e9; BYTE $0x00  // jmp          LBB0_552, $12007(%rip)
LBB0_28:
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x8948; BYTE $0xda  // movq         %rbx, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x0148; BYTE $0xd6  // addq         %rdx, %rsi
	WORD $0x3948; BYTE $0xce  // cmpq         %rcx, %rsi
	LONG $0xffd0820f; WORD $0xffff  // jb           LBB0_27, $-48(%rip)
LBB0_29:
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0x8949; BYTE $0xc6  // movq         %rax, %r14
	WORD $0x8b49; BYTE $0x01  // movq         (%r9), %rax
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x2ec1840f; WORD $0x0000  // je           LBB0_552, $11969(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_30:
	WORD $0x408a; BYTE $0x17  // movb         $23(%rax), %al
	WORD $0x1f24  // andb         $31, %al
	WORD $0x023c  // cmpb         $2, %al
	LONG $0x0023840f; WORD $0x0000  // je           LBB0_344, $35(%rip)
	WORD $0x183c  // cmpb         $24, %al
	LONG $0x2e9d850f; WORD $0x0000  // jne          LBB0_552, $11933(%rip)
	WORD $0xf980; BYTE $0x7b  // cmpb         $123, %cl
	LONG $0xa04d894c  // movq         %r9, $-96(%rbp)
	LONG $0x0092840f; WORD $0x0000  // je           LBB0_33, $146(%rip)
	LONG $0x002ecbe9; BYTE $0x00  // jmp          LBB0_556, $11979(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_344:
	WORD $0xf980; BYTE $0x5b  // cmpb         $91, %cl
	LONG $0x2eb9850f; WORD $0x0000  // jne          LBB0_556, $11961(%rip)
	LONG $0x08418b49  // movq         $8(%r9), %rax
	WORD $0x8b4c; BYTE $0x20  // movq         (%rax), %r12
	WORD $0x854d; BYTE $0xe4  // testq        %r12, %r12
	LONG $0x2e69880f; WORD $0x0000  // js           LBB0_552, $11881(%rip)
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	WORD $0x894c; BYTE $0xf1  // movq         %r14, %rcx
	WORD $0x2948; BYTE $0xc1  // subq         %rax, %rcx
	LONG $0x1c08830f; WORD $0x0000  // jae          LBB0_351, $7176(%rip)
	LONG $0x37148a42  // movb         (%rdi,%r14), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x1bfb840f; WORD $0x0000  // je           LBB0_351, $7163(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x1bf2840f; WORD $0x0000  // je           LBB0_351, $7154(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x1be6860f; WORD $0x0000  // jbe          LBB0_351, $7142(%rip)
	WORD $0x894c; BYTE $0xf2  // movq         %r14, %rdx
	LONG $0x001d0fe9; BYTE $0x00  // jmp          LBB0_373, $7439(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_248:
	WORD $0x0148; BYTE $0xfe  // addq         %rdi, %rsi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x2e50830f; WORD $0x0000  // jae          LBB0_556, $11856(%rip)
LBB0_250:
	LONG $0x01728d4c  // leaq         $1(%rdx), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0x048a; BYTE $0x17  // movb         (%rdi,%rdx), %al
	WORD $0x2c3c  // cmpb         $44, %al
	LONG $0x2e1e850f; WORD $0x0000  // jne          LBB0_251, $11806(%rip)
LBB0_33:
	WORD $0x8b49; BYTE $0x08  // movq         (%r8), %rcx
	WORD $0x894c; BYTE $0xf2  // movq         %r14, %rdx
	WORD $0x2948; BYTE $0xca  // subq         %rcx, %rdx
	LONG $0xc87d8948  // movq         %rdi, $-56(%rbp)
	LONG $0x0029830f; WORD $0x0000  // jae          LBB0_38, $41(%rip)
	LONG $0x37048a42  // movb         (%rdi,%r14), %al
	WORD $0x0d3c  // cmpb         $13, %al
	LONG $0x001d840f; WORD $0x0000  // je           LBB0_38, $29(%rip)
	WORD $0x203c  // cmpb         $32, %al
	LONG $0x0015840f; WORD $0x0000  // je           LBB0_38, $21(%rip)
	WORD $0xf704  // addb         $-9, %al
	WORD $0x013c  // cmpb         $1, %al
	LONG $0x000b860f; WORD $0x0000  // jbe          LBB0_38, $11(%rip)
	WORD $0x894c; BYTE $0xf0  // movq         %r14, %rax
	LONG $0x000139e9; BYTE $0x00  // jmp          LBB0_59, $313(%rip)
	WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_38:
	LONG $0x01468d49  // leaq         $1(%r14), %rax
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_42, $35(%rip)
	WORD $0x1c8a; BYTE $0x07  // movb         (%rdi,%rax), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_42, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_42, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0108870f; WORD $0x0000  // ja           LBB0_59, $264(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_42:
	LONG $0x02468d49  // leaq         $2(%r14), %rax
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_46, $35(%rip)
	WORD $0x1c8a; BYTE $0x07  // movb         (%rdi,%rax), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_46, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_46, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00d8870f; WORD $0x0000  // ja           LBB0_59, $216(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_46:
	LONG $0x03468d49  // leaq         $3(%r14), %rax
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_50, $35(%rip)
	WORD $0x1c8a; BYTE $0x07  // movb         (%rdi,%rax), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_50, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_50, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00a8870f; WORD $0x0000  // ja           LBB0_59, $168(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_50:
	LONG $0x04768d49  // leaq         $4(%r14), %rsi
	WORD $0x3948; BYTE $0xf1  // cmpq         %rsi, %rcx
	LONG $0x2d0d860f; WORD $0x0000  // jbe          LBB0_549, $11533(%rip)
	WORD $0x3948; BYTE $0xf1  // cmpq         %rsi, %rcx
	LONG $0x005a840f; WORD $0x0000  // je           LBB0_57, $90(%rip)
	LONG $0x0f348d48  // leaq         (%rdi,%rcx), %rsi
	LONG $0x04c28348  // addq         $4, %rdx
	LONG $0x37448d4a; BYTE $0x05  // leaq         $5(%rdi,%r14), %rax
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_53:
	LONG $0xff78be0f  // movsbl       $-1(%rax), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x0053870f; WORD $0x0000  // ja           LBB0_58, $83(%rip)
	LONG $0xfaa30f49  // btq          %rdi, %r10
	LONG $0x0049830f; WORD $0x0000  // jae          LBB0_58, $73(%rip)
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_53, $-35(%rip)
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0040820f; WORD $0x0000  // jb           LBB0_59, $64(%rip)
	LONG $0x002d07e9; BYTE $0x00  // jmp          LBB0_556, $11527(%rip)
	LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_57:
	WORD $0x0148; BYTE $0xfe  // addq         %rdi, %rsi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x0024820f; WORD $0x0000  // jb           LBB0_59, $36(%rip)
	LONG $0x002cebe9; BYTE $0x00  // jmp          LBB0_556, $11499(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_58:
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x8948; BYTE $0xfa  // movq         %rdi, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0x2ccc830f; WORD $0x0000  // jae          LBB0_556, $11468(%rip)
LBB0_59:
	LONG $0x01708d4c  // leaq         $1(%rax), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0x0c8a; BYTE $0x07  // movb         (%rdi,%rax), %cl
	WORD $0xf980; BYTE $0x22  // cmpb         $34, %cl
	LONG $0x2c8b850f; WORD $0x0000  // jne          LBB0_553, $11403(%rip)
	WORD $0x8b49; BYTE $0x18  // movq         (%r8), %rbx
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0x294c; BYTE $0xf1  // subq         %r14, %rcx
	LONG $0x4f55840f; WORD $0x0000  // je           LBB0_950, $20309(%rip)
	LONG $0x08518b49  // movq         $8(%r9), %rdx
	WORD $0x8b48; BYTE $0x32  // movq         (%rdx), %rsi
	LONG $0x90758948  // movq         %rsi, $-112(%rbp)
	LONG $0x08528b48  // movq         $8(%rdx), %rdx
	LONG $0x98558948  // movq         %rdx, $-104(%rbp)
	WORD $0x0149; BYTE $0xfe  // addq         %rdi, %r14
	LONG $0x40f98348  // cmpq         $64, %rcx
	LONG $0xb875894c  // movq         %r14, $-72(%rbp)
	LONG $0x389d8948; WORD $0xffff; BYTE $0xff  // movq         %rbx, $-200(%rbp)
	LONG $0x1335820f; WORD $0x0000  // jb           LBB0_105, $4917(%rip)
	WORD $0xca89  // movl         %ecx, %edx
	WORD $0xe283; BYTE $0x3f  // andl         $63, %edx
	LONG $0x88558948  // movq         %rdx, $-120(%rbp)
	WORD $0x8948; BYTE $0xde  // movq         %rbx, %rsi
	WORD $0x2948; BYTE $0xc6  // subq         %rax, %rsi
	LONG $0xbfc68348  // addq         $-65, %rsi
	LONG $0xc0e68348  // andq         $-64, %rsi
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0x37548d48; BYTE $0x41  // leaq         $65(%rdi,%rsi), %rdx
	LONG $0x80558948  // movq         %rdx, $-128(%rbp)
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0xdb31  // xorl         %ebx, %ebx
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_63:
	LONG $0x1e6f0ff3  // movdqu       (%rsi), %xmm3
	LONG $0x6e6f0ff3; BYTE $0x10  // movdqu       $16(%rsi), %xmm5
	LONG $0x766f0ff3; BYTE $0x20  // movdqu       $32(%rsi), %xmm6
	LONG $0x7e6f0ff3; BYTE $0x30  // movdqu       $48(%rsi), %xmm7
	LONG $0xd36f0f66  // movdqa       %xmm3, %xmm2
	LONG $0xd0740f66  // pcmpeqb      %xmm0, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd56f0f66  // movdqa       %xmm5, %xmm2
	LONG $0xd0740f66  // pcmpeqb      %xmm0, %xmm2
	LONG $0xd70f4466; BYTE $0xe2  // pmovmskb     %xmm2, %r12d
	LONG $0xd66f0f66  // movdqa       %xmm6, %xmm2
	LONG $0xd0740f66  // pcmpeqb      %xmm0, %xmm2
	LONG $0xd70f4466; BYTE $0xfa  // pmovmskb     %xmm2, %r15d
	LONG $0xd76f0f66  // movdqa       %xmm7, %xmm2
	LONG $0xd0740f66  // pcmpeqb      %xmm0, %xmm2
	LONG $0xd70f4466; BYTE $0xc2  // pmovmskb     %xmm2, %r8d
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd70f4466; BYTE $0xcb  // pmovmskb     %xmm3, %r9d
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xed  // pmovmskb     %xmm5, %r13d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xd6  // pmovmskb     %xmm6, %r10d
	LONG $0xf9740f66  // pcmpeqb      %xmm1, %xmm7
	LONG $0xd70f4466; BYTE $0xf7  // pmovmskb     %xmm7, %r14d
	LONG $0x30e0c149  // shlq         $48, %r8
	LONG $0x20e7c149  // shlq         $32, %r15
	LONG $0x10e4c149  // shlq         $16, %r12
	WORD $0x094c; BYTE $0xe7  // orq          %r12, %rdi
	WORD $0x094c; BYTE $0xff  // orq          %r15, %rdi
	LONG $0x30e6c149  // shlq         $48, %r14
	LONG $0x20e2c149  // shlq         $32, %r10
	LONG $0x10e5c149  // shlq         $16, %r13
	WORD $0x094d; BYTE $0xe9  // orq          %r13, %r9
	WORD $0x094d; BYTE $0xd1  // orq          %r10, %r9
	WORD $0x094d; BYTE $0xf1  // orq          %r14, %r9
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_65, $9(%rip)
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_74, $47(%rip)
LBB0_65:
	WORD $0x094c; BYTE $0xc7  // orq          %r8, %rdi
	WORD $0x894c; BYTE $0xca  // movq         %r9, %rdx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_75, $61(%rip)
LBB0_66:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0084850f; WORD $0x0000  // jne          LBB0_76, $132(%rip)
LBB0_67:
	LONG $0xc0c18348  // addq         $-64, %rcx
	LONG $0x40c68348  // addq         $64, %rsi
	LONG $0x3ff98348  // cmpq         $63, %rcx
	LONG $0xff32870f; WORD $0xffff  // ja           LBB0_63, $-206(%rip)
	LONG $0x00116de9; BYTE $0x00  // jmp          LBB0_68, $4461(%rip)
LBB0_74:
	WORD $0x8949; BYTE $0xf2  // movq         %rsi, %r10
	LONG $0xc8552b4c  // subq         $-56(%rbp), %r10
	LONG $0xd9bc0f4d  // bsfq         %r9, %r11
	WORD $0x014d; BYTE $0xd3  // addq         %r10, %r11
	WORD $0x094c; BYTE $0xc7  // orq          %r8, %rdi
	WORD $0x894c; BYTE $0xca  // movq         %r9, %rdx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	LONG $0xffc3840f; WORD $0xffff  // je           LBB0_66, $-61(%rip)
LBB0_75:
	WORD $0x8949; BYTE $0xda  // movq         %rbx, %r10
	WORD $0xf749; BYTE $0xd2  // notq         %r10
	WORD $0x214d; BYTE $0xca  // andq         %r9, %r10
	LONG $0x12048d4f  // leaq         (%r10,%r10), %r8
	WORD $0x0949; BYTE $0xd8  // orq          %rbx, %r8
	WORD $0x894d; BYTE $0xc6  // movq         %r8, %r14
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x214d; BYTE $0xce  // andq         %r9, %r14
	QUAD $0xaaaaaaaaaaaabb48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rbx
	WORD $0x2149; BYTE $0xde  // andq         %rbx, %r14
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0x014d; BYTE $0xd6  // addq         %r10, %r14
	WORD $0x920f; BYTE $0xc3  // setb         %bl
	WORD $0x014d; BYTE $0xf6  // addq         %r14, %r14
	QUAD $0x555555555555ba48; WORD $0x5555  // movabsq      $6148914691236517205, %rdx
	WORD $0x3149; BYTE $0xd6  // xorq         %rdx, %r14
	WORD $0x214d; BYTE $0xc6  // andq         %r8, %r14
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x214c; BYTE $0xf7  // andq         %r14, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff7c840f; WORD $0xffff  // je           LBB0_67, $-132(%rip)
	  // .p2align 4, 0x90
LBB0_76:
	LONG $0xcfbc0f48  // bsfq         %rdi, %rcx
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	LONG $0x0e748d4c; BYTE $0x01  // leaq         $1(%rsi,%rcx), %r14
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa04d8b4c  // movq         $-96(%rbp), %r9
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0x907d8b4c  // movq         $-112(%rbp), %r15
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0xb85d8b48  // movq         $-72(%rbp), %rbx
	LONG $0x4d7d880f; WORD $0x0000  // js           LBB0_951, $19837(%rip)
LBB0_79:
	LONG $0xd04d8b48  // movq         $-48(%rbp), %rcx
	WORD $0x894c; BYTE $0x31  // movq         %r14, (%rcx)
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x0009840f; WORD $0x0000  // je           LBB0_81, $9(%rip)
	WORD $0x394d; BYTE $0xf3  // cmpq         %r14, %r11
	LONG $0x11838e0f; WORD $0x0000  // jle          LBB0_107, $4483(%rip)
LBB0_81:
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xc6  // subq         %rax, %rsi
	LONG $0xfec68348  // addq         $-2, %rsi
	LONG $0x000001b9; BYTE $0x00  // movl         $1, %ecx
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	LONG $0x98558b48  // movq         $-104(%rbp), %rdx
	WORD $0x0948; BYTE $0xd0  // orq          %rdx, %rax
	LONG $0x0100840f; WORD $0x0000  // je           LBB0_92, $256(%rip)
	WORD $0x3948; BYTE $0xd6  // cmpq         %rdx, %rsi
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0x0113850f; WORD $0x0000  // jne          LBB0_93, $275(%rip)
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x10fa8348  // cmpq         $16, %rdx
	LONG $0x0073820f; WORD $0x0000  // jb           LBB0_88, $115(%rip)
	LONG $0xf0c08348  // addq         $-16, %rax
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	LONG $0xf0e28348  // andq         $-16, %rdx
	LONG $0x13748d48; BYTE $0x10  // leaq         $16(%rbx,%rdx), %rsi
	LONG $0x907d8b48  // movq         $-112(%rbp), %rdi
	LONG $0x177c8d48; BYTE $0x10  // leaq         $16(%rdi,%rdx), %rdi
	WORD $0xe083; BYTE $0x0f  // andl         $15, %eax
	WORD $0xdb31  // xorl         %ebx, %ebx
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_85:
	LONG $0xb8558b48  // movq         $-72(%rbp), %rdx
	LONG $0x146f0ff3; BYTE $0x1a  // movdqu       (%rdx,%rbx), %xmm2
	LONG $0x90558b48  // movq         $-112(%rbp), %rdx
	LONG $0x1c6f0ff3; BYTE $0x1a  // movdqu       (%rdx,%rbx), %xmm3
	LONG $0xda740f66  // pcmpeqb      %xmm2, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xfffa8366  // cmpw         $-1, %dx
	LONG $0x0141850f; WORD $0x0000  // jne          LBB0_98, $321(%rip)
	LONG $0x98558b48  // movq         $-104(%rbp), %rdx
	LONG $0xf0c28348  // addq         $-16, %rdx
	LONG $0x10c38348  // addq         $16, %rbx
	LONG $0x98558948  // movq         %rdx, $-104(%rbp)
	LONG $0x0ffa8348  // cmpq         $15, %rdx
	LONG $0xffc2870f; WORD $0xffff  // ja           LBB0_85, $-62(%rip)
	LONG $0x98458948  // movq         %rax, $-104(%rbp)
	LONG $0x907d8948  // movq         %rdi, $-112(%rbp)
	WORD $0x8948; BYTE $0xf3  // movq         %rsi, %rbx
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
LBB0_88:
	LONG $0x90758b48  // movq         $-112(%rbp), %rsi
	WORD $0xf089  // movl         %esi, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000ff03d; BYTE $0x00  // cmpl         $4080, %eax
	LONG $0x0093870f; WORD $0x0000  // ja           LBB0_94, $147(%rip)
	WORD $0xd889  // movl         %ebx, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000ff13d; BYTE $0x00  // cmpl         $4081, %eax
	LONG $0x0081830f; WORD $0x0000  // jae          LBB0_94, $129(%rip)
	LONG $0x136f0ff3  // movdqu       (%rbx), %xmm2
	LONG $0x1e6f0ff3  // movdqu       (%rsi), %xmm3
	LONG $0xda740f66  // pcmpeqb      %xmm2, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xfff88366  // cmpw         $-1, %ax
	LONG $0x00a1840f; WORD $0x0000  // je           LBB0_100, $161(%rip)
	WORD $0xd0f7  // notl         %eax
	WORD $0xb70f; BYTE $0xc0  // movzwl       %ax, %eax
	LONG $0xc0bc0f48  // bsfq         %rax, %rax
	WORD $0xc931  // xorl         %ecx, %ecx
	LONG $0x98453b48  // cmpq         $-104(%rbp), %rax
	WORD $0x930f; BYTE $0xc1  // setae        %cl
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xd6  // subq         %rdx, %rsi
	LONG $0x008f820f; WORD $0x0000  // jb           LBB0_101, $143(%rip)
	LONG $0x0000dbe9; BYTE $0x00  // jmp          LBB0_156, $219(%rip)
	QUAD $0x9090909090909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_92:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xd6  // subq         %rdx, %rsi
	LONG $0x006c820f; WORD $0x0000  // jb           LBB0_101, $108(%rip)
	LONG $0x0000b8e9; BYTE $0x00  // jmp          LBB0_156, $184(%rip)
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_93:
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xd6  // subq         %rdx, %rsi
	LONG $0x004e820f; WORD $0x0000  // jb           LBB0_101, $78(%rip)
	LONG $0x00009ae9; BYTE $0x00  // jmp          LBB0_156, $154(%rip)
LBB0_94:
	LONG $0x987d8348; BYTE $0x00  // cmpq         $0, $-104(%rbp)
	LONG $0x002f840f; WORD $0x0000  // je           LBB0_100, $47(%rip)
	WORD $0xc031  // xorl         %eax, %eax
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_96:
	LONG $0x0314b60f  // movzbl       (%rbx,%rax), %edx
	WORD $0x143a; BYTE $0x06  // cmpb         (%rsi,%rax), %dl
	LONG $0x0062850f; WORD $0x0000  // jne          LBB0_99, $98(%rip)
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	LONG $0x98453948  // cmpq         %rax, $-104(%rbp)
	LONG $0xffe6850f; WORD $0xffff  // jne          LBB0_96, $-26(%rip)
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_100:
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xd6  // subq         %rdx, %rsi
	LONG $0x0051830f; WORD $0x0000  // jae          LBB0_156, $81(%rip)
LBB0_101:
	LONG $0x37048a42  // movb         (%rdi,%r14), %al
	WORD $0x0d3c  // cmpb         $13, %al
	LONG $0x0045840f; WORD $0x0000  // je           LBB0_156, $69(%rip)
	WORD $0x203c  // cmpb         $32, %al
	LONG $0x003d840f; WORD $0x0000  // je           LBB0_156, $61(%rip)
	WORD $0xf704  // addb         $-9, %al
	WORD $0x013c  // cmpb         $1, %al
	LONG $0x0033860f; WORD $0x0000  // jbe          LBB0_156, $51(%rip)
	WORD $0x894c; BYTE $0xf0  // movq         %r14, %rax
	LONG $0x000151e9; BYTE $0x00  // jmp          LBB0_178, $337(%rip)
LBB0_98:
	WORD $0xc931  // xorl         %ecx, %ecx
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xd6  // subq         %rdx, %rsi
	LONG $0xffc5820f; WORD $0xffff  // jb           LBB0_101, $-59(%rip)
	LONG $0x000011e9; BYTE $0x00  // jmp          LBB0_156, $17(%rip)
LBB0_99:
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xd6  // subq         %rdx, %rsi
	LONG $0xffaf820f; WORD $0xffff  // jb           LBB0_101, $-81(%rip)
	  // .p2align 4, 0x90
LBB0_156:
	LONG $0x01468d49  // leaq         $1(%r14), %rax
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_160, $35(%rip)
	WORD $0x1c8a; BYTE $0x07  // movb         (%rdi,%rax), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_160, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_160, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00f8870f; WORD $0x0000  // ja           LBB0_178, $248(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_160:
	LONG $0x02468d49  // leaq         $2(%r14), %rax
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_164, $35(%rip)
	WORD $0x1c8a; BYTE $0x07  // movb         (%rdi,%rax), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_164, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_164, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00c8870f; WORD $0x0000  // ja           LBB0_178, $200(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_164:
	LONG $0x03468d49  // leaq         $3(%r14), %rax
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_168, $35(%rip)
	WORD $0x1c8a; BYTE $0x07  // movb         (%rdi,%rax), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_168, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_168, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0098870f; WORD $0x0000  // ja           LBB0_178, $152(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_168:
	LONG $0x047e8d49  // leaq         $4(%r14), %rdi
	WORD $0x3948; BYTE $0xfa  // cmpq         %rdi, %rdx
	LONG $0x281f860f; WORD $0x0000  // jbe          LBB0_555, $10271(%rip)
	WORD $0x3948; BYTE $0xfa  // cmpq         %rdi, %rdx
	LONG $0x004a840f; WORD $0x0000  // je           LBB0_175, $74(%rip)
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	LONG $0x103c8d48  // leaq         (%rax,%rdx), %rdi
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0x30448d4a; BYTE $0x05  // leaq         $5(%rax,%r14), %rax
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_171:
	LONG $0xff58be0f  // movsbl       $-1(%rax), %ebx
	WORD $0xfb83; BYTE $0x20  // cmpl         $32, %ebx
	LONG $0x0043870f; WORD $0x0000  // ja           LBB0_177, $67(%rip)
	LONG $0xdaa30f49  // btq          %rbx, %r10
	LONG $0x0039830f; WORD $0x0000  // jae          LBB0_177, $57(%rip)
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_171, $-35(%rip)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0x00000be9; BYTE $0x00  // jmp          LBB0_176, $11(%rip)
	LONG $0x90909090  // .p2align 4, 0x90
LBB0_175:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x0148; BYTE $0xf7  // addq         %rsi, %rdi
LBB0_176:
	WORD $0x2948; BYTE $0xf7  // subq         %rsi, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x8948; BYTE $0xf7  // movq         %rsi, %rdi
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x001d820f; WORD $0x0000  // jb           LBB0_178, $29(%rip)
	LONG $0x0027b4e9; BYTE $0x00  // jmp          LBB0_556, $10164(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_177:
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x8948; BYTE $0xfe  // movq         %rdi, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x0148; BYTE $0xf0  // addq         %rsi, %rax
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x279c830f; WORD $0x0000  // jae          LBB0_556, $10140(%rip)
LBB0_178:
	LONG $0x01708d4c  // leaq         $1(%rax), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0x3a073c80  // cmpb         $58, (%rdi,%rax)
	LONG $0x278b850f; WORD $0x0000  // jne          LBB0_556, $10123(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x2560850f; WORD $0x0000  // jne          LBB0_447, $9568(%rip)
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x3949; BYTE $0xd6  // cmpq         %rdx, %r14
	LONG $0x0034830f; WORD $0x0000  // jae          LBB0_185, $52(%rip)
	LONG $0x370c8a42  // movb         (%rdi,%r14), %cl
	WORD $0xf980; BYTE $0x0d  // cmpb         $13, %cl
	LONG $0x0027840f; WORD $0x0000  // je           LBB0_185, $39(%rip)
	WORD $0xf980; BYTE $0x20  // cmpb         $32, %cl
	LONG $0x001e840f; WORD $0x0000  // je           LBB0_185, $30(%rip)
	WORD $0xc180; BYTE $0xf7  // addb         $-9, %cl
	WORD $0xf980; BYTE $0x01  // cmpb         $1, %cl
	LONG $0x0012860f; WORD $0x0000  // jbe          LBB0_185, $18(%rip)
	WORD $0x894c; BYTE $0xf1  // movq         %r14, %rcx
	LONG $0x00014ae9; BYTE $0x00  // jmp          LBB0_207, $330(%rip)
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_185:
	LONG $0x02488d48  // leaq         $2(%rax), %rcx
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_189, $35(%rip)
	WORD $0x1c8a; BYTE $0x0f  // movb         (%rdi,%rcx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_189, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_189, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0112870f; WORD $0x0000  // ja           LBB0_207, $274(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_189:
	LONG $0x03488d48  // leaq         $3(%rax), %rcx
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_193, $35(%rip)
	WORD $0x1c8a; BYTE $0x0f  // movb         (%rdi,%rcx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_193, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_193, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00e2870f; WORD $0x0000  // ja           LBB0_207, $226(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_193:
	LONG $0x04488d48  // leaq         $4(%rax), %rcx
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_197, $35(%rip)
	WORD $0x1c8a; BYTE $0x0f  // movb         (%rdi,%rcx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_197, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_197, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00b2870f; WORD $0x0000  // ja           LBB0_207, $178(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_197:
	LONG $0x05708d48  // leaq         $5(%rax), %rsi
	WORD $0x3948; BYTE $0xf2  // cmpq         %rsi, %rdx
	LONG $0x0063860f; WORD $0x0000  // jbe          LBB0_204, $99(%rip)
	WORD $0x3948; BYTE $0xf2  // cmpq         %rsi, %rdx
	LONG $0x0065840f; WORD $0x0000  // je           LBB0_205, $101(%rip)
	LONG $0x17348d48  // leaq         (%rdi,%rdx), %rsi
	LONG $0x074c8d48; BYTE $0x06  // leaq         $6(%rdi,%rax), %rcx
	WORD $0x2948; BYTE $0xd0  // subq         %rdx, %rax
	LONG $0x05c08348  // addq         $5, %rax
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_200:
	LONG $0xff79be0f  // movsbl       $-1(%rcx), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x0055870f; WORD $0x0000  // ja           LBB0_206, $85(%rip)
	LONG $0xfaa30f49  // btq          %rdi, %r10
	LONG $0x004b830f; WORD $0x0000  // jae          LBB0_206, $75(%rip)
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	WORD $0xff48; BYTE $0xc0  // incq         %rax
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_200, $-35(%rip)
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf1  // movq         %rsi, %rcx
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x004a820f; WORD $0x0000  // jb           LBB0_207, $74(%rip)
	LONG $0x000145e9; BYTE $0x00  // jmp          LBB0_224, $325(%rip)
	LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_204:
	WORD $0x8949; BYTE $0x33  // movq         %rsi, (%r11)
	WORD $0x8949; BYTE $0xf6  // movq         %rsi, %r14
	LONG $0x000135e9; BYTE $0x00  // jmp          LBB0_224, $309(%rip)
LBB0_205:
	WORD $0x0148; BYTE $0xfe  // addq         %rdi, %rsi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf1  // movq         %rsi, %rcx
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0023820f; WORD $0x0000  // jb           LBB0_207, $35(%rip)
	LONG $0x00011ee9; BYTE $0x00  // jmp          LBB0_224, $286(%rip)
LBB0_206:
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x0148; BYTE $0xc1  // addq         %rax, %rcx
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0108830f; WORD $0x0000  // jae          LBB0_224, $264(%rip)
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_207:
	LONG $0x01718d4c  // leaq         $1(%rcx), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0x0f04be0f  // movsbl       (%rdi,%rcx), %eax
	WORD $0xf883; BYTE $0x7b  // cmpl         $123, %eax
	LONG $0x0382870f; WORD $0x0000  // ja           LBB0_265, $898(%rip)
	LONG $0x0d158d48; WORD $0x004d; BYTE $0x00  // leaq         $19725(%rip), %rdx  /* LJTI0_1+0(%rip) */
	LONG $0x82046348  // movslq       (%rdx,%rax,4), %rax
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	JMP AX
LBB0_209:
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x294c; BYTE $0xf0  // subq         %r14, %rax
	WORD $0x0149; BYTE $0xfe  // addq         %rdi, %r14
	LONG $0x10f88348  // cmpq         $16, %rax
	LONG $0x0066820f; WORD $0x0000  // jb           LBB0_214, $102(%rip)
	WORD $0x2948; BYTE $0xca  // subq         %rcx, %rdx
	LONG $0xefc28348  // addq         $-17, %rdx
	WORD $0x8948; BYTE $0xd6  // movq         %rdx, %rsi
	LONG $0xf0e68348  // andq         $-16, %rsi
	WORD $0x0148; BYTE $0xce  // addq         %rcx, %rsi
	LONG $0x374c8d48; BYTE $0x11  // leaq         $17(%rdi,%rsi), %rcx
	WORD $0xe283; BYTE $0x0f  // andl         $15, %edx
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_211:
	LONG $0x6f0f41f3; BYTE $0x16  // movdqu       (%r14), %xmm2
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0x740f4166; BYTE $0xdd  // pcmpeqb      %xmm13, %xmm3
	LONG $0xeb0f4166; BYTE $0xd6  // por          %xmm14, %xmm2
	LONG $0xd4740f66  // pcmpeqb      %xmm4, %xmm2
	LONG $0xd3eb0f66  // por          %xmm3, %xmm2
	LONG $0xf2d70f66  // pmovmskb     %xmm2, %esi
	WORD $0x8566; BYTE $0xf6  // testw        %si, %si
	LONG $0x0068850f; WORD $0x0000  // jne          LBB0_222, $104(%rip)
	LONG $0x10c68349  // addq         $16, %r14
	LONG $0xf0c08348  // addq         $-16, %rax
	LONG $0x0ff88348  // cmpq         $15, %rax
	LONG $0xffc6870f; WORD $0xffff  // ja           LBB0_211, $-58(%rip)
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x8949; BYTE $0xce  // movq         %rcx, %r14
LBB0_214:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0032840f; WORD $0x0000  // je           LBB0_221, $50(%rip)
	LONG $0x060c8d49  // leaq         (%r14,%rax), %rcx
LBB0_216:
	LONG $0x16b60f41  // movzbl       (%r14), %edx
	WORD $0xfa80; BYTE $0x2c  // cmpb         $44, %dl
	LONG $0x0021840f; WORD $0x0000  // je           LBB0_221, $33(%rip)
	WORD $0xfa80; BYTE $0x7d  // cmpb         $125, %dl
	LONG $0x0018840f; WORD $0x0000  // je           LBB0_221, $24(%rip)
	WORD $0xfa80; BYTE $0x5d  // cmpb         $93, %dl
	LONG $0x000f840f; WORD $0x0000  // je           LBB0_221, $15(%rip)
	WORD $0xff49; BYTE $0xc6  // incq         %r14
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	LONG $0xffd5850f; WORD $0xffff  // jne          LBB0_216, $-43(%rip)
	WORD $0x8949; BYTE $0xce  // movq         %rcx, %r14
LBB0_221:
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	LONG $0x00001ae9; BYTE $0x00  // jmp          LBB0_223, $26(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_222:
	WORD $0xb70f; BYTE $0xc6  // movzwl       %si, %eax
	LONG $0xc0bc0f48  // bsfq         %rax, %rax
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	WORD $0x0149; BYTE $0xc6  // addq         %rax, %r14
LBB0_223:
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
LBB0_224:
	LONG $0x007d8b49  // movq         (%r13), %rdi
	LONG $0x08458b49  // movq         $8(%r13), %rax
	WORD $0x894c; BYTE $0xf1  // movq         %r14, %rcx
	WORD $0x2948; BYTE $0xc1  // subq         %rax, %rcx
	LONG $0x002c830f; WORD $0x0000  // jae          LBB0_229, $44(%rip)
	LONG $0x37148a42  // movb         (%rdi,%r14), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x001f840f; WORD $0x0000  // je           LBB0_229, $31(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_229, $22(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x000a860f; WORD $0x0000  // jbe          LBB0_229, $10(%rip)
	WORD $0x894c; BYTE $0xf2  // movq         %r14, %rdx
	LONG $0xfff674e9; BYTE $0xff  // jmp          LBB0_250, $-2444(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_229:
	LONG $0x01568d49  // leaq         $1(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_233, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_233, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_233, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0xf644870f; WORD $0xffff  // ja           LBB0_250, $-2492(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_233:
	LONG $0x02568d49  // leaq         $2(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_237, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_237, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_237, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0xf614870f; WORD $0xffff  // ja           LBB0_250, $-2540(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_237:
	LONG $0x03568d49  // leaq         $3(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_241, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_241, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_241, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0xf5e4870f; WORD $0xffff  // ja           LBB0_250, $-2588(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_241:
	LONG $0x04768d49  // leaq         $4(%r14), %rsi
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0x23cd860f; WORD $0x0000  // jbe          LBB0_549, $9165(%rip)
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0xf5ba840f; WORD $0xffff  // je           LBB0_248, $-2630(%rip)
	LONG $0x07348d48  // leaq         (%rdi,%rax), %rsi
	LONG $0x04c18348  // addq         $4, %rcx
	WORD $0x8948; BYTE $0xfb  // movq         %rdi, %rbx
	LONG $0x37548d4a; BYTE $0x05  // leaq         $5(%rdi,%r14), %rdx
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_244:
	LONG $0xff7abe0f  // movsbl       $-1(%rdx), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x002d870f; WORD $0x0000  // ja           LBB0_249, $45(%rip)
	LONG $0xfaa30f49  // btq          %rdi, %r10
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_249, $35(%rip)
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_244, $-35(%rip)
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0xf57d820f; WORD $0xffff  // jb           LBB0_250, $-2691(%rip)
	LONG $0x0023c8e9; BYTE $0x00  // jmp          LBB0_556, $9160(%rip)
LBB0_249:
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x0148; BYTE $0xca  // addq         %rcx, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0xf563820f; WORD $0xffff  // jb           LBB0_250, $-2717(%rip)
	LONG $0x0023aee9; BYTE $0x00  // jmp          LBB0_556, $9134(%rip)
LBB0_252:
	LONG $0x04c18348  // addq         $4, %rcx
	WORD $0x3b49; BYTE $0x08  // cmpq         (%r8), %rcx
	LONG $0xfe9f870f; WORD $0xffff  // ja           LBB0_224, $-353(%rip)
	LONG $0x000130e9; BYTE $0x00  // jmp          LBB0_265, $304(%rip)
LBB0_253:
	WORD $0x894d; BYTE $0xcf  // movq         %r9, %r15
	WORD $0x8b4d; BYTE $0x00  // movq         (%r8), %r8
	WORD $0x894c; BYTE $0xc0  // movq         %r8, %rax
	WORD $0x294c; BYTE $0xf0  // subq         %r14, %rax
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0x0ed48c0f; WORD $0x0000  // jl           LBB0_325, $3796(%rip)
	LONG $0x0f0c8d4c  // leaq         (%rdi,%rcx), %r9
	WORD $0x2949; BYTE $0xc8  // subq         %rcx, %r8
	LONG $0x00001fb9; BYTE $0x00  // movl         $31, %ecx
	WORD $0xc031  // xorl         %eax, %eax
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x000030e9; BYTE $0x00  // jmp          LBB0_255, $48(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_258:
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0x00b1850f; WORD $0x0000  // jne          LBB0_257, $177(%rip)
LBB0_259:
	LONG $0x20c08348  // addq         $32, %rax
	LONG $0x08548d49; BYTE $0xe0  // leaq         $-32(%r8,%rcx), %rdx
	LONG $0xe0c18348  // addq         $-32, %rcx
	LONG $0x3ffa8348  // cmpq         $63, %rdx
	LONG $0x0dcb8e0f; WORD $0x0000  // jle          LBB0_260, $3531(%rip)
LBB0_255:
	LONG $0x6f0f41f3; WORD $0x0154; BYTE $0x01  // movdqu       $1(%r9,%rax), %xmm2
	LONG $0x6f0f41f3; WORD $0x015c; BYTE $0x11  // movdqu       $17(%r9,%rax), %xmm3
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xd3  // orq          %rdx, %rbx
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xf2d70f66  // pmovmskb     %xmm2, %esi
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0948; BYTE $0xf2  // orq          %rsi, %rdx
	WORD $0x8948; BYTE $0xd6  // movq         %rdx, %rsi
	WORD $0x094c; BYTE $0xd6  // orq          %r10, %rsi
	LONG $0xff8e840f; WORD $0xffff  // je           LBB0_258, $-114(%rip)
	WORD $0x8944; BYTE $0xd6  // movl         %r10d, %esi
	LONG $0xffffbc41; WORD $0xffff  // movl         $4294967295, %r12d
	WORD $0x3144; BYTE $0xe6  // xorl         %r12d, %esi
	WORD $0xf221  // andl         %esi, %edx
	WORD $0x348d; BYTE $0x12  // leal         (%rdx,%rdx), %esi
	WORD $0x0944; BYTE $0xd6  // orl          %r10d, %esi
	QUAD $0xaaaaaaab24bc8d41  // leal         $-1431655765(%r12), %edi
	WORD $0xf731  // xorl         %esi, %edi
	WORD $0xd721  // andl         %edx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0xd701  // addl         %edx, %edi
	LONG $0xc2920f41  // setb         %r10b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xf721  // andl         %esi, %edi
	WORD $0x3144; BYTE $0xe7  // xorl         %r12d, %edi
	WORD $0xfb21  // andl         %edi, %ebx
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0xff4f840f; WORD $0xffff  // je           LBB0_259, $-177(%rip)
LBB0_257:
	LONG $0xcbbc0f48  // bsfq         %rbx, %rcx
	WORD $0x0149; BYTE $0xc9  // addq         %rcx, %r9
	WORD $0x0149; BYTE $0xc1  // addq         %rax, %r9
	WORD $0x2949; BYTE $0xf9  // subq         %rdi, %r9
	LONG $0x02c18349  // addq         $2, %r9
	WORD $0x894d; BYTE $0x0b  // movq         %r9, (%r11)
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	WORD $0x894d; BYTE $0xf9  // movq         %r15, %r9
	LONG $0xfffd77e9; BYTE $0xff  // jmp          LBB0_224, $-649(%rip)
LBB0_264:
	LONG $0x05c18348  // addq         $5, %rcx
	WORD $0x3b49; BYTE $0x08  // cmpq         (%r8), %rcx
	LONG $0xfd6a870f; WORD $0xffff  // ja           LBB0_224, $-662(%rip)
LBB0_265:
	WORD $0x8949; BYTE $0x0b  // movq         %rcx, (%r11)
	WORD $0x8949; BYTE $0xce  // movq         %rcx, %r14
	LONG $0xfffd5fe9; BYTE $0xff  // jmp          LBB0_224, $-673(%rip)
LBB0_266:
	WORD $0x8b4d; BYTE $0x10  // movq         (%r8), %r10
	WORD $0x294d; BYTE $0xf2  // subq         %r14, %r10
	WORD $0x014c; BYTE $0xf7  // addq         %r14, %rdi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x3145; BYTE $0xdb  // xorl         %r11d, %r11d
	WORD $0x3145; BYTE $0xe4  // xorl         %r12d, %r12d
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0x01498d0f; WORD $0x0000  // jge          LBB0_267, $329(%rip)
LBB0_276:
	LONG $0xa0558b48  // movq         $-96(%rbp), %rdx
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0f128e0f; WORD $0x0000  // jle          LBB0_340, $3858(%rip)
	WORD $0x8948; BYTE $0xf9  // movq         %rdi, %rcx
	QUAD $0xffff70857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-144(%rbp)
	QUAD $0xffff60857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-160(%rbp)
	QUAD $0xffff50857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-176(%rbp)
	QUAD $0xffff40857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-192(%rbp)
	WORD $0xc889  // movl         %ecx, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000fc13d; BYTE $0x00  // cmpl         $4033, %eax
	LONG $0x0035820f; WORD $0x0000  // jb           LBB0_280, $53(%rip)
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0x0037820f; WORD $0x0000  // jb           LBB0_281, $55(%rip)
	WORD $0x100f; BYTE $0x11  // movups       (%rcx), %xmm2
	LONG $0x4095110f; WORD $0xffff; BYTE $0xff  // movups       %xmm2, $-192(%rbp)
	LONG $0x516f0ff3; BYTE $0x10  // movdqu       $16(%rcx), %xmm2
	QUAD $0xffffff50957f0ff3  // movdqu       %xmm2, $-176(%rbp)
	LONG $0x20c18348  // addq         $32, %rcx
	LONG $0xe07a8d49  // leaq         $-32(%r10), %rdi
	LONG $0x60b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-160(%rbp), %rsi
	LONG $0x000016e9; BYTE $0x00  // jmp          LBB0_282, $22(%rip)
LBB0_280:
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	WORD $0x8948; BYTE $0xcf  // movq         %rcx, %rdi
	LONG $0x0000c2e9; BYTE $0x00  // jmp          LBB0_267, $194(%rip)
LBB0_281:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	WORD $0x894c; BYTE $0xd7  // movq         %r10, %rdi
LBB0_282:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x0047820f; WORD $0x0000  // jb           LBB0_283, $71(%rip)
	LONG $0x116f0ff3  // movdqu       (%rcx), %xmm2
	LONG $0x167f0ff3  // movdqu       %xmm2, (%rsi)
	LONG $0x10c18348  // addq         $16, %rcx
	LONG $0x10c68348  // addq         $16, %rsi
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0x0033830f; WORD $0x0000  // jae          LBB0_290, $51(%rip)
LBB0_284:
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0x00458c0f; WORD $0x0000  // jl           LBB0_285, $69(%rip)
LBB0_291:
	WORD $0x018b  // movl         (%rcx), %eax
	WORD $0x0689  // movl         %eax, (%rsi)
	LONG $0x04c18348  // addq         $4, %rcx
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0xfcc78348  // addq         $-4, %rdi
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x0035830f; WORD $0x0000  // jae          LBB0_286, $53(%rip)
	LONG $0x000042e9; BYTE $0x00  // jmp          LBB0_287, $66(%rip)
LBB0_283:
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0xffcd820f; WORD $0xffff  // jb           LBB0_284, $-51(%rip)
LBB0_290:
	WORD $0x8b48; BYTE $0x01  // movq         (%rcx), %rax
	WORD $0x8948; BYTE $0x06  // movq         %rax, (%rsi)
	LONG $0x08c18348  // addq         $8, %rcx
	LONG $0x08c68348  // addq         $8, %rsi
	LONG $0xf8c78348  // addq         $-8, %rdi
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0xffbb8d0f; WORD $0xffff  // jge          LBB0_291, $-69(%rip)
LBB0_285:
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x0012820f; WORD $0x0000  // jb           LBB0_287, $18(%rip)
LBB0_286:
	WORD $0xb70f; BYTE $0x01  // movzwl       (%rcx), %eax
	WORD $0x8966; BYTE $0x06  // movw         %ax, (%rsi)
	LONG $0x02c18348  // addq         $2, %rcx
	LONG $0x02c68348  // addq         $2, %rsi
	LONG $0xfec78348  // addq         $-2, %rdi
LBB0_287:
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	LONG $0x408d8d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rcx
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	WORD $0x8948; BYTE $0xcf  // movq         %rcx, %rdi
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0x000b840f; WORD $0x0000  // je           LBB0_267, $11(%rip)
	WORD $0x008a  // movb         (%rax), %al
	WORD $0x0688  // movb         %al, (%rsi)
	LONG $0x40bd8d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdi
LBB0_267:
	LONG $0x176f0ff3  // movdqu       (%rdi), %xmm2
	LONG $0x6f6f0ff3; BYTE $0x10  // movdqu       $16(%rdi), %xmm5
	LONG $0x7f6f0ff3; BYTE $0x20  // movdqu       $32(%rdi), %xmm7
	LONG $0xc87d8948  // movq         %rdi, $-56(%rbp)
	LONG $0x776f0ff3; BYTE $0x30  // movdqu       $48(%rdi), %xmm6
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e7c148  // shlq         $32, %rdi
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc6  // orq          %rax, %r14
	WORD $0x0949; BYTE $0xfe  // orq          %rdi, %r14
	WORD $0x0949; BYTE $0xde  // orq          %rbx, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e3c148  // shlq         $32, %rbx
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xf8  // orq          %rdi, %rax
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0x894d; BYTE $0xef  // movq         %r13, %r15
	WORD $0x094c; BYTE $0xc1  // orq          %r8, %rcx
	LONG $0x004b840f; WORD $0x0000  // je           LBB0_269, $75(%rip)
	WORD $0x894c; BYTE $0xc1  // movq         %r8, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xc1  // andq         %rax, %rcx
	LONG $0x091c8d48  // leaq         (%rcx,%rcx), %rbx
	WORD $0x094c; BYTE $0xc3  // orq          %r8, %rbx
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x3148; BYTE $0xf7  // xorq         %rsi, %rdi
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xc0920f41  // setb         %r8b
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x3148; BYTE $0xc8  // xorq         %rcx, %rax
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_270, $10(%rip)
LBB0_269:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
LBB0_270:
	WORD $0x214c; BYTE $0xf0  // andq         %r14, %rax
	LONG $0x6e0f4866; BYTE $0xd8  // movq         %rax, %xmm3
	LONG $0x3a0f4166; WORD $0xd944; BYTE $0x00  // pclmulqdq    $0, %xmm9, %xmm3
	LONG $0x7e0f4966; BYTE $0xde  // movq         %xmm3, %r14
	WORD $0x314d; BYTE $0xce  // xorq         %r9, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc5  // orq          %rax, %r13
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	WORD $0x0949; BYTE $0xdd  // orq          %rbx, %r13
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	WORD $0xf749; BYTE $0xd1  // notq         %r9
	WORD $0x214d; BYTE $0xcd  // andq         %r9, %r13
	LONG $0x740f4166; BYTE $0xd3  // pcmpeqb      %xmm11, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0x740f4166; BYTE $0xeb  // pcmpeqb      %xmm11, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0x740f4166; BYTE $0xfb  // pcmpeqb      %xmm11, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0x740f4166; BYTE $0xf3  // pcmpeqb      %xmm11, %xmm6
	LONG $0xced70f66  // pmovmskb     %xmm6, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xf0  // orq          %rsi, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	QUAD $0x333333333333bf48; WORD $0x3333  // movabsq      $3689348814741910323, %rdi
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	LONG $0x0077840f; WORD $0x0000  // je           LBB0_274, $119(%rip)
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
	BYTE $0x90  // .p2align 4, 0x90
LBB0_272:
	LONG $0xff588d48  // leaq         $-1(%rax), %rbx
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0x214c; BYTE $0xe9  // andq         %r13, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xd148; BYTE $0xee  // shrq         %rsi
	QUAD $0x555555555555ba48; WORD $0x5555  // movabsq      $6148914691236517205, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x2948; BYTE $0xf1  // subq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0x2148; BYTE $0xfe  // andq         %rdi, %rsi
	LONG $0x02e9c148  // shrq         $2, %rcx
	WORD $0x2148; BYTE $0xf9  // andq         %rdi, %rcx
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	LONG $0x04eec148  // shrq         $4, %rsi
	WORD $0x0148; BYTE $0xce  // addq         %rcx, %rsi
	WORD $0x214c; BYTE $0xce  // andq         %r9, %rsi
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xf1af0f48  // imulq        %rcx, %rsi
	LONG $0x38eec148  // shrq         $56, %rsi
	WORD $0x014c; BYTE $0xde  // addq         %r11, %rsi
	WORD $0x394c; BYTE $0xe6  // cmpq         %r12, %rsi
	LONG $0x0498860f; WORD $0x0000  // jbe          LBB0_318, $1176(%rip)
	WORD $0xff49; BYTE $0xc4  // incq         %r12
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	LONG $0xff99850f; WORD $0xffff  // jne          LBB0_272, $-103(%rip)
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_275, $10(%rip)
LBB0_274:
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
LBB0_275:
	LONG $0x3ffec149  // sarq         $63, %r14
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0xd148; BYTE $0xe8  // shrq         %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x2148; BYTE $0xc8  // andq         %rcx, %rax
	WORD $0x2949; BYTE $0xc5  // subq         %rax, %r13
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x02edc149  // shrq         $2, %r13
	WORD $0x2149; BYTE $0xfd  // andq         %rdi, %r13
	WORD $0x0149; BYTE $0xc5  // addq         %rax, %r13
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	LONG $0x04e8c148  // shrq         $4, %rax
	WORD $0x014c; BYTE $0xe8  // addq         %r13, %rax
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xc1af0f48  // imulq        %rcx, %rax
	LONG $0x38e8c148  // shrq         $56, %rax
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0x40c78348  // addq         $64, %rdi
	LONG $0xc0c28349  // addq         $-64, %r10
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	WORD $0x894d; BYTE $0xfd  // movq         %r15, %r13
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0xfd5b8d0f; WORD $0xffff  // jge          LBB0_267, $-677(%rip)
	LONG $0xfffc0de9; BYTE $0xff  // jmp          LBB0_276, $-1011(%rip)
LBB0_292:
	WORD $0x8b4d; BYTE $0x10  // movq         (%r8), %r10
	WORD $0x294d; BYTE $0xf2  // subq         %r14, %r10
	WORD $0x014c; BYTE $0xf7  // addq         %r14, %rdi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x3145; BYTE $0xdb  // xorl         %r11d, %r11d
	WORD $0x3145; BYTE $0xe4  // xorl         %r12d, %r12d
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0x01498d0f; WORD $0x0000  // jge          LBB0_293, $329(%rip)
LBB0_302:
	LONG $0xa0558b48  // movq         $-96(%rbp), %rdx
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0b008e0f; WORD $0x0000  // jle          LBB0_340, $2816(%rip)
	WORD $0x8948; BYTE $0xf9  // movq         %rdi, %rcx
	QUAD $0xffff70857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-144(%rbp)
	QUAD $0xffff60857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-160(%rbp)
	QUAD $0xffff50857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-176(%rbp)
	QUAD $0xffff40857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-192(%rbp)
	WORD $0xc889  // movl         %ecx, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000fc13d; BYTE $0x00  // cmpl         $4033, %eax
	LONG $0x0035820f; WORD $0x0000  // jb           LBB0_306, $53(%rip)
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0x0037820f; WORD $0x0000  // jb           LBB0_307, $55(%rip)
	WORD $0x100f; BYTE $0x11  // movups       (%rcx), %xmm2
	LONG $0x4095110f; WORD $0xffff; BYTE $0xff  // movups       %xmm2, $-192(%rbp)
	LONG $0x516f0ff3; BYTE $0x10  // movdqu       $16(%rcx), %xmm2
	QUAD $0xffffff50957f0ff3  // movdqu       %xmm2, $-176(%rbp)
	LONG $0x20c18348  // addq         $32, %rcx
	LONG $0xe07a8d49  // leaq         $-32(%r10), %rdi
	LONG $0x60b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-160(%rbp), %rsi
	LONG $0x000016e9; BYTE $0x00  // jmp          LBB0_308, $22(%rip)
LBB0_306:
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	WORD $0x8948; BYTE $0xcf  // movq         %rcx, %rdi
	LONG $0x0000c2e9; BYTE $0x00  // jmp          LBB0_293, $194(%rip)
LBB0_307:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	WORD $0x894c; BYTE $0xd7  // movq         %r10, %rdi
LBB0_308:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x0047820f; WORD $0x0000  // jb           LBB0_309, $71(%rip)
	LONG $0x116f0ff3  // movdqu       (%rcx), %xmm2
	LONG $0x167f0ff3  // movdqu       %xmm2, (%rsi)
	LONG $0x10c18348  // addq         $16, %rcx
	LONG $0x10c68348  // addq         $16, %rsi
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0x0033830f; WORD $0x0000  // jae          LBB0_316, $51(%rip)
LBB0_310:
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0x00458c0f; WORD $0x0000  // jl           LBB0_311, $69(%rip)
LBB0_317:
	WORD $0x018b  // movl         (%rcx), %eax
	WORD $0x0689  // movl         %eax, (%rsi)
	LONG $0x04c18348  // addq         $4, %rcx
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0xfcc78348  // addq         $-4, %rdi
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x0035830f; WORD $0x0000  // jae          LBB0_312, $53(%rip)
	LONG $0x000042e9; BYTE $0x00  // jmp          LBB0_313, $66(%rip)
LBB0_309:
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0xffcd820f; WORD $0xffff  // jb           LBB0_310, $-51(%rip)
LBB0_316:
	WORD $0x8b48; BYTE $0x01  // movq         (%rcx), %rax
	WORD $0x8948; BYTE $0x06  // movq         %rax, (%rsi)
	LONG $0x08c18348  // addq         $8, %rcx
	LONG $0x08c68348  // addq         $8, %rsi
	LONG $0xf8c78348  // addq         $-8, %rdi
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0xffbb8d0f; WORD $0xffff  // jge          LBB0_317, $-69(%rip)
LBB0_311:
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x0012820f; WORD $0x0000  // jb           LBB0_313, $18(%rip)
LBB0_312:
	WORD $0xb70f; BYTE $0x01  // movzwl       (%rcx), %eax
	WORD $0x8966; BYTE $0x06  // movw         %ax, (%rsi)
	LONG $0x02c18348  // addq         $2, %rcx
	LONG $0x02c68348  // addq         $2, %rsi
	LONG $0xfec78348  // addq         $-2, %rdi
LBB0_313:
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	LONG $0x408d8d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rcx
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	WORD $0x8948; BYTE $0xcf  // movq         %rcx, %rdi
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0x000b840f; WORD $0x0000  // je           LBB0_293, $11(%rip)
	WORD $0x008a  // movb         (%rax), %al
	WORD $0x0688  // movb         %al, (%rsi)
	LONG $0x40bd8d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdi
LBB0_293:
	LONG $0x176f0ff3  // movdqu       (%rdi), %xmm2
	LONG $0x6f6f0ff3; BYTE $0x10  // movdqu       $16(%rdi), %xmm5
	LONG $0x7f6f0ff3; BYTE $0x20  // movdqu       $32(%rdi), %xmm7
	LONG $0xc87d8948  // movq         %rdi, $-56(%rbp)
	LONG $0x776f0ff3; BYTE $0x30  // movdqu       $48(%rdi), %xmm6
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e7c148  // shlq         $32, %rdi
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc6  // orq          %rax, %r14
	WORD $0x0949; BYTE $0xfe  // orq          %rdi, %r14
	WORD $0x0949; BYTE $0xde  // orq          %rbx, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e3c148  // shlq         $32, %rbx
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xf8  // orq          %rdi, %rax
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0x894d; BYTE $0xef  // movq         %r13, %r15
	WORD $0x094c; BYTE $0xc1  // orq          %r8, %rcx
	LONG $0x004b840f; WORD $0x0000  // je           LBB0_295, $75(%rip)
	WORD $0x894c; BYTE $0xc1  // movq         %r8, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xc1  // andq         %rax, %rcx
	LONG $0x091c8d48  // leaq         (%rcx,%rcx), %rbx
	WORD $0x094c; BYTE $0xc3  // orq          %r8, %rbx
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x3148; BYTE $0xf7  // xorq         %rsi, %rdi
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xc0920f41  // setb         %r8b
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x3148; BYTE $0xc8  // xorq         %rcx, %rax
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_296, $10(%rip)
LBB0_295:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
LBB0_296:
	WORD $0x214c; BYTE $0xf0  // andq         %r14, %rax
	LONG $0x6e0f4866; BYTE $0xd8  // movq         %rax, %xmm3
	LONG $0x3a0f4166; WORD $0xd944; BYTE $0x00  // pclmulqdq    $0, %xmm9, %xmm3
	LONG $0x7e0f4966; BYTE $0xde  // movq         %xmm3, %r14
	WORD $0x314d; BYTE $0xce  // xorq         %r9, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc5  // orq          %rax, %r13
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	WORD $0x0949; BYTE $0xdd  // orq          %rbx, %r13
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	WORD $0xf749; BYTE $0xd1  // notq         %r9
	WORD $0x214d; BYTE $0xcd  // andq         %r9, %r13
	LONG $0xd4740f66  // pcmpeqb      %xmm4, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0xec740f66  // pcmpeqb      %xmm4, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xfc740f66  // pcmpeqb      %xmm4, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xf4740f66  // pcmpeqb      %xmm4, %xmm6
	LONG $0xced70f66  // pmovmskb     %xmm6, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xf0  // orq          %rsi, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	QUAD $0x333333333333bf48; WORD $0x3333  // movabsq      $3689348814741910323, %rdi
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	LONG $0x0079840f; WORD $0x0000  // je           LBB0_300, $121(%rip)
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
	WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_298:
	LONG $0xff588d48  // leaq         $-1(%rax), %rbx
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0x214c; BYTE $0xe9  // andq         %r13, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xd148; BYTE $0xee  // shrq         %rsi
	QUAD $0x555555555555ba48; WORD $0x5555  // movabsq      $6148914691236517205, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x2948; BYTE $0xf1  // subq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0x2148; BYTE $0xfe  // andq         %rdi, %rsi
	LONG $0x02e9c148  // shrq         $2, %rcx
	WORD $0x2148; BYTE $0xf9  // andq         %rdi, %rcx
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	LONG $0x04eec148  // shrq         $4, %rsi
	WORD $0x0148; BYTE $0xce  // addq         %rcx, %rsi
	WORD $0x214c; BYTE $0xce  // andq         %r9, %rsi
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xf1af0f48  // imulq        %rcx, %rsi
	LONG $0x38eec148  // shrq         $56, %rsi
	WORD $0x014c; BYTE $0xde  // addq         %r11, %rsi
	WORD $0x394c; BYTE $0xe6  // cmpq         %r12, %rsi
	LONG $0x0088860f; WORD $0x0000  // jbe          LBB0_318, $136(%rip)
	WORD $0xff49; BYTE $0xc4  // incq         %r12
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	LONG $0xff99850f; WORD $0xffff  // jne          LBB0_298, $-103(%rip)
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_301, $10(%rip)
LBB0_300:
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
LBB0_301:
	LONG $0x3ffec149  // sarq         $63, %r14
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0xd148; BYTE $0xe8  // shrq         %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x2148; BYTE $0xc8  // andq         %rcx, %rax
	WORD $0x2949; BYTE $0xc5  // subq         %rax, %r13
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x02edc149  // shrq         $2, %r13
	WORD $0x2149; BYTE $0xfd  // andq         %rdi, %r13
	WORD $0x0149; BYTE $0xc5  // addq         %rax, %r13
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	LONG $0x04e8c148  // shrq         $4, %rax
	WORD $0x014c; BYTE $0xe8  // addq         %r13, %rax
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xc1af0f48  // imulq        %rcx, %rax
	LONG $0x38e8c148  // shrq         $56, %rax
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0x40c78348  // addq         $64, %rdi
	LONG $0xc0c28349  // addq         $-64, %r10
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	WORD $0x894d; BYTE $0xfd  // movq         %r15, %r13
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0xfd5d8d0f; WORD $0xffff  // jge          LBB0_293, $-675(%rip)
	LONG $0xfffc0fe9; BYTE $0xff  // jmp          LBB0_302, $-1009(%rip)
LBB0_318:
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	WORD $0x8b49; BYTE $0x08  // movq         (%r8), %rcx
	LONG $0xc0bc0f48  // bsfq         %rax, %rax
	WORD $0x294c; BYTE $0xd0  // subq         %r10, %rax
	LONG $0x08748d4c; BYTE $0x01  // leaq         $1(%rax,%rcx), %r14
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	WORD $0x3949; BYTE $0xc6  // cmpq         %rax, %r14
	LONG $0xf0470f4c  // cmovaq       %rax, %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	WORD $0x894d; BYTE $0xfd  // movq         %r15, %r13
	LONG $0xa04d8b4c  // movq         $-96(%rbp), %r9
	LONG $0xfff500e9; BYTE $0xff  // jmp          LBB0_224, $-2816(%rip)
LBB0_68:
	LONG $0x884d8b48  // movq         $-120(%rbp), %rcx
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa04d8b4c  // movq         $-96(%rbp), %r9
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0x80758b4c  // movq         $-128(%rbp), %r14
	LONG $0x20f98348  // cmpq         $32, %rcx
	LONG $0x00a7820f; WORD $0x0000  // jb           LBB0_106, $167(%rip)
LBB0_69:
	LONG $0x6f0f41f3; BYTE $0x16  // movdqu       (%r14), %xmm2
	LONG $0x6f0f41f3; WORD $0x105e  // movdqu       $16(%r14), %xmm3
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd70f4466; BYTE $0xc5  // pmovmskb     %xmm5, %r8d
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xf5d70f66  // pmovmskb     %xmm5, %esi
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0x10e6c148  // shlq         $16, %rsi
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0948; BYTE $0xd7  // orq          %rdx, %rdi
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_71, $9(%rip)
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x04e3850f; WORD $0x0000  // jne          LBB0_326, $1251(%rip)
LBB0_71:
	WORD $0x094c; BYTE $0xc6  // orq          %r8, %rsi
	WORD $0x8948; BYTE $0xfa  // movq         %rdi, %rdx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	LONG $0x04f1850f; WORD $0x0000  // jne          LBB0_327, $1265(%rip)
LBB0_72:
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0531840f; WORD $0x0000  // je           LBB0_328, $1329(%rip)
LBB0_73:
	LONG $0xcebc0f48  // bsfq         %rsi, %rcx
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	LONG $0x0e748d4d; BYTE $0x01  // leaq         $1(%r14,%rcx), %r14
	LONG $0x907d8b4c  // movq         $-112(%rbp), %r15
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0xb85d8b48  // movq         $-72(%rbp), %rbx
	LONG $0xee84890f; WORD $0xffff  // jns          LBB0_79, $-4476(%rip)
	LONG $0x003bfce9; BYTE $0x00  // jmp          LBB0_951, $15356(%rip)
LBB0_105:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0xdb31  // xorl         %ebx, %ebx
	LONG $0x20f98348  // cmpq         $32, %rcx
	LONG $0xff59830f; WORD $0xffff  // jae          LBB0_69, $-167(%rip)
LBB0_106:
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0x0004fbe9; BYTE $0x00  // jmp          LBB0_329, $1275(%rip)
LBB0_107:
	QUAD $0x00ffffff4085c748; WORD $0x0000; BYTE $0x00  // movq         $0, $-192(%rbp)
	LONG $0x37548d4a; BYTE $0xff  // leaq         $-1(%rdi,%r14), %rdx
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x07148d4d  // leaq         (%r15,%rax), %r10
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x04208e0f; WORD $0x0000  // jle          LBB0_153, $1056(%rip)
	WORD $0x3948; BYTE $0xda  // cmpq         %rbx, %rdx
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0x0417860f; WORD $0x0000  // jbe          LBB0_154, $1047(%rip)
LBB0_109:
	WORD $0x038a  // movb         (%rbx), %al
	WORD $0x5c3c  // cmpb         $92, %al
	LONG $0x0045850f; WORD $0x0000  // jne          LBB0_114, $69(%rip)
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	WORD $0x2948; BYTE $0xdf  // subq         %rbx, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x3d968e0f; WORD $0x0000  // jle          LBB0_972, $15766(%rip)
	WORD $0x8949; BYTE $0xdc  // movq         %rbx, %r12
	LONG $0x0143b60f  // movzbl       $1(%rbx), %eax
	LONG $0xc70d8d48; WORD $0x0047; BYTE $0x00  // leaq         $18375(%rip), %rcx  /* __UnquoteTab+0(%rip) */
	WORD $0x1c8a; BYTE $0x08  // movb         (%rax,%rcx), %bl
	WORD $0xfb80; BYTE $0xff  // cmpb         $-1, %bl
	LONG $0x0030840f; WORD $0x0000  // je           LBB0_116, $48(%rip)
	WORD $0xdb84  // testb        %bl, %bl
	LONG $0x3d5c840f; WORD $0x0000  // je           LBB0_970, $15708(%rip)
	LONG $0xff409d88; WORD $0xffff  // movb         %bl, $-192(%rbp)
	LONG $0x02c48349  // addq         $2, %r12
	LONG $0x000001bf; BYTE $0x00  // movl         $1, %edi
	LONG $0x00011ee9; BYTE $0x00  // jmp          LBB0_127, $286(%rip)
LBB0_114:
	WORD $0x3a41; BYTE $0x07  // cmpb         (%r15), %al
	LONG $0x03ef850f; WORD $0x0000  // jne          LBB0_324, $1007(%rip)
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	LONG $0x0001a7e9; BYTE $0x00  // jmp          LBB0_139, $423(%rip)
LBB0_116:
	LONG $0x03ff8348  // cmpq         $3, %rdi
	LONG $0x3d3c8e0f; WORD $0x0000  // jle          LBB0_971, $15676(%rip)
	WORD $0x8949; BYTE $0xd1  // movq         %rdx, %r9
	LONG $0x24448b41; BYTE $0x02  // movl         $2(%r12), %eax
	WORD $0xc689  // movl         %eax, %esi
	WORD $0xd6f7  // notl         %esi
	LONG $0xcfd0908d; WORD $0xcfcf  // leal         $-808464432(%rax), %edx
	LONG $0x8080e681; WORD $0x8080  // andl         $-2139062144, %esi
	WORD $0xd685  // testl        %edx, %esi
	LONG $0x3c61850f; WORD $0x0000  // jne          LBB0_968, $15457(%rip)
	LONG $0x1919908d; WORD $0x1919  // leal         $421075225(%rax), %edx
	WORD $0xc209  // orl          %eax, %edx
	LONG $0x8080c2f7; WORD $0x8080  // testl        $-2139062144, %edx
	LONG $0x3c4d850f; WORD $0x0000  // jne          LBB0_968, $15437(%rip)
	WORD $0xc289  // movl         %eax, %edx
	LONG $0x7f7fe281; WORD $0x7f7f  // andl         $2139062143, %edx
	LONG $0xc0c0c0bb; BYTE $0xc0  // movl         $-1061109568, %ebx
	WORD $0xd329  // subl         %edx, %ebx
	LONG $0x46468a8d; WORD $0x4646  // leal         $1179010630(%rdx), %ecx
	WORD $0xf321  // andl         %esi, %ebx
	WORD $0xcb85  // testl        %ecx, %ebx
	LONG $0x3c2e850f; WORD $0x0000  // jne          LBB0_968, $15406(%rip)
	LONG $0xe0e0e0b9; BYTE $0xe0  // movl         $-522133280, %ecx
	WORD $0xd129  // subl         %edx, %ecx
	LONG $0x3939c281; WORD $0x3939  // addl         $960051513, %edx
	WORD $0xce21  // andl         %ecx, %esi
	WORD $0xd685  // testl        %edx, %esi
	LONG $0x3c17850f; WORD $0x0000  // jne          LBB0_968, $15383(%rip)
	WORD $0xc80f  // bswapl       %eax
	WORD $0xc189  // movl         %eax, %ecx
	WORD $0xe9c1; BYTE $0x04  // shrl         $4, %ecx
	WORD $0xd1f7  // notl         %ecx
	LONG $0x0101e181; WORD $0x0101  // andl         $16843009, %ecx
	WORD $0x0c8d; BYTE $0xc9  // leal         (%rcx,%rcx,8), %ecx
	LONG $0x0f0f0f25; BYTE $0x0f  // andl         $252645135, %eax
	WORD $0xc801  // addl         %ecx, %eax
	WORD $0xc389  // movl         %eax, %ebx
	WORD $0xebc1; BYTE $0x04  // shrl         $4, %ebx
	WORD $0xc309  // orl          %eax, %ebx
	WORD $0xde89  // movl         %ebx, %esi
	WORD $0xeec1; BYTE $0x08  // shrl         $8, %esi
	LONG $0xff00e681; WORD $0x0000  // andl         $65280, %esi
	WORD $0xb60f; BYTE $0xd3  // movzbl       %bl, %edx
	WORD $0xf209  // orl          %esi, %edx
	LONG $0x24448d4d; BYTE $0x06  // leaq         $6(%r12), %r8
	WORD $0xfa83; BYTE $0x7f  // cmpl         $127, %edx
	LONG $0x010c860f; WORD $0x0000  // jbe          LBB0_141, $268(%rip)
	LONG $0x07fffa81; WORD $0x0000  // cmpl         $2047, %edx
	LONG $0x0110860f; WORD $0x0000  // jbe          LBB0_142, $272(%rip)
	WORD $0xd889  // movl         %ebx, %eax
	LONG $0xf8000025; BYTE $0x00  // andl         $16252928, %eax
	LONG $0xd800003d; BYTE $0x00  // cmpl         $14155776, %eax
	LONG $0x0122840f; WORD $0x0000  // je           LBB0_143, $290(%rip)
	WORD $0xeec1; BYTE $0x0c  // shrl         $12, %esi
	LONG $0xe0ce8040  // orb          $-32, %sil
	LONG $0x40b58840; WORD $0xffff; BYTE $0xff  // movb         %sil, $-192(%rbp)
	WORD $0xeac1; BYTE $0x06  // shrl         $6, %edx
	WORD $0xe280; BYTE $0x3f  // andb         $63, %dl
	WORD $0xca80; BYTE $0x80  // orb          $-128, %dl
	LONG $0xff419588; WORD $0xffff  // movb         %dl, $-191(%rbp)
	WORD $0xe380; BYTE $0x3f  // andb         $63, %bl
	WORD $0xcb80; BYTE $0x80  // orb          $-128, %bl
	LONG $0xff429d88; WORD $0xffff  // movb         %bl, $-190(%rbp)
	LONG $0x000003bf; BYTE $0x00  // movl         $3, %edi
	WORD $0xf389  // movl         %esi, %ebx
LBB0_125:
	WORD $0x894d; BYTE $0xc4  // movq         %r8, %r12
LBB0_126:
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	WORD $0x894c; BYTE $0xca  // movq         %r9, %rdx
LBB0_127:
	QUAD $0xffffff403d8c8d4c  // leaq         $-192(%rbp,%rdi), %r9
	WORD $0x394d; BYTE $0xd7  // cmpq         %r10, %r15
	LONG $0x0075830f; WORD $0x0000  // jae          LBB0_136, $117(%rip)
	LONG $0x40858d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rax
	WORD $0x3949; BYTE $0xc1  // cmpq         %rax, %r9
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0x0055860f; WORD $0x0000  // jbe          LBB0_135, $85(%rip)
	WORD $0x3841; BYTE $0x1f  // cmpb         %bl, (%r15)
	LONG $0x004c850f; WORD $0x0000  // jne          LBB0_135, $76(%rip)
	LONG $0x98558948  // movq         %rdx, $-104(%rbp)
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	LONG $0x41858d48; WORD $0xffff; BYTE $0xff  // leaq         $-191(%rbp), %rax
	WORD $0x894c; BYTE $0xe3  // movq         %r12, %rbx
LBB0_131:
	WORD $0x894c; BYTE $0xff  // movq         %r15, %rdi
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0x394c; BYTE $0xc8  // cmpq         %r9, %rax
	LONG $0x001c830f; WORD $0x0000  // jae          LBB0_134, $28(%rip)
	WORD $0x394c; BYTE $0xd7  // cmpq         %r10, %rdi
	LONG $0x0013830f; WORD $0x0000  // jae          LBB0_134, $19(%rip)
	WORD $0xb60f; BYTE $0x0f  // movzbl       (%rdi), %ecx
	LONG $0x017f8d4c  // leaq         $1(%rdi), %r15
	LONG $0x01468d48  // leaq         $1(%rsi), %rax
	WORD $0x0e3a  // cmpb         (%rsi), %cl
	LONG $0xffd5840f; WORD $0xffff  // je           LBB0_131, $-43(%rip)
LBB0_134:
	WORD $0x8949; BYTE $0xff  // movq         %rdi, %r15
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0x98558b48  // movq         $-104(%rbp), %rdx
	LONG $0x00001ae9; BYTE $0x00  // jmp          LBB0_138, $26(%rip)
LBB0_135:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	LONG $0x00000be9; BYTE $0x00  // jmp          LBB0_137, $11(%rip)
LBB0_136:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
LBB0_137:
	WORD $0x894c; BYTE $0xe3  // movq         %r12, %rbx
LBB0_138:
	WORD $0x394c; BYTE $0xce  // cmpq         %r9, %rsi
	LONG $0x023d850f; WORD $0x0000  // jne          LBB0_324, $573(%rip)
LBB0_139:
	WORD $0x3948; BYTE $0xda  // cmpq         %rbx, %rdx
	LONG $0x0204860f; WORD $0x0000  // jbe          LBB0_154, $516(%rip)
	WORD $0x394d; BYTE $0xd7  // cmpq         %r10, %r15
	LONG $0xfde4820f; WORD $0xffff  // jb           LBB0_109, $-540(%rip)
	LONG $0x0001f6e9; BYTE $0x00  // jmp          LBB0_154, $502(%rip)
LBB0_141:
	LONG $0xff409d88; WORD $0xffff  // movb         %bl, $-192(%rbp)
	LONG $0x000001bf; BYTE $0x00  // movl         $1, %edi
	LONG $0xffff32e9; BYTE $0xff  // jmp          LBB0_125, $-206(%rip)
LBB0_142:
	WORD $0xeac1; BYTE $0x06  // shrl         $6, %edx
	WORD $0xca80; BYTE $0xc0  // orb          $-64, %dl
	LONG $0xff409588; WORD $0xffff  // movb         %dl, $-192(%rbp)
	WORD $0xe380; BYTE $0x3f  // andb         $63, %bl
	WORD $0xcb80; BYTE $0x80  // orb          $-128, %bl
	LONG $0xff419d88; WORD $0xffff  // movb         %bl, $-191(%rbp)
	LONG $0x000002bf; BYTE $0x00  // movl         $2, %edi
	WORD $0xd389  // movl         %edx, %ebx
	LONG $0xffff0ee9; BYTE $0xff  // jmp          LBB0_125, $-242(%rip)
LBB0_143:
	LONG $0x06ff8348  // cmpq         $6, %rdi
	LONG $0x3b828c0f; WORD $0x0000  // jl           LBB0_977, $15234(%rip)
	LONG $0xdbfffa81; WORD $0x0000  // cmpl         $56319, %edx
	LONG $0x3b76870f; WORD $0x0000  // ja           LBB0_977, $15222(%rip)
	LONG $0x5c388041  // cmpb         $92, (%r8)
	LONG $0x3b6c850f; WORD $0x0000  // jne          LBB0_977, $15212(%rip)
	LONG $0x247c8041; WORD $0x7507  // cmpb         $117, $7(%r12)
	LONG $0x3b60850f; WORD $0x0000  // jne          LBB0_977, $15200(%rip)
	WORD $0x894c; BYTE $0xe0  // movq         %r12, %rax
	LONG $0x24448d4d; BYTE $0x08  // leaq         $8(%r12), %r8
	LONG $0x247c8b41; BYTE $0x08  // movl         $8(%r12), %edi
	WORD $0xfb89  // movl         %edi, %ebx
	WORD $0xd3f7  // notl         %ebx
	LONG $0xcfd0878d; WORD $0xcfcf  // leal         $-808464432(%rdi), %eax
	LONG $0x8080e381; WORD $0x8080  // andl         $-2139062144, %ebx
	WORD $0xc385  // testl        %eax, %ebx
	LONG $0x3b47850f; WORD $0x0000  // jne          LBB0_978, $15175(%rip)
	LONG $0x1919878d; WORD $0x1919  // leal         $421075225(%rdi), %eax
	WORD $0xf809  // orl          %edi, %eax
	LONG $0x808080a9; BYTE $0x80  // testl        $-2139062144, %eax
	LONG $0x3b34850f; WORD $0x0000  // jne          LBB0_978, $15156(%rip)
	WORD $0xf889  // movl         %edi, %eax
	LONG $0x7f7f7f25; BYTE $0x7f  // andl         $2139062143, %eax
	LONG $0xc0c0c0b9; BYTE $0xc0  // movl         $-1061109568, %ecx
	WORD $0xc129  // subl         %eax, %ecx
	LONG $0x4646b08d; WORD $0x4646  // leal         $1179010630(%rax), %esi
	WORD $0xd921  // andl         %ebx, %ecx
	WORD $0xf185  // testl        %esi, %ecx
	LONG $0x3b16850f; WORD $0x0000  // jne          LBB0_978, $15126(%rip)
	LONG $0xe0e0e0b9; BYTE $0xe0  // movl         $-522133280, %ecx
	WORD $0xc129  // subl         %eax, %ecx
	LONG $0x39393905; BYTE $0x39  // addl         $960051513, %eax
	WORD $0xcb21  // andl         %ecx, %ebx
	WORD $0xc385  // testl        %eax, %ebx
	LONG $0x3b00850f; WORD $0x0000  // jne          LBB0_978, $15104(%rip)
	WORD $0xcf0f  // bswapl       %edi
	WORD $0xf889  // movl         %edi, %eax
	WORD $0xe8c1; BYTE $0x04  // shrl         $4, %eax
	WORD $0xd0f7  // notl         %eax
	LONG $0x01010125; BYTE $0x01  // andl         $16843009, %eax
	WORD $0x048d; BYTE $0xc0  // leal         (%rax,%rax,8), %eax
	LONG $0x0f0fe781; WORD $0x0f0f  // andl         $252645135, %edi
	WORD $0xc701  // addl         %eax, %edi
	WORD $0xf889  // movl         %edi, %eax
	WORD $0xe8c1; BYTE $0x04  // shrl         $4, %eax
	WORD $0xf809  // orl          %edi, %eax
	WORD $0xc189  // movl         %eax, %ecx
	LONG $0x0000e181; WORD $0x00fc  // andl         $16515072, %ecx
	LONG $0x0000f981; WORD $0x00dc  // cmpl         $14417920, %ecx
	LONG $0x3ac0850f; WORD $0x0000  // jne          LBB0_977, $15040(%rip)
	WORD $0xc189  // movl         %eax, %ecx
	WORD $0xe9c1; BYTE $0x08  // shrl         $8, %ecx
	LONG $0xff00e181; WORD $0x0000  // andl         $65280, %ecx
	WORD $0xb60f; BYTE $0xc0  // movzbl       %al, %eax
	WORD $0xc809  // orl          %ecx, %eax
	WORD $0xe2c1; BYTE $0x0a  // shll         $10, %edx
	LONG $0x0002848d; WORD $0xa024; BYTE $0xfc  // leal         $-56613888(%rdx,%rax), %eax
	WORD $0xc389  // movl         %eax, %ebx
	WORD $0xebc1; BYTE $0x12  // shrl         $18, %ebx
	WORD $0xcb80; BYTE $0xf0  // orb          $-16, %bl
	LONG $0xff409d88; WORD $0xffff  // movb         %bl, $-192(%rbp)
	WORD $0xc189  // movl         %eax, %ecx
	WORD $0xe9c1; BYTE $0x0c  // shrl         $12, %ecx
	WORD $0xe180; BYTE $0x3f  // andb         $63, %cl
	WORD $0xc980; BYTE $0x80  // orb          $-128, %cl
	LONG $0xff418d88; WORD $0xffff  // movb         %cl, $-191(%rbp)
	WORD $0xc189  // movl         %eax, %ecx
	WORD $0xe9c1; BYTE $0x06  // shrl         $6, %ecx
	WORD $0xe180; BYTE $0x3f  // andb         $63, %cl
	WORD $0xc980; BYTE $0x80  // orb          $-128, %cl
	LONG $0xff428d88; WORD $0xffff  // movb         %cl, $-190(%rbp)
	WORD $0x3f24  // andb         $63, %al
	WORD $0x800c  // orb          $-128, %al
	LONG $0xff438588; WORD $0xffff  // movb         %al, $-189(%rbp)
	LONG $0x0cc48349  // addq         $12, %r12
	LONG $0x000004bf; BYTE $0x00  // movl         $4, %edi
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xfffddbe9; BYTE $0xff  // jmp          LBB0_126, $-549(%rip)
LBB0_260:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x026d850f; WORD $0x0000  // jne          LBB0_341, $621(%rip)
	LONG $0x084c8d4a; BYTE $0x01  // leaq         $1(%rax,%r9), %rcx
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x014c; BYTE $0xc0  // addq         %r8, %rax
LBB0_262:
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
LBB0_263:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	WORD $0x894d; BYTE $0xf9  // movq         %r15, %r9
	LONG $0x001d8f0f; WORD $0x0000  // jg           LBB0_320, $29(%rip)
	LONG $0xfff040e9; BYTE $0xff  // jmp          LBB0_224, $-4032(%rip)
LBB0_319:
	LONG $0xfec2c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rdx
	LONG $0x000002be; BYTE $0x00  // movl         $2, %esi
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	LONG $0xf0288e0f; WORD $0xffff  // jle          LBB0_224, $-4056(%rip)
LBB0_320:
	WORD $0xb60f; BYTE $0x11  // movzbl       (%rcx), %edx
	WORD $0xfa80; BYTE $0x5c  // cmpb         $92, %dl
	LONG $0xffdc840f; WORD $0xffff  // je           LBB0_319, $-36(%rip)
	WORD $0xfa80; BYTE $0x22  // cmpb         $34, %dl
	LONG $0x001d840f; WORD $0x0000  // je           LBB0_323, $29(%rip)
	LONG $0xffc2c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rdx
	LONG $0x000001be; BYTE $0x00  // movl         $1, %esi
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	LONG $0xffd38f0f; WORD $0xffff  // jg           LBB0_320, $-45(%rip)
	LONG $0xffeff6e9; BYTE $0xff  // jmp          LBB0_224, $-4106(%rip)
LBB0_323:
	WORD $0x2948; BYTE $0xf9  // subq         %rdi, %rcx
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	LONG $0xfff281e9; BYTE $0xff  // jmp          LBB0_265, $-3455(%rip)
LBB0_153:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
LBB0_154:
	WORD $0x3148; BYTE $0xda  // xorq         %rbx, %rdx
	WORD $0x314d; BYTE $0xd7  // xorq         %r10, %r15
	WORD $0xc931  // xorl         %ecx, %ecx
	WORD $0x0949; BYTE $0xd7  // orq          %rdx, %r15
	WORD $0x940f; BYTE $0xc1  // sete         %cl
LBB0_155:
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xa04d8b4c  // movq         $-96(%rbp), %r9
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x2948; BYTE $0xd6  // subq         %rdx, %rsi
	LONG $0xebab820f; WORD $0xffff  // jb           LBB0_101, $-5205(%rip)
	LONG $0xffebf7e9; BYTE $0xff  // jmp          LBB0_156, $-5129(%rip)
LBB0_324:
	WORD $0xc931  // xorl         %ecx, %ecx
	LONG $0xffffd7e9; BYTE $0xff  // jmp          LBB0_155, $-41(%rip)
LBB0_325:
	LONG $0x370c8d4a  // leaq         (%rdi,%r14), %rcx
	LONG $0xffff48e9; BYTE $0xff  // jmp          LBB0_262, $-184(%rip)
LBB0_326:
	WORD $0x894c; BYTE $0xf2  // movq         %r14, %rdx
	LONG $0xc8552b48  // subq         $-56(%rbp), %rdx
	LONG $0xdfbc0f4c  // bsfq         %rdi, %r11
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x094c; BYTE $0xc6  // orq          %r8, %rsi
	WORD $0x8948; BYTE $0xfa  // movq         %rdi, %rdx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	LONG $0xfb0f840f; WORD $0xffff  // je           LBB0_72, $-1265(%rip)
LBB0_327:
	WORD $0x894d; BYTE $0xf7  // movq         %r14, %r15
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	WORD $0x8941; BYTE $0xd9  // movl         %ebx, %r9d
	WORD $0xf741; BYTE $0xd1  // notl         %r9d
	WORD $0x2141; BYTE $0xf9  // andl         %edi, %r9d
	LONG $0x09048d47  // leal         (%r9,%r9), %r8d
	WORD $0x0941; BYTE $0xd8  // orl          %ebx, %r8d
	WORD $0x8944; BYTE $0xc2  // movl         %r8d, %edx
	WORD $0xd2f7  // notl         %edx
	WORD $0xfa21  // andl         %edi, %edx
	LONG $0xaaaae281; WORD $0xaaaa  // andl         $-1431655766, %edx
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0x0144; BYTE $0xca  // addl         %r9d, %edx
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	WORD $0x894d; BYTE $0xfe  // movq         %r15, %r14
	WORD $0x920f; BYTE $0xc3  // setb         %bl
	WORD $0xd201  // addl         %edx, %edx
	LONG $0x5555f281; WORD $0x5555  // xorl         $1431655765, %edx
	WORD $0x2144; BYTE $0xc2  // andl         %r8d, %edx
	WORD $0xd2f7  // notl         %edx
	WORD $0xd621  // andl         %edx, %esi
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xfacf850f; WORD $0xffff  // jne          LBB0_73, $-1329(%rip)
LBB0_328:
	LONG $0x20c68349  // addq         $32, %r14
	LONG $0xe0c18348  // addq         $-32, %rcx
LBB0_329:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x907d8b4c  // movq         $-112(%rbp), %r15
	LONG $0x00af850f; WORD $0x0000  // jne          LBB0_338, $175(%rip)
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x36cc840f; WORD $0x0000  // je           LBB0_951, $14028(%rip)
LBB0_331:
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
LBB0_332:
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0xff49; BYTE $0xc6  // incq         %r14
	WORD $0xb60f; BYTE $0x1e  // movzbl       (%rsi), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x0071840f; WORD $0x0000  // je           LBB0_337, $113(%rip)
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	LONG $0xff718d48  // leaq         $-1(%rcx), %rsi
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0015840f; WORD $0x0000  // je           LBB0_335, $21(%rip)
	WORD $0x8948; BYTE $0xf1  // movq         %rsi, %rcx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x907d8b4c  // movq         $-112(%rbp), %r15
	LONG $0xffce850f; WORD $0xffff  // jne          LBB0_332, $-50(%rip)
	LONG $0x003692e9; BYTE $0x00  // jmp          LBB0_951, $13970(%rip)
LBB0_335:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x3689840f; WORD $0x0000  // je           LBB0_951, $13961(%rip)
	WORD $0x894d; BYTE $0xcd  // movq         %r9, %r13
	WORD $0x0149; BYTE $0xfe  // addq         %rdi, %r14
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xde440f4d  // cmoveq       %r14, %r11
	LONG $0xc6440f4d  // cmoveq       %r14, %r8
	WORD $0x8949; BYTE $0xd6  // movq         %rdx, %r14
	LONG $0x02c68349  // addq         $2, %r14
	LONG $0xfec18348  // addq         $-2, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	LONG $0xc0558b48  // movq         $-64(%rbp), %rdx
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x907d8b4c  // movq         $-112(%rbp), %r15
	LONG $0xff82850f; WORD $0xffff  // jne          LBB0_332, $-126(%rip)
	LONG $0x003646e9; BYTE $0x00  // jmp          LBB0_951, $13894(%rip)
LBB0_337:
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0xb85d8b48  // movq         $-72(%rbp), %rbx
	LONG $0xe8b1890f; WORD $0xffff  // jns          LBB0_79, $-5967(%rip)
	LONG $0x003629e9; BYTE $0x00  // jmp          LBB0_951, $13865(%rip)
LBB0_338:
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x3620840f; WORD $0x0000  // je           LBB0_951, $13856(%rip)
	WORD $0x894d; BYTE $0xcd  // movq         %r9, %r13
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	WORD $0x8949; BYTE $0xf8  // movq         %rdi, %r8
	WORD $0xf749; BYTE $0xd0  // notq         %r8
	WORD $0x014d; BYTE $0xf0  // addq         %r14, %r8
	LONG $0xfffb8349  // cmpq         $-1, %r11
	WORD $0x894c; BYTE $0xda  // movq         %r11, %rdx
	LONG $0xd0440f49  // cmoveq       %r8, %rdx
	LONG $0xc3450f4d  // cmovneq      %r11, %r8
	WORD $0xff49; BYTE $0xc6  // incq         %r14
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	WORD $0x8949; BYTE $0xd3  // movq         %rdx, %r11
	LONG $0xc0558b48  // movq         $-64(%rbp), %rdx
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0x907d8b4c  // movq         $-112(%rbp), %r15
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xff0e850f; WORD $0xffff  // jne          LBB0_331, $-242(%rip)
	LONG $0x0035d5e9; BYTE $0x00  // jmp          LBB0_951, $13781(%rip)
LBB0_340:
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	WORD $0x8b4d; BYTE $0x30  // movq         (%r8), %r14
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	WORD $0x8949; BYTE $0xd1  // movq         %rdx, %r9
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xffedfde9; BYTE $0xff  // jmp          LBB0_224, $-4611(%rip)
LBB0_341:
	WORD $0x894d; BYTE $0xfd  // movq         %r15, %r13
	LONG $0xff488d49  // leaq         $-1(%r8), %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0021850f; WORD $0x0000  // jne          LBB0_343, $33(%rip)
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	WORD $0x894d; BYTE $0xe9  // movq         %r13, %r9
	WORD $0x8949; BYTE $0xc5  // movq         %rax, %r13
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xffedcce9; BYTE $0xff  // jmp          LBB0_224, $-4660(%rip)
LBB0_343:
	LONG $0x084c8d4a; BYTE $0x02  // leaq         $2(%rax,%r9), %rcx
	WORD $0x2949; BYTE $0xc0  // subq         %rax, %r8
	LONG $0xfec08349  // addq         $-2, %r8
	WORD $0x894c; BYTE $0xc0  // movq         %r8, %rax
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc0558b48  // movq         $-64(%rbp), %rdx
	WORD $0x894d; BYTE $0xef  // movq         %r13, %r15
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0xfffd47e9; BYTE $0xff  // jmp          LBB0_263, $-697(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090  // .p2align 4, 0x90
LBB0_351:
	LONG $0x01568d49  // leaq         $1(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_355, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_355, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_355, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0103870f; WORD $0x0000  // ja           LBB0_373, $259(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_355:
	LONG $0x02568d49  // leaq         $2(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_359, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_359, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_359, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00d3870f; WORD $0x0000  // ja           LBB0_373, $211(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_359:
	LONG $0x03568d49  // leaq         $3(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_363, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_363, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_363, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00a3870f; WORD $0x0000  // ja           LBB0_373, $163(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_363:
	LONG $0x04768d49  // leaq         $4(%r14), %rsi
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0x005d860f; WORD $0x0000  // jbe          LBB0_370, $93(%rip)
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0x005f840f; WORD $0x0000  // je           LBB0_371, $95(%rip)
	LONG $0x07348d48  // leaq         (%rdi,%rax), %rsi
	LONG $0x04c18348  // addq         $4, %rcx
	WORD $0x8948; BYTE $0xfb  // movq         %rdi, %rbx
	LONG $0x37548d4a; BYTE $0x05  // leaq         $5(%rdi,%r14), %rdx
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_366:
	LONG $0xff7abe0f  // movsbl       $-1(%rdx), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x004f870f; WORD $0x0000  // ja           LBB0_372, $79(%rip)
	LONG $0xfaa30f49  // btq          %rdi, %r10
	LONG $0x0045830f; WORD $0x0000  // jae          LBB0_372, $69(%rip)
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_366, $-35(%rip)
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x003c820f; WORD $0x0000  // jb           LBB0_373, $60(%rip)
	LONG $0x000048e9; BYTE $0x00  // jmp          LBB0_374, $72(%rip)
LBB0_370:
	WORD $0x8949; BYTE $0x33  // movq         %rsi, (%r11)
	WORD $0x8949; BYTE $0xf6  // movq         %rsi, %r14
	LONG $0x00003de9; BYTE $0x00  // jmp          LBB0_374, $61(%rip)
LBB0_371:
	WORD $0x0148; BYTE $0xfe  // addq         %rdi, %rsi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x001a820f; WORD $0x0000  // jb           LBB0_373, $26(%rip)
	LONG $0x000026e9; BYTE $0x00  // jmp          LBB0_374, $38(%rip)
LBB0_372:
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x0148; BYTE $0xca  // addq         %rcx, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0011830f; WORD $0x0000  // jae          LBB0_374, $17(%rip)
LBB0_373:
	LONG $0x01728d4c  // leaq         $1(%rdx), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0x5d173c80  // cmpb         $93, (%rdi,%rdx)
	LONG $0x1138840f; WORD $0x0000  // je           LBB0_554, $4408(%rip)
LBB0_374:
	WORD $0xff49; BYTE $0xce  // decq         %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0x854d; BYTE $0xe4  // testq        %r12, %r12
	LONG $0x0f1f8e0f; WORD $0x0000  // jle          LBB0_447, $3871(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_375:
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	WORD $0x894c; BYTE $0xf2  // movq         %r14, %rdx
	WORD $0x2948; BYTE $0xc2  // subq         %rax, %rdx
	LONG $0x0031830f; WORD $0x0000  // jae          LBB0_380, $49(%rip)
	LONG $0x370c8a42  // movb         (%rdi,%r14), %cl
	WORD $0xf980; BYTE $0x0d  // cmpb         $13, %cl
	LONG $0x0024840f; WORD $0x0000  // je           LBB0_380, $36(%rip)
	WORD $0xf980; BYTE $0x20  // cmpb         $32, %cl
	LONG $0x001b840f; WORD $0x0000  // je           LBB0_380, $27(%rip)
	WORD $0xc180; BYTE $0xf7  // addb         $-9, %cl
	WORD $0xf980; BYTE $0x01  // cmpb         $1, %cl
	LONG $0x000f860f; WORD $0x0000  // jbe          LBB0_380, $15(%rip)
	WORD $0x894c; BYTE $0xf1  // movq         %r14, %rcx
	LONG $0x000147e9; BYTE $0x00  // jmp          LBB0_402, $327(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_380:
	LONG $0x014e8d49  // leaq         $1(%r14), %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_384, $35(%rip)
	WORD $0x1c8a; BYTE $0x0f  // movb         (%rdi,%rcx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_384, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_384, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0112870f; WORD $0x0000  // ja           LBB0_402, $274(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_384:
	LONG $0x024e8d49  // leaq         $2(%r14), %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_388, $35(%rip)
	WORD $0x1c8a; BYTE $0x0f  // movb         (%rdi,%rcx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_388, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_388, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00e2870f; WORD $0x0000  // ja           LBB0_402, $226(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_388:
	LONG $0x034e8d49  // leaq         $3(%r14), %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_392, $35(%rip)
	WORD $0x1c8a; BYTE $0x0f  // movb         (%rdi,%rcx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_392, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_392, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00b2870f; WORD $0x0000  // ja           LBB0_402, $178(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_392:
	LONG $0x04768d49  // leaq         $4(%r14), %rsi
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0x0063860f; WORD $0x0000  // jbe          LBB0_399, $99(%rip)
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0x0065840f; WORD $0x0000  // je           LBB0_400, $101(%rip)
	LONG $0x07348d48  // leaq         (%rdi,%rax), %rsi
	LONG $0x04c28348  // addq         $4, %rdx
	WORD $0x8948; BYTE $0xfb  // movq         %rdi, %rbx
	LONG $0x374c8d4a; BYTE $0x05  // leaq         $5(%rdi,%r14), %rcx
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_395:
	LONG $0xff79be0f  // movsbl       $-1(%rcx), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x0055870f; WORD $0x0000  // ja           LBB0_401, $85(%rip)
	LONG $0xfaa30f49  // btq          %rdi, %r10
	LONG $0x004b830f; WORD $0x0000  // jae          LBB0_401, $75(%rip)
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_395, $-35(%rip)
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf1  // movq         %rsi, %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x004b820f; WORD $0x0000  // jb           LBB0_402, $75(%rip)
	LONG $0x000146e9; BYTE $0x00  // jmp          LBB0_419, $326(%rip)
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_399:
	WORD $0x8949; BYTE $0x33  // movq         %rsi, (%r11)
	WORD $0x8949; BYTE $0xf6  // movq         %rsi, %r14
	LONG $0x000135e9; BYTE $0x00  // jmp          LBB0_419, $309(%rip)
LBB0_400:
	WORD $0x0148; BYTE $0xfe  // addq         %rdi, %rsi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf1  // movq         %rsi, %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0023820f; WORD $0x0000  // jb           LBB0_402, $35(%rip)
	LONG $0x00011ee9; BYTE $0x00  // jmp          LBB0_419, $286(%rip)
LBB0_401:
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x8948; BYTE $0xda  // movq         %rbx, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x0148; BYTE $0xd1  // addq         %rdx, %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0109830f; WORD $0x0000  // jae          LBB0_419, $265(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_402:
	LONG $0x01718d4c  // leaq         $1(%rcx), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0x0f04be0f  // movsbl       (%rdi,%rcx), %eax
	WORD $0xf883; BYTE $0x7b  // cmpl         $123, %eax
	LONG $0x03c8870f; WORD $0x0000  // ja           LBB0_462, $968(%rip)
	LONG $0xcd158d48; WORD $0x0034; BYTE $0x00  // leaq         $13517(%rip), %rdx  /* LJTI0_0+0(%rip) */
	LONG $0x82046348  // movslq       (%rdx,%rax,4), %rax
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	JMP AX
LBB0_404:
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x294c; BYTE $0xf0  // subq         %r14, %rax
	WORD $0x0149; BYTE $0xfe  // addq         %rdi, %r14
	LONG $0x10f88348  // cmpq         $16, %rax
	LONG $0x0066820f; WORD $0x0000  // jb           LBB0_409, $102(%rip)
	WORD $0x2948; BYTE $0xca  // subq         %rcx, %rdx
	LONG $0xefc28348  // addq         $-17, %rdx
	WORD $0x8948; BYTE $0xd6  // movq         %rdx, %rsi
	LONG $0xf0e68348  // andq         $-16, %rsi
	WORD $0x0148; BYTE $0xce  // addq         %rcx, %rsi
	LONG $0x374c8d48; BYTE $0x11  // leaq         $17(%rdi,%rsi), %rcx
	WORD $0xe283; BYTE $0x0f  // andl         $15, %edx
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_406:
	LONG $0x6f0f41f3; BYTE $0x16  // movdqu       (%r14), %xmm2
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0x740f4166; BYTE $0xdd  // pcmpeqb      %xmm13, %xmm3
	LONG $0xeb0f4166; BYTE $0xd6  // por          %xmm14, %xmm2
	LONG $0xd4740f66  // pcmpeqb      %xmm4, %xmm2
	LONG $0xd3eb0f66  // por          %xmm3, %xmm2
	LONG $0xf2d70f66  // pmovmskb     %xmm2, %esi
	WORD $0x8566; BYTE $0xf6  // testw        %si, %si
	LONG $0x0068850f; WORD $0x0000  // jne          LBB0_417, $104(%rip)
	LONG $0x10c68349  // addq         $16, %r14
	LONG $0xf0c08348  // addq         $-16, %rax
	LONG $0x0ff88348  // cmpq         $15, %rax
	LONG $0xffc6870f; WORD $0xffff  // ja           LBB0_406, $-58(%rip)
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x8949; BYTE $0xce  // movq         %rcx, %r14
LBB0_409:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0035840f; WORD $0x0000  // je           LBB0_416, $53(%rip)
	LONG $0x060c8d49  // leaq         (%r14,%rax), %rcx
	WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_411:
	LONG $0x16b60f41  // movzbl       (%r14), %edx
	WORD $0xfa80; BYTE $0x2c  // cmpb         $44, %dl
	LONG $0x0021840f; WORD $0x0000  // je           LBB0_416, $33(%rip)
	WORD $0xfa80; BYTE $0x7d  // cmpb         $125, %dl
	LONG $0x0018840f; WORD $0x0000  // je           LBB0_416, $24(%rip)
	WORD $0xfa80; BYTE $0x5d  // cmpb         $93, %dl
	LONG $0x000f840f; WORD $0x0000  // je           LBB0_416, $15(%rip)
	WORD $0xff49; BYTE $0xc6  // incq         %r14
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	LONG $0xffd5850f; WORD $0xffff  // jne          LBB0_411, $-43(%rip)
	WORD $0x8949; BYTE $0xce  // movq         %rcx, %r14
LBB0_416:
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	LONG $0x000017e9; BYTE $0x00  // jmp          LBB0_418, $23(%rip)
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_417:
	WORD $0xb70f; BYTE $0xc6  // movzwl       %si, %eax
	LONG $0xc0bc0f48  // bsfq         %rax, %rax
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	WORD $0x0149; BYTE $0xc6  // addq         %rax, %r14
LBB0_418:
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
LBB0_419:
	LONG $0x007d8b49  // movq         (%r13), %rdi
	LONG $0x08458b49  // movq         $8(%r13), %rax
	WORD $0x894c; BYTE $0xf1  // movq         %r14, %rcx
	WORD $0x2948; BYTE $0xc1  // subq         %rax, %rcx
	LONG $0x002c830f; WORD $0x0000  // jae          LBB0_424, $44(%rip)
	LONG $0x37148a42  // movb         (%rdi,%r14), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x001f840f; WORD $0x0000  // je           LBB0_424, $31(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_424, $22(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x000a860f; WORD $0x0000  // jbe          LBB0_424, $10(%rip)
	WORD $0x894c; BYTE $0xf2  // movq         %r14, %rdx
	LONG $0x000137e9; BYTE $0x00  // jmp          LBB0_445, $311(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_424:
	LONG $0x01568d49  // leaq         $1(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_428, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_428, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_428, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x0107870f; WORD $0x0000  // ja           LBB0_445, $263(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_428:
	LONG $0x02568d49  // leaq         $2(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_432, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_432, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_432, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00d7870f; WORD $0x0000  // ja           LBB0_445, $215(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_432:
	LONG $0x03568d49  // leaq         $3(%r14), %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_436, $35(%rip)
	WORD $0x1c8a; BYTE $0x17  // movb         (%rdi,%rdx), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0017840f; WORD $0x0000  // je           LBB0_436, $23(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000e840f; WORD $0x0000  // je           LBB0_436, $14(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00a7870f; WORD $0x0000  // ja           LBB0_445, $167(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_436:
	LONG $0x04768d49  // leaq         $4(%r14), %rsi
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0x0d7d860f; WORD $0x0000  // jbe          LBB0_549, $3453(%rip)
	WORD $0x3948; BYTE $0xf0  // cmpq         %rsi, %rax
	LONG $0x005a840f; WORD $0x0000  // je           LBB0_443, $90(%rip)
	LONG $0x07348d48  // leaq         (%rdi,%rax), %rsi
	LONG $0x04c18348  // addq         $4, %rcx
	WORD $0x8948; BYTE $0xfb  // movq         %rdi, %rbx
	LONG $0x37548d4a; BYTE $0x05  // leaq         $5(%rdi,%r14), %rdx
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_439:
	LONG $0xff7abe0f  // movsbl       $-1(%rdx), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x0053870f; WORD $0x0000  // ja           LBB0_444, $83(%rip)
	LONG $0xfaa30f49  // btq          %rdi, %r10
	LONG $0x0049830f; WORD $0x0000  // jae          LBB0_444, $73(%rip)
	WORD $0xff48; BYTE $0xc2  // incq         %rdx
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	LONG $0xffdd850f; WORD $0xffff  // jne          LBB0_439, $-35(%rip)
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0040820f; WORD $0x0000  // jb           LBB0_445, $64(%rip)
	LONG $0x000d78e9; BYTE $0x00  // jmp          LBB0_556, $3448(%rip)
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_443:
	WORD $0x0148; BYTE $0xfe  // addq         %rdi, %rsi
	WORD $0x2948; BYTE $0xfe  // subq         %rdi, %rsi
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0023820f; WORD $0x0000  // jb           LBB0_445, $35(%rip)
	LONG $0x000d5be9; BYTE $0x00  // jmp          LBB0_556, $3419(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_444:
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x0148; BYTE $0xca  // addq         %rcx, %rdx
	WORD $0x3948; BYTE $0xc2  // cmpq         %rax, %rdx
	LONG $0x0d3d830f; WORD $0x0000  // jae          LBB0_556, $3389(%rip)
LBB0_445:
	LONG $0x01728d4c  // leaq         $1(%rdx), %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0x048a; BYTE $0x17  // movb         (%rdi,%rdx), %al
	WORD $0x2c3c  // cmpb         $44, %al
	LONG $0x0cde850f; WORD $0x0000  // jne          LBB0_550, $3294(%rip)
	LONG $0x02fc8349  // cmpq         $2, %r12
	LONG $0x24648d4d; BYTE $0xff  // leaq         $-1(%r12), %r12
	LONG $0xfbea8d0f; WORD $0xffff  // jge          LBB0_375, $-1046(%rip)
	LONG $0x000af5e9; BYTE $0x00  // jmp          LBB0_447, $2805(%rip)
LBB0_450:
	LONG $0x04c18348  // addq         $4, %rcx
	WORD $0x3b49; BYTE $0x08  // cmpq         (%r8), %rcx
	LONG $0xfe58870f; WORD $0xffff  // ja           LBB0_419, $-424(%rip)
	LONG $0x00012fe9; BYTE $0x00  // jmp          LBB0_462, $303(%rip)
LBB0_451:
	LONG $0xa04d894c  // movq         %r9, $-96(%rbp)
	WORD $0x8b4d; BYTE $0x00  // movq         (%r8), %r8
	WORD $0x894c; BYTE $0xc0  // movq         %r8, %rax
	WORD $0x294c; BYTE $0xf0  // subq         %r14, %rax
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0x0a468c0f; WORD $0x0000  // jl           LBB0_521, $2630(%rip)
	LONG $0x0f0c8d4c  // leaq         (%rdi,%rcx), %r9
	WORD $0x2949; BYTE $0xc8  // subq         %rcx, %r8
	LONG $0x00001fb9; BYTE $0x00  // movl         $31, %ecx
	WORD $0xc031  // xorl         %eax, %eax
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x000028e9; BYTE $0x00  // jmp          LBB0_453, $40(%rip)
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_456:
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0x00b6850f; WORD $0x0000  // jne          LBB0_455, $182(%rip)
LBB0_457:
	LONG $0x20c08348  // addq         $32, %rax
	LONG $0x08548d49; BYTE $0xe0  // leaq         $-32(%r8,%rcx), %rdx
	LONG $0xe0c18348  // addq         $-32, %rcx
	LONG $0x3ffa8348  // cmpq         $63, %rdx
	LONG $0x097f8e0f; WORD $0x0000  // jle          LBB0_458, $2431(%rip)
LBB0_453:
	LONG $0x6f0f41f3; WORD $0x0154; BYTE $0x01  // movdqu       $1(%r9,%rax), %xmm2
	LONG $0x6f0f41f3; WORD $0x015c; BYTE $0x11  // movdqu       $17(%r9,%rax), %xmm3
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xd3  // orq          %rdx, %rbx
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xf2d70f66  // pmovmskb     %xmm2, %esi
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0948; BYTE $0xf2  // orq          %rsi, %rdx
	WORD $0x8948; BYTE $0xd6  // movq         %rdx, %rsi
	WORD $0x094c; BYTE $0xd6  // orq          %r10, %rsi
	LONG $0xff8e840f; WORD $0xffff  // je           LBB0_456, $-114(%rip)
	WORD $0x8944; BYTE $0xd6  // movl         %r10d, %esi
	LONG $0xffffbd41; WORD $0xffff  // movl         $4294967295, %r13d
	WORD $0x3144; BYTE $0xee  // xorl         %r13d, %esi
	WORD $0xf221  // andl         %esi, %edx
	WORD $0x348d; BYTE $0x12  // leal         (%rdx,%rdx), %esi
	WORD $0x0944; BYTE $0xd6  // orl          %r10d, %esi
	WORD $0x8949; BYTE $0xff  // movq         %rdi, %r15
	LONG $0xabbd8d41; WORD $0xaaaa; BYTE $0xaa  // leal         $-1431655765(%r13), %edi
	WORD $0xf731  // xorl         %esi, %edi
	WORD $0xd721  // andl         %edx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0xd701  // addl         %edx, %edi
	LONG $0xc2920f41  // setb         %r10b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xf721  // andl         %esi, %edi
	WORD $0x3144; BYTE $0xef  // xorl         %r13d, %edi
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	WORD $0xfb21  // andl         %edi, %ebx
	WORD $0x894c; BYTE $0xff  // movq         %r15, %rdi
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0xff4a840f; WORD $0xffff  // je           LBB0_457, $-182(%rip)
LBB0_455:
	LONG $0xcbbc0f48  // bsfq         %rbx, %rcx
	WORD $0x0149; BYTE $0xc9  // addq         %rcx, %r9
	WORD $0x0149; BYTE $0xc1  // addq         %rax, %r9
	WORD $0x2949; BYTE $0xf9  // subq         %rdi, %r9
	LONG $0x02c18349  // addq         $2, %r9
	WORD $0x894d; BYTE $0x0b  // movq         %r9, (%r11)
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xa04d8b4c  // movq         $-96(%rbp), %r9
	LONG $0xfffd31e9; BYTE $0xff  // jmp          LBB0_419, $-719(%rip)
LBB0_461:
	LONG $0x05c18348  // addq         $5, %rcx
	WORD $0x3b49; BYTE $0x08  // cmpq         (%r8), %rcx
	LONG $0xfd24870f; WORD $0xffff  // ja           LBB0_419, $-732(%rip)
LBB0_462:
	WORD $0x8949; BYTE $0x0b  // movq         %rcx, (%r11)
	WORD $0x8949; BYTE $0xce  // movq         %rcx, %r14
	LONG $0xfffd19e9; BYTE $0xff  // jmp          LBB0_419, $-743(%rip)
LBB0_463:
	LONG $0xa04d894c  // movq         %r9, $-96(%rbp)
	WORD $0x8b49; BYTE $0x08  // movq         (%r8), %rcx
	WORD $0x294c; BYTE $0xf1  // subq         %r14, %rcx
	WORD $0x014c; BYTE $0xf7  // addq         %r14, %rdi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x3145; BYTE $0xdb  // xorl         %r11d, %r11d
	WORD $0x3145; BYTE $0xed  // xorl         %r13d, %r13d
	LONG $0x40f98348  // cmpq         $64, %rcx
	LONG $0x01638d0f; WORD $0x0000  // jge          LBB0_464, $355(%rip)
LBB0_474:
	LONG $0xa0458b48  // movq         $-96(%rbp), %rax
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x08fc8e0f; WORD $0x0000  // jle          LBB0_522, $2300(%rip)
	WORD $0x8949; BYTE $0xcf  // movq         %rcx, %r15
	QUAD $0xffff70857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-144(%rbp)
	QUAD $0xffff60857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-160(%rbp)
	QUAD $0xffff50857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-176(%rbp)
	QUAD $0xffff40857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-192(%rbp)
	WORD $0xf889  // movl         %edi, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000fc13d; BYTE $0x00  // cmpl         $4033, %eax
	LONG $0x0120820f; WORD $0x0000  // jb           LBB0_465, $288(%rip)
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	LONG $0x20ff8349  // cmpq         $32, %r15
	LONG $0x002b820f; WORD $0x0000  // jb           LBB0_478, $43(%rip)
	WORD $0x100f; BYTE $0x10  // movups       (%rax), %xmm2
	LONG $0x4095110f; WORD $0xffff; BYTE $0xff  // movups       %xmm2, $-192(%rbp)
	LONG $0x506f0ff3; BYTE $0x10  // movdqu       $16(%rax), %xmm2
	QUAD $0xffffff50957f0ff3  // movdqu       %xmm2, $-176(%rbp)
	LONG $0x20c08348  // addq         $32, %rax
	LONG $0xe07f8d49  // leaq         $-32(%r15), %rdi
	LONG $0x60b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-160(%rbp), %rsi
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_479, $10(%rip)
LBB0_478:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	WORD $0x894c; BYTE $0xff  // movq         %r15, %rdi
LBB0_479:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x0060820f; WORD $0x0000  // jb           LBB0_480, $96(%rip)
	LONG $0x106f0ff3  // movdqu       (%rax), %xmm2
	LONG $0x167f0ff3  // movdqu       %xmm2, (%rsi)
	LONG $0x10c08348  // addq         $16, %rax
	LONG $0x10c68348  // addq         $16, %rsi
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0x004c830f; WORD $0x0000  // jae          LBB0_485, $76(%rip)
LBB0_481:
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0x00648c0f; WORD $0x0000  // jl           LBB0_482, $100(%rip)
LBB0_486:
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0x008b  // movl         (%rax), %eax
	WORD $0x0689  // movl         %eax, (%rsi)
	LONG $0x04c28348  // addq         $4, %rdx
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0xfcc78348  // addq         $-4, %rdi
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x004e830f; WORD $0x0000  // jae          LBB0_487, $78(%rip)
LBB0_483:
	LONG $0x40958d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdx
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x0066850f; WORD $0x0000  // jne          LBB0_488, $102(%rip)
	LONG $0x000074e9; BYTE $0x00  // jmp          LBB0_465, $116(%rip)
LBB0_480:
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0xffb4820f; WORD $0xffff  // jb           LBB0_481, $-76(%rip)
LBB0_485:
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0x8b48; BYTE $0x00  // movq         (%rax), %rax
	WORD $0x8948; BYTE $0x06  // movq         %rax, (%rsi)
	LONG $0x08c28348  // addq         $8, %rdx
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x08c68348  // addq         $8, %rsi
	LONG $0xf8c78348  // addq         $-8, %rdi
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0xff9c8d0f; WORD $0xffff  // jge          LBB0_486, $-100(%rip)
LBB0_482:
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0xffb2820f; WORD $0xffff  // jb           LBB0_483, $-78(%rip)
LBB0_487:
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0xb70f; BYTE $0x00  // movzwl       (%rax), %eax
	WORD $0x8966; BYTE $0x06  // movw         %ax, (%rsi)
	LONG $0x02c28348  // addq         $2, %rdx
	LONG $0x02c68348  // addq         $2, %rsi
	LONG $0xfec78348  // addq         $-2, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x40958d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdx
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x0013840f; WORD $0x0000  // je           LBB0_465, $19(%rip)
LBB0_488:
	WORD $0x008a  // movb         (%rax), %al
	WORD $0x0688  // movb         %al, (%rsi)
	LONG $0x40bd8d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdi
	LONG $0x000003e9; BYTE $0x00  // jmp          LBB0_465, $3(%rip)
LBB0_464:
	WORD $0x8949; BYTE $0xcf  // movq         %rcx, %r15
LBB0_465:
	LONG $0x176f0ff3  // movdqu       (%rdi), %xmm2
	LONG $0x6f6f0ff3; BYTE $0x10  // movdqu       $16(%rdi), %xmm5
	LONG $0x7f6f0ff3; BYTE $0x20  // movdqu       $32(%rdi), %xmm7
	LONG $0xc87d8948  // movq         %rdi, $-56(%rbp)
	LONG $0x776f0ff3; BYTE $0x30  // movdqu       $48(%rdi), %xmm6
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e7c148  // shlq         $32, %rdi
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc6  // orq          %rax, %r14
	WORD $0x0949; BYTE $0xfe  // orq          %rdi, %r14
	WORD $0x0949; BYTE $0xde  // orq          %rbx, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e3c148  // shlq         $32, %rbx
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xf8  // orq          %rdi, %rax
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0x094c; BYTE $0xc1  // orq          %r8, %rcx
	LONG $0x004b840f; WORD $0x0000  // je           LBB0_467, $75(%rip)
	WORD $0x894c; BYTE $0xc1  // movq         %r8, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xc1  // andq         %rax, %rcx
	LONG $0x091c8d48  // leaq         (%rcx,%rcx), %rbx
	WORD $0x094c; BYTE $0xc3  // orq          %r8, %rbx
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x3148; BYTE $0xf7  // xorq         %rsi, %rdi
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xc0920f41  // setb         %r8b
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x3148; BYTE $0xc8  // xorq         %rcx, %rax
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_468, $10(%rip)
LBB0_467:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
LBB0_468:
	WORD $0x214c; BYTE $0xf0  // andq         %r14, %rax
	LONG $0x6e0f4866; BYTE $0xd8  // movq         %rax, %xmm3
	LONG $0x3a0f4166; WORD $0xd944; BYTE $0x00  // pclmulqdq    $0, %xmm9, %xmm3
	LONG $0x7e0f4966; BYTE $0xde  // movq         %xmm3, %r14
	WORD $0x314d; BYTE $0xce  // xorq         %r9, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xd70f4466; BYTE $0xd3  // pmovmskb     %xmm3, %r10d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0x740f4166; BYTE $0xdc  // pcmpeqb      %xmm12, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc2  // orq          %rax, %r10
	WORD $0x0949; BYTE $0xca  // orq          %rcx, %r10
	WORD $0x0949; BYTE $0xda  // orq          %rbx, %r10
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	WORD $0xf749; BYTE $0xd1  // notq         %r9
	WORD $0x214d; BYTE $0xca  // andq         %r9, %r10
	LONG $0xd4740f66  // pcmpeqb      %xmm4, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0xec740f66  // pcmpeqb      %xmm4, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xfc740f66  // pcmpeqb      %xmm4, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xf4740f66  // pcmpeqb      %xmm4, %xmm6
	LONG $0xced70f66  // pmovmskb     %xmm6, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xf0  // orq          %rsi, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	QUAD $0x333333333333bf48; WORD $0x3333  // movabsq      $3689348814741910323, %rdi
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	LONG $0x0077840f; WORD $0x0000  // je           LBB0_472, $119(%rip)
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
	BYTE $0x90  // .p2align 4, 0x90
LBB0_470:
	LONG $0xff588d48  // leaq         $-1(%rax), %rbx
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xd148; BYTE $0xee  // shrq         %rsi
	QUAD $0x555555555555ba48; WORD $0x5555  // movabsq      $6148914691236517205, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x2948; BYTE $0xf1  // subq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0x2148; BYTE $0xfe  // andq         %rdi, %rsi
	LONG $0x02e9c148  // shrq         $2, %rcx
	WORD $0x2148; BYTE $0xf9  // andq         %rdi, %rcx
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	LONG $0x04eec148  // shrq         $4, %rsi
	WORD $0x0148; BYTE $0xce  // addq         %rcx, %rsi
	WORD $0x214c; BYTE $0xce  // andq         %r9, %rsi
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xf1af0f48  // imulq        %rcx, %rsi
	LONG $0x38eec148  // shrq         $56, %rsi
	WORD $0x014c; BYTE $0xde  // addq         %r11, %rsi
	WORD $0x394c; BYTE $0xee  // cmpq         %r13, %rsi
	LONG $0x04b8860f; WORD $0x0000  // jbe          LBB0_515, $1208(%rip)
	WORD $0xff49; BYTE $0xc5  // incq         %r13
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	LONG $0xff99850f; WORD $0xffff  // jne          LBB0_470, $-103(%rip)
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_473, $10(%rip)
LBB0_472:
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
LBB0_473:
	LONG $0x3ffec149  // sarq         $63, %r14
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	WORD $0xd148; BYTE $0xe8  // shrq         %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x2148; BYTE $0xc8  // andq         %rcx, %rax
	WORD $0x2949; BYTE $0xc2  // subq         %rax, %r10
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x02eac149  // shrq         $2, %r10
	WORD $0x2149; BYTE $0xfa  // andq         %rdi, %r10
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0x04e8c148  // shrq         $4, %rax
	WORD $0x014c; BYTE $0xd0  // addq         %r10, %rax
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xc1af0f48  // imulq        %rcx, %rax
	LONG $0x38e8c148  // shrq         $56, %rax
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0x40c78348  // addq         $64, %rdi
	WORD $0x894c; BYTE $0xf9  // movq         %r15, %rcx
	LONG $0xc0c18348  // addq         $-64, %rcx
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	LONG $0x40f98348  // cmpq         $64, %rcx
	LONG $0xfd5f8d0f; WORD $0xffff  // jge          LBB0_464, $-673(%rip)
	LONG $0xfffbf7e9; BYTE $0xff  // jmp          LBB0_474, $-1033(%rip)
LBB0_489:
	LONG $0xa04d894c  // movq         %r9, $-96(%rbp)
	WORD $0x8b49; BYTE $0x08  // movq         (%r8), %rcx
	WORD $0x294c; BYTE $0xf1  // subq         %r14, %rcx
	WORD $0x014c; BYTE $0xf7  // addq         %r14, %rdi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x3145; BYTE $0xdb  // xorl         %r11d, %r11d
	WORD $0x3145; BYTE $0xed  // xorl         %r13d, %r13d
	LONG $0x40f98348  // cmpq         $64, %rcx
	LONG $0x01638d0f; WORD $0x0000  // jge          LBB0_490, $355(%rip)
LBB0_500:
	LONG $0xa0458b48  // movq         $-96(%rbp), %rax
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x04d08e0f; WORD $0x0000  // jle          LBB0_522, $1232(%rip)
	WORD $0x8949; BYTE $0xcf  // movq         %rcx, %r15
	QUAD $0xffff70857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-144(%rbp)
	QUAD $0xffff60857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-160(%rbp)
	QUAD $0xffff50857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-176(%rbp)
	QUAD $0xffff40857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-192(%rbp)
	WORD $0xf889  // movl         %edi, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000fc13d; BYTE $0x00  // cmpl         $4033, %eax
	LONG $0x0120820f; WORD $0x0000  // jb           LBB0_491, $288(%rip)
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	LONG $0x20ff8349  // cmpq         $32, %r15
	LONG $0x002b820f; WORD $0x0000  // jb           LBB0_504, $43(%rip)
	WORD $0x100f; BYTE $0x10  // movups       (%rax), %xmm2
	LONG $0x4095110f; WORD $0xffff; BYTE $0xff  // movups       %xmm2, $-192(%rbp)
	LONG $0x506f0ff3; BYTE $0x10  // movdqu       $16(%rax), %xmm2
	QUAD $0xffffff50957f0ff3  // movdqu       %xmm2, $-176(%rbp)
	LONG $0x20c08348  // addq         $32, %rax
	LONG $0xe07f8d49  // leaq         $-32(%r15), %rdi
	LONG $0x60b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-160(%rbp), %rsi
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_505, $10(%rip)
LBB0_504:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	WORD $0x894c; BYTE $0xff  // movq         %r15, %rdi
LBB0_505:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x0060820f; WORD $0x0000  // jb           LBB0_506, $96(%rip)
	LONG $0x106f0ff3  // movdqu       (%rax), %xmm2
	LONG $0x167f0ff3  // movdqu       %xmm2, (%rsi)
	LONG $0x10c08348  // addq         $16, %rax
	LONG $0x10c68348  // addq         $16, %rsi
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0x004c830f; WORD $0x0000  // jae          LBB0_511, $76(%rip)
LBB0_507:
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0x00648c0f; WORD $0x0000  // jl           LBB0_508, $100(%rip)
LBB0_512:
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0x008b  // movl         (%rax), %eax
	WORD $0x0689  // movl         %eax, (%rsi)
	LONG $0x04c28348  // addq         $4, %rdx
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0xfcc78348  // addq         $-4, %rdi
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x004e830f; WORD $0x0000  // jae          LBB0_513, $78(%rip)
LBB0_509:
	LONG $0x40958d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdx
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x0066850f; WORD $0x0000  // jne          LBB0_514, $102(%rip)
	LONG $0x000074e9; BYTE $0x00  // jmp          LBB0_491, $116(%rip)
LBB0_506:
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0xffb4820f; WORD $0xffff  // jb           LBB0_507, $-76(%rip)
LBB0_511:
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0x8b48; BYTE $0x00  // movq         (%rax), %rax
	WORD $0x8948; BYTE $0x06  // movq         %rax, (%rsi)
	LONG $0x08c28348  // addq         $8, %rdx
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x08c68348  // addq         $8, %rsi
	LONG $0xf8c78348  // addq         $-8, %rdi
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0xff9c8d0f; WORD $0xffff  // jge          LBB0_512, $-100(%rip)
LBB0_508:
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0xffb2820f; WORD $0xffff  // jb           LBB0_509, $-78(%rip)
LBB0_513:
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	WORD $0xb70f; BYTE $0x00  // movzwl       (%rax), %eax
	WORD $0x8966; BYTE $0x06  // movw         %ax, (%rsi)
	LONG $0x02c28348  // addq         $2, %rdx
	LONG $0x02c68348  // addq         $2, %rsi
	LONG $0xfec78348  // addq         $-2, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0x40958d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdx
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	LONG $0x0013840f; WORD $0x0000  // je           LBB0_491, $19(%rip)
LBB0_514:
	WORD $0x008a  // movb         (%rax), %al
	WORD $0x0688  // movb         %al, (%rsi)
	LONG $0x40bd8d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rdi
	LONG $0x000003e9; BYTE $0x00  // jmp          LBB0_491, $3(%rip)
LBB0_490:
	WORD $0x8949; BYTE $0xcf  // movq         %rcx, %r15
LBB0_491:
	LONG $0x176f0ff3  // movdqu       (%rdi), %xmm2
	LONG $0x6f6f0ff3; BYTE $0x10  // movdqu       $16(%rdi), %xmm5
	LONG $0x7f6f0ff3; BYTE $0x20  // movdqu       $32(%rdi), %xmm7
	LONG $0xc87d8948  // movq         %rdi, $-56(%rbp)
	LONG $0x776f0ff3; BYTE $0x30  // movdqu       $48(%rdi), %xmm6
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e7c148  // shlq         $32, %rdi
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc6  // orq          %rax, %r14
	WORD $0x0949; BYTE $0xfe  // orq          %rdi, %r14
	WORD $0x0949; BYTE $0xde  // orq          %rbx, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e3c148  // shlq         $32, %rbx
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xf8  // orq          %rdi, %rax
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0x094c; BYTE $0xc1  // orq          %r8, %rcx
	LONG $0x004b840f; WORD $0x0000  // je           LBB0_493, $75(%rip)
	WORD $0x894c; BYTE $0xc1  // movq         %r8, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xc1  // andq         %rax, %rcx
	LONG $0x091c8d48  // leaq         (%rcx,%rcx), %rbx
	WORD $0x094c; BYTE $0xc3  // orq          %r8, %rbx
	WORD $0x8948; BYTE $0xdf  // movq         %rbx, %rdi
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x3148; BYTE $0xf7  // xorq         %rsi, %rdi
	WORD $0x2148; BYTE $0xf0  // andq         %rsi, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xc0920f41  // setb         %r8b
	WORD $0x0148; BYTE $0xc0  // addq         %rax, %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x3148; BYTE $0xc8  // xorq         %rcx, %rax
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_494, $10(%rip)
LBB0_493:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
LBB0_494:
	WORD $0x214c; BYTE $0xf0  // andq         %r14, %rax
	LONG $0x6e0f4866; BYTE $0xd8  // movq         %rax, %xmm3
	LONG $0x3a0f4166; WORD $0xd944; BYTE $0x00  // pclmulqdq    $0, %xmm9, %xmm3
	LONG $0x7e0f4966; BYTE $0xde  // movq         %xmm3, %r14
	WORD $0x314d; BYTE $0xce  // xorq         %r9, %r14
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xd70f4466; BYTE $0xd3  // pmovmskb     %xmm3, %r10d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0x740f4166; BYTE $0xda  // pcmpeqb      %xmm10, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0949; BYTE $0xc2  // orq          %rax, %r10
	WORD $0x0949; BYTE $0xca  // orq          %rcx, %r10
	WORD $0x0949; BYTE $0xda  // orq          %rbx, %r10
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	WORD $0xf749; BYTE $0xd1  // notq         %r9
	WORD $0x214d; BYTE $0xca  // andq         %r9, %r10
	LONG $0x740f4166; BYTE $0xd3  // pcmpeqb      %xmm11, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0x740f4166; BYTE $0xeb  // pcmpeqb      %xmm11, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0x740f4166; BYTE $0xfb  // pcmpeqb      %xmm11, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0x740f4166; BYTE $0xf3  // pcmpeqb      %xmm11, %xmm6
	LONG $0xced70f66  // pmovmskb     %xmm6, %ecx
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x0948; BYTE $0xf0  // orq          %rsi, %rax
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	QUAD $0x333333333333bf48; WORD $0x3333  // movabsq      $3689348814741910323, %rdi
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	LONG $0x0077840f; WORD $0x0000  // je           LBB0_498, $119(%rip)
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
	BYTE $0x90  // .p2align 4, 0x90
LBB0_496:
	LONG $0xff588d48  // leaq         $-1(%rax), %rbx
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xd148; BYTE $0xee  // shrq         %rsi
	QUAD $0x555555555555ba48; WORD $0x5555  // movabsq      $6148914691236517205, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x2948; BYTE $0xf1  // subq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0x2148; BYTE $0xfe  // andq         %rdi, %rsi
	LONG $0x02e9c148  // shrq         $2, %rcx
	WORD $0x2148; BYTE $0xf9  // andq         %rdi, %rcx
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	LONG $0x04eec148  // shrq         $4, %rsi
	WORD $0x0148; BYTE $0xce  // addq         %rcx, %rsi
	WORD $0x214c; BYTE $0xce  // andq         %r9, %rsi
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xf1af0f48  // imulq        %rcx, %rsi
	LONG $0x38eec148  // shrq         $56, %rsi
	WORD $0x014c; BYTE $0xde  // addq         %r11, %rsi
	WORD $0x394c; BYTE $0xee  // cmpq         %r13, %rsi
	LONG $0x0088860f; WORD $0x0000  // jbe          LBB0_515, $136(%rip)
	WORD $0xff49; BYTE $0xc5  // incq         %r13
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	LONG $0xff99850f; WORD $0xffff  // jne          LBB0_496, $-103(%rip)
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_499, $10(%rip)
LBB0_498:
	QUAD $0x0f0f0f0f0f0fb949; WORD $0x0f0f  // movabsq      $1085102592571150095, %r9
LBB0_499:
	LONG $0x3ffec149  // sarq         $63, %r14
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	WORD $0xd148; BYTE $0xe8  // shrq         %rax
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x2148; BYTE $0xc8  // andq         %rcx, %rax
	WORD $0x2949; BYTE $0xc2  // subq         %rax, %r10
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x02eac149  // shrq         $2, %r10
	WORD $0x2149; BYTE $0xfa  // andq         %rdi, %r10
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0x04e8c148  // shrq         $4, %rax
	WORD $0x014c; BYTE $0xd0  // addq         %r10, %rax
	WORD $0x214c; BYTE $0xc8  // andq         %r9, %rax
	QUAD $0x010101010101b948; WORD $0x0101  // movabsq      $72340172838076673, %rcx
	LONG $0xc1af0f48  // imulq        %rcx, %rax
	LONG $0x38e8c148  // shrq         $56, %rax
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
	LONG $0x40c78348  // addq         $64, %rdi
	WORD $0x894c; BYTE $0xf9  // movq         %r15, %rcx
	LONG $0xc0c18348  // addq         $-64, %rcx
	WORD $0x894d; BYTE $0xf1  // movq         %r14, %r9
	LONG $0x40f98348  // cmpq         $64, %rcx
	LONG $0xfd5b8d0f; WORD $0xffff  // jge          LBB0_490, $-677(%rip)
	LONG $0xfffbf3e9; BYTE $0xff  // jmp          LBB0_500, $-1037(%rip)
LBB0_515:
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	WORD $0x8b49; BYTE $0x08  // movq         (%r8), %rcx
	LONG $0xc0bc0f48  // bsfq         %rax, %rax
	WORD $0x294c; BYTE $0xf8  // subq         %r15, %rax
	LONG $0x08748d4c; BYTE $0x01  // leaq         $1(%rax,%rcx), %r14
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	WORD $0x3949; BYTE $0xc6  // cmpq         %rax, %r14
	LONG $0xf0470f4c  // cmovaq       %rax, %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa04d8b4c  // movq         $-96(%rbp), %r9
	LONG $0xfff47fe9; BYTE $0xff  // jmp          LBB0_419, $-2945(%rip)
LBB0_458:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x00ad850f; WORD $0x0000  // jne          LBB0_523, $173(%rip)
	LONG $0x084c8d4a; BYTE $0x01  // leaq         $1(%rax,%r9), %rcx
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x014c; BYTE $0xc0  // addq         %r8, %rax
LBB0_460:
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	LONG $0xa04d8b4c  // movq         $-96(%rbp), %r9
	LONG $0x001d8f0f; WORD $0x0000  // jg           LBB0_517, $29(%rip)
	LONG $0xfff44be9; BYTE $0xff  // jmp          LBB0_419, $-2997(%rip)
LBB0_516:
	LONG $0xfec2c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rdx
	LONG $0x000002be; BYTE $0x00  // movl         $2, %esi
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	LONG $0xf4338e0f; WORD $0xffff  // jle          LBB0_419, $-3021(%rip)
LBB0_517:
	WORD $0xb60f; BYTE $0x11  // movzbl       (%rcx), %edx
	WORD $0xfa80; BYTE $0x5c  // cmpb         $92, %dl
	LONG $0xffdc840f; WORD $0xffff  // je           LBB0_516, $-36(%rip)
	WORD $0xfa80; BYTE $0x22  // cmpb         $34, %dl
	LONG $0x001d840f; WORD $0x0000  // je           LBB0_520, $29(%rip)
	LONG $0xffc2c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rdx
	LONG $0x000001be; BYTE $0x00  // movl         $1, %esi
	WORD $0x0148; BYTE $0xf1  // addq         %rsi, %rcx
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	LONG $0xffd38f0f; WORD $0xffff  // jg           LBB0_517, $-45(%rip)
	LONG $0xfff401e9; BYTE $0xff  // jmp          LBB0_419, $-3071(%rip)
LBB0_520:
	WORD $0x2948; BYTE $0xf9  // subq         %rdi, %rcx
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	LONG $0xfff6d2e9; BYTE $0xff  // jmp          LBB0_462, $-2350(%rip)
LBB0_521:
	LONG $0x370c8d4a  // leaq         (%rdi,%r14), %rcx
	LONG $0xffff82e9; BYTE $0xff  // jmp          LBB0_460, $-126(%rip)
LBB0_522:
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	WORD $0x8b4d; BYTE $0x30  // movq         (%r8), %r14
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	WORD $0x8949; BYTE $0xc1  // movq         %rax, %r9
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xfff3c9e9; BYTE $0xff  // jmp          LBB0_419, $-3127(%rip)
LBB0_523:
	LONG $0xa0558b48  // movq         $-96(%rbp), %rdx
	LONG $0xff488d49  // leaq         $-1(%r8), %rcx
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x001e850f; WORD $0x0000  // jne          LBB0_525, $30(%rip)
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	WORD $0x8949; BYTE $0xd1  // movq         %rdx, %r9
	LONG $0xb0458b4c  // movq         $-80(%rbp), %r8
	QUAD $0x000100002600ba49; WORD $0x0000  // movabsq      $4294977024, %r10
	LONG $0xfff39ae9; BYTE $0xff  // jmp          LBB0_419, $-3174(%rip)
LBB0_525:
	LONG $0x084c8d4a; BYTE $0x02  // leaq         $2(%rax,%r9), %rcx
	WORD $0x2949; BYTE $0xc0  // subq         %rax, %r8
	LONG $0xfec08349  // addq         $-2, %r8
	WORD $0x894c; BYTE $0xc0  // movq         %r8, %rax
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xffff13e9; BYTE $0xff  // jmp          LBB0_460, $-237(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_447:
	LONG $0x10c18349  // addq         $16, %r9
	WORD $0x894c; BYTE $0xf0  // movq         %r14, %rax
	LONG $0x308d3b4c; WORD $0xffff; BYTE $0xff  // cmpq         $-208(%rbp), %r9
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xd157850f; WORD $0xffff  // jne          LBB0_2, $-11945(%rip)
LBB0_448:
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0x0093840f; WORD $0x0000  // je           LBB0_526, $147(%rip)
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	LONG $0x6e0f4866; BYTE $0xc2  // movq         %rdx, %xmm0
	LONG $0x7f0f41f3; BYTE $0x06  // movdqu       %xmm0, (%r14)
	LONG $0x007d8b4d  // movq         (%r13), %r15
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	LONG $0xb0458948  // movq         %rax, $-80(%rbp)
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	WORD $0x294c; BYTE $0xf8  // subq         %r15, %rax
	LONG $0xa0458948  // movq         %rax, $-96(%rbp)
	WORD $0x8b4d; BYTE $0x13  // movq         (%r11), %r10
	LONG $0x05478d49  // leaq         $5(%r15), %rax
	LONG $0x90458948  // movq         %rax, $-112(%rbp)
	QUAD $0xffffffff9845c748  // movq         $-1, $-104(%rbp)
	QUAD $0xffffcfab056f0ff3  // movdqu       $-12373(%rip), %xmm0  /* LCPI0_3+0(%rip) */
	QUAD $0xffffcfb30d6f0ff3  // movdqu       $-12365(%rip), %xmm1  /* LCPI0_4+0(%rip) */
	QUAD $0xffcfea056f0f44f3; BYTE $0xff  // movdqu       $-12310(%rip), %xmm8  /* LCPI0_8+0(%rip) */
	QUAD $0xffffcff21d6f0ff3  // movdqu       $-12302(%rip), %xmm3  /* LCPI0_9+0(%rip) */
	QUAD $0xffcff90d6f0f44f3; BYTE $0xff  // movdqu       $-12295(%rip), %xmm9  /* LCPI0_10+0(%rip) */
	QUAD $0xffd000156f0f44f3; BYTE $0xff  // movdqu       $-12288(%rip), %xmm10  /* LCPI0_11+0(%rip) */
	QUAD $0xffcf571d6f0f44f3; BYTE $0xff  // movdqu       $-12457(%rip), %xmm11  /* LCPI0_1+0(%rip) */
	QUAD $0xffcffe256f0f44f3; BYTE $0xff  // movdqu       $-12290(%rip), %xmm12  /* LCPI0_12+0(%rip) */
	QUAD $0xffd0052d6f0f44f3; BYTE $0xff  // movdqu       $-12283(%rip), %xmm13  /* LCPI0_13+0(%rip) */
	LONG $0xb87d894c  // movq         %r15, $-72(%rbp)
	LONG $0x00032fe9; BYTE $0x00  // jmp          LBB0_586, $815(%rip)
LBB0_526:
	LONG $0x00458b4d  // movq         (%r13), %r8
	LONG $0x08758b49  // movq         $8(%r13), %rsi
	WORD $0x8b49; BYTE $0x13  // movq         (%r11), %rdx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x2948; BYTE $0xf1  // subq         %rsi, %rcx
	LONG $0x0026830f; WORD $0x0000  // jae          LBB0_531, $38(%rip)
	LONG $0x10048a41  // movb         (%r8,%rdx), %al
	WORD $0x0d3c  // cmpb         $13, %al
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_531, $26(%rip)
	WORD $0x203c  // cmpb         $32, %al
	LONG $0x0012840f; WORD $0x0000  // je           LBB0_531, $18(%rip)
	WORD $0xf704  // addb         $-9, %al
	WORD $0x013c  // cmpb         $1, %al
	LONG $0x0008860f; WORD $0x0000  // jbe          LBB0_531, $8(%rip)
	WORD $0x8949; BYTE $0xd4  // movq         %rdx, %r12
	LONG $0x00018ae9; BYTE $0x00  // jmp          LBB0_562, $394(%rip)
LBB0_531:
	LONG $0x01628d4c  // leaq         $1(%rdx), %r12
	WORD $0x3949; BYTE $0xf4  // cmpq         %rsi, %r12
	LONG $0x001e830f; WORD $0x0000  // jae          LBB0_535, $30(%rip)
	LONG $0x20048a43  // movb         (%r8,%r12), %al
	WORD $0x0d3c  // cmpb         $13, %al
	LONG $0x0012840f; WORD $0x0000  // je           LBB0_535, $18(%rip)
	WORD $0x203c  // cmpb         $32, %al
	LONG $0x000a840f; WORD $0x0000  // je           LBB0_535, $10(%rip)
	WORD $0xf704  // addb         $-9, %al
	WORD $0x013c  // cmpb         $1, %al
	LONG $0x015f870f; WORD $0x0000  // ja           LBB0_562, $351(%rip)
LBB0_535:
	LONG $0x02628d4c  // leaq         $2(%rdx), %r12
	WORD $0x3949; BYTE $0xf4  // cmpq         %rsi, %r12
	LONG $0x001e830f; WORD $0x0000  // jae          LBB0_539, $30(%rip)
	LONG $0x20048a43  // movb         (%r8,%r12), %al
	WORD $0x0d3c  // cmpb         $13, %al
	LONG $0x0012840f; WORD $0x0000  // je           LBB0_539, $18(%rip)
	WORD $0x203c  // cmpb         $32, %al
	LONG $0x000a840f; WORD $0x0000  // je           LBB0_539, $10(%rip)
	WORD $0xf704  // addb         $-9, %al
	WORD $0x013c  // cmpb         $1, %al
	LONG $0x0134870f; WORD $0x0000  // ja           LBB0_562, $308(%rip)
LBB0_539:
	LONG $0x03628d4c  // leaq         $3(%rdx), %r12
	WORD $0x3949; BYTE $0xf4  // cmpq         %rsi, %r12
	LONG $0x001e830f; WORD $0x0000  // jae          LBB0_543, $30(%rip)
	LONG $0x20048a43  // movb         (%r8,%r12), %al
	WORD $0x0d3c  // cmpb         $13, %al
	LONG $0x0012840f; WORD $0x0000  // je           LBB0_543, $18(%rip)
	WORD $0x203c  // cmpb         $32, %al
	LONG $0x000a840f; WORD $0x0000  // je           LBB0_543, $10(%rip)
	WORD $0xf704  // addb         $-9, %al
	WORD $0x013c  // cmpb         $1, %al
	LONG $0x0109870f; WORD $0x0000  // ja           LBB0_562, $265(%rip)
LBB0_543:
	LONG $0x047a8d48  // leaq         $4(%rdx), %rdi
	WORD $0x3948; BYTE $0xfe  // cmpq         %rdi, %rsi
	LONG $0x18f0860f; WORD $0x0000  // jbe          LBB0_869, $6384(%rip)
	WORD $0x3948; BYTE $0xfe  // cmpq         %rdi, %rsi
	LONG $0x00bc840f; WORD $0x0000  // je           LBB0_559, $188(%rip)
	LONG $0x303c8d49  // leaq         (%r8,%rsi), %rdi
	LONG $0x04c18348  // addq         $4, %rcx
	LONG $0x02648d4e; BYTE $0x05  // leaq         $5(%rdx,%r8), %r12
	QUAD $0x000100002600b848; WORD $0x0000  // movabsq      $4294977024, %rax
	BYTE $0x90  // .p2align 4, 0x90
LBB0_546:
	LONG $0x54be0f41; WORD $0xff24  // movsbl       $-1(%r12), %edx
	WORD $0xfa83; BYTE $0x20  // cmpl         $32, %edx
	LONG $0x00b3870f; WORD $0x0000  // ja           LBB0_561, $179(%rip)
	LONG $0xd0a30f48  // btq          %rdx, %rax
	LONG $0x00a9830f; WORD $0x0000  // jae          LBB0_561, $169(%rip)
	WORD $0xff49; BYTE $0xc4  // incq         %r12
	WORD $0xff48; BYTE $0xc1  // incq         %rcx
	LONG $0xffdb850f; WORD $0xffff  // jne          LBB0_546, $-37(%rip)
	LONG $0x00007de9; BYTE $0x00  // jmp          LBB0_560, $125(%rip)
LBB0_549:
	WORD $0x8949; BYTE $0x33  // movq         %rsi, (%r11)
	WORD $0x8949; BYTE $0xf6  // movq         %rsi, %r14
	LONG $0x00004de9; BYTE $0x00  // jmp          LBB0_556, $77(%rip)
LBB0_550:
	WORD $0x5d3c  // cmpb         $93, %al
	LONG $0x002d840f; WORD $0x0000  // je           LBB0_554, $45(%rip)
	LONG $0x000040e9; BYTE $0x00  // jmp          LBB0_556, $64(%rip)
LBB0_552:
	WORD $0xff49; BYTE $0xce  // decq         %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0xdec1c748; WORD $0xffff; BYTE $0xff  // movq         $-34, %rcx
	LONG $0x00003be9; BYTE $0x00  // jmp          LBB0_558, $59(%rip)
LBB0_553:
	WORD $0xf980; BYTE $0x7d  // cmpb         $125, %cl
	LONG $0x0025850f; WORD $0x0000  // jne          LBB0_556, $37(%rip)
	LONG $0x000008e9; BYTE $0x00  // jmp          LBB0_554, $8(%rip)
LBB0_251:
	WORD $0x7d3c  // cmpb         $125, %al
	LONG $0x0018850f; WORD $0x0000  // jne          LBB0_556, $24(%rip)
LBB0_554:
	WORD $0xff49; BYTE $0xce  // decq         %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
	LONG $0xdfc1c748; WORD $0xffff; BYTE $0xff  // movq         $-33, %rcx
	LONG $0x000013e9; BYTE $0x00  // jmp          LBB0_558, $19(%rip)
LBB0_555:
	WORD $0x8949; BYTE $0x3b  // movq         %rdi, (%r11)
	WORD $0x8949; BYTE $0xfe  // movq         %rdi, %r14
LBB0_556:
	WORD $0xff49; BYTE $0xce  // decq         %r14
	WORD $0x894d; BYTE $0x33  // movq         %r14, (%r11)
LBB0_557:
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
LBB0_558:
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	LONG $0xa8c48148; WORD $0x0000; BYTE $0x00  // addq         $168, %rsp
	BYTE $0x5b  // popq         %rbx
	WORD $0x5c41  // popq         %r12
	WORD $0x5d41  // popq         %r13
	WORD $0x5e41  // popq         %r14
	WORD $0x5f41  // popq         %r15
	BYTE $0x5d  // popq         %rbp
	BYTE $0xc3  // retq         
LBB0_559:
	WORD $0x014c; BYTE $0xc7  // addq         %r8, %rdi
LBB0_560:
	WORD $0x294c; BYTE $0xc7  // subq         %r8, %rdi
	WORD $0x8949; BYTE $0xfc  // movq         %rdi, %r12
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x3949; BYTE $0xf4  // cmpq         %rsi, %r12
	LONG $0xffd2830f; WORD $0xffff  // jae          LBB0_558, $-46(%rip)
	LONG $0x000019e9; BYTE $0x00  // jmp          LBB0_562, $25(%rip)
LBB0_561:
	WORD $0x894c; BYTE $0xc0  // movq         %r8, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x0149; BYTE $0xc4  // addq         %rax, %r12
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x3949; BYTE $0xf4  // cmpq         %rsi, %r12
	LONG $0xffb4830f; WORD $0xffff  // jae          LBB0_558, $-76(%rip)
LBB0_562:
	LONG $0x247c8d49; BYTE $0x01  // leaq         $1(%r12), %rdi
	WORD $0x8949; BYTE $0x3b  // movq         %rdi, (%r11)
	LONG $0x04be0f43; BYTE $0x20  // movsbl       (%r8,%r12), %eax
	WORD $0xf883; BYTE $0x7b  // cmpl         $123, %eax
	LONG $0x182e870f; WORD $0x0000  // ja           LBB0_876, $6190(%rip)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x79158d48; WORD $0x002c; BYTE $0x00  // leaq         $11385(%rip), %rdx  /* LJTI0_6+0(%rip) */
	LONG $0x82046348  // movslq       (%rdx,%rax,4), %rax
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	JMP AX
LBB0_564:
	LONG $0x08558b49  // movq         $8(%r13), %rdx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x2948; BYTE $0xf9  // subq         %rdi, %rcx
	WORD $0x014c; BYTE $0xc7  // addq         %r8, %rdi
	LONG $0x10f98348  // cmpq         $16, %rcx
	LONG $0x006e820f; WORD $0x0000  // jb           LBB0_569, $110(%rip)
	WORD $0x294c; BYTE $0xe2  // subq         %r12, %rdx
	LONG $0xefc28348  // addq         $-17, %rdx
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	LONG $0xf0e08348  // andq         $-16, %rax
	WORD $0x014c; BYTE $0xe0  // addq         %r12, %rax
	LONG $0x00748d49; BYTE $0x11  // leaq         $17(%r8,%rax), %rsi
	WORD $0xe283; BYTE $0x0f  // andl         $15, %edx
	QUAD $0xffffcd00056f0ff3  // movdqu       $-13056(%rip), %xmm0  /* LCPI0_0+0(%rip) */
	QUAD $0xffffcd080d6f0ff3  // movdqu       $-13048(%rip), %xmm1  /* LCPI0_1+0(%rip) */
	QUAD $0xffffcd10156f0ff3  // movdqu       $-13040(%rip), %xmm2  /* LCPI0_2+0(%rip) */
	  // .p2align 4, 0x90
LBB0_566:
	LONG $0x1f6f0ff3  // movdqu       (%rdi), %xmm3
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0xe0740f66  // pcmpeqb      %xmm0, %xmm4
	LONG $0xd9eb0f66  // por          %xmm1, %xmm3
	LONG $0xda740f66  // pcmpeqb      %xmm2, %xmm3
	LONG $0xdceb0f66  // por          %xmm4, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	WORD $0x8566; BYTE $0xc0  // testw        %ax, %ax
	LONG $0x0064850f; WORD $0x0000  // jne          LBB0_577, $100(%rip)
	LONG $0x10c78348  // addq         $16, %rdi
	LONG $0xf0c18348  // addq         $-16, %rcx
	LONG $0x0ff98348  // cmpq         $15, %rcx
	LONG $0xffc9870f; WORD $0xffff  // ja           LBB0_566, $-55(%rip)
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x8948; BYTE $0xf7  // movq         %rsi, %rdi
LBB0_569:
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0031840f; WORD $0x0000  // je           LBB0_576, $49(%rip)
	LONG $0x0f048d48  // leaq         (%rdi,%rcx), %rax
LBB0_571:
	WORD $0xb60f; BYTE $0x17  // movzbl       (%rdi), %edx
	WORD $0xfa80; BYTE $0x2c  // cmpb         $44, %dl
	LONG $0x21a8840f; WORD $0x0000  // je           LBB0_952, $8616(%rip)
	WORD $0xfa80; BYTE $0x7d  // cmpb         $125, %dl
	LONG $0x219f840f; WORD $0x0000  // je           LBB0_952, $8607(%rip)
	WORD $0xfa80; BYTE $0x5d  // cmpb         $93, %dl
	LONG $0x2196840f; WORD $0x0000  // je           LBB0_952, $8598(%rip)
	WORD $0xff48; BYTE $0xc7  // incq         %rdi
	WORD $0xff48; BYTE $0xc9  // decq         %rcx
	LONG $0xffd6850f; WORD $0xffff  // jne          LBB0_571, $-42(%rip)
	WORD $0x8948; BYTE $0xc7  // movq         %rax, %rdi
LBB0_576:
	WORD $0x294c; BYTE $0xc7  // subq         %r8, %rdi
	LONG $0xd0458b48  // movq         $-48(%rbp), %rax
	WORD $0x8948; BYTE $0x38  // movq         %rdi, (%rax)
	WORD $0x894c; BYTE $0xe1  // movq         %r12, %rcx
	LONG $0xfffeb6e9; BYTE $0xff  // jmp          LBB0_558, $-330(%rip)
LBB0_577:
	WORD $0xb70f; BYTE $0xc0  // movzwl       %ax, %eax
	LONG $0xc0bc0f48  // bsfq         %rax, %rax
	WORD $0x294c; BYTE $0xc7  // subq         %r8, %rdi
	WORD $0x0148; BYTE $0xc7  // addq         %rax, %rdi
LBB0_578:
	WORD $0x8949; BYTE $0x3b  // movq         %rdi, (%r11)
	WORD $0x894c; BYTE $0xe1  // movq         %r12, %rcx
	LONG $0xfffe9ee9; BYTE $0xff  // jmp          LBB0_558, $-354(%rip)
LBB0_579:
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xff428d49  // leaq         $-1(%r10), %rax
	WORD $0xf749; BYTE $0xd2  // notq         %r10
	LONG $0xd2480f4c  // cmovsq       %rdx, %r10
	WORD $0x3949; BYTE $0xc0  // cmpq         %rax, %r8
	LONG $0xd2440f49  // cmoveq       %r10, %rdx
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
LBB0_580:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
LBB0_581:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x20fa880f; WORD $0x0000  // js           LBB0_942, $8442(%rip)
	WORD $0x014d; BYTE $0xca  // addq         %r9, %r10
LBB0_583:
	WORD $0x894d; BYTE $0x13  // movq         %r10, (%r11)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0xfe67880f; WORD $0xffff  // js           LBB0_558, $-409(%rip)
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_584:
	WORD $0x8b49; BYTE $0x36  // movq         (%r14), %rsi
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	LONG $0x984d8b48  // movq         $-104(%rbp), %rcx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xfe4c840f; WORD $0xffff  // je           LBB0_558, $-436(%rip)
LBB0_586:
	LONG $0x084d8b49  // movq         $8(%r13), %rcx
	WORD $0x894c; BYTE $0xd6  // movq         %r10, %rsi
	WORD $0x2948; BYTE $0xce  // subq         %rcx, %rsi
	LONG $0x002d830f; WORD $0x0000  // jae          LBB0_591, $45(%rip)
	LONG $0x17048a43  // movb         (%r15,%r10), %al
	WORD $0x0d3c  // cmpb         $13, %al
	LONG $0x0021840f; WORD $0x0000  // je           LBB0_591, $33(%rip)
	WORD $0x203c  // cmpb         $32, %al
	LONG $0x0019840f; WORD $0x0000  // je           LBB0_591, $25(%rip)
	WORD $0xf704  // addb         $-9, %al
	WORD $0x013c  // cmpb         $1, %al
	LONG $0x000f860f; WORD $0x0000  // jbe          LBB0_591, $15(%rip)
	WORD $0x894d; BYTE $0xd1  // movq         %r10, %r9
	LONG $0x000124e9; BYTE $0x00  // jmp          LBB0_612, $292(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_591:
	LONG $0x014a8d4d  // leaq         $1(%r10), %r9
	WORD $0x3949; BYTE $0xc9  // cmpq         %rcx, %r9
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_595, $35(%rip)
	LONG $0x0f1c8a43  // movb         (%r15,%r9), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_595, $22(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_595, $13(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00ee870f; WORD $0x0000  // ja           LBB0_612, $238(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_595:
	LONG $0x024a8d4d  // leaq         $2(%r10), %r9
	WORD $0x3949; BYTE $0xc9  // cmpq         %rcx, %r9
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_599, $35(%rip)
	LONG $0x0f1c8a43  // movb         (%r15,%r9), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_599, $22(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_599, $13(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x00be870f; WORD $0x0000  // ja           LBB0_612, $190(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_599:
	LONG $0x034a8d4d  // leaq         $3(%r10), %r9
	WORD $0x3949; BYTE $0xc9  // cmpq         %rcx, %r9
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_603, $35(%rip)
	LONG $0x0f1c8a43  // movb         (%r15,%r9), %bl
	WORD $0xfb80; BYTE $0x0d  // cmpb         $13, %bl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_603, $22(%rip)
	WORD $0xfb80; BYTE $0x20  // cmpb         $32, %bl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_603, $13(%rip)
	WORD $0xc380; BYTE $0xf7  // addb         $-9, %bl
	WORD $0xfb80; BYTE $0x01  // cmpb         $1, %bl
	LONG $0x008e870f; WORD $0x0000  // ja           LBB0_612, $142(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_603:
	LONG $0x047a8d49  // leaq         $4(%r10), %rdi
	WORD $0x3948; BYTE $0xf9  // cmpq         %rdi, %rcx
	LONG $0x15b2860f; WORD $0x0000  // jbe          LBB0_869, $5554(%rip)
	WORD $0x3948; BYTE $0xf9  // cmpq         %rdi, %rcx
	LONG $0x004a840f; WORD $0x0000  // je           LBB0_609, $74(%rip)
	LONG $0x0f3c8d49  // leaq         (%r15,%rcx), %rdi
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0x9055034c  // addq         $-112(%rbp), %r10
	WORD $0x894d; BYTE $0xd1  // movq         %r10, %r9
	QUAD $0x000100002600b848; WORD $0x0000  // movabsq      $4294977024, %rax
	BYTE $0x90  // .p2align 4, 0x90
LBB0_606:
	LONG $0x59be0f41; BYTE $0xff  // movsbl       $-1(%r9), %ebx
	WORD $0xfb83; BYTE $0x20  // cmpl         $32, %ebx
	LONG $0x0042870f; WORD $0x0000  // ja           LBB0_611, $66(%rip)
	LONG $0xd8a30f48  // btq          %rbx, %rax
	LONG $0x0038830f; WORD $0x0000  // jae          LBB0_611, $56(%rip)
	WORD $0xff49; BYTE $0xc1  // incq         %r9
	WORD $0xff48; BYTE $0xc6  // incq         %rsi
	LONG $0xffdc850f; WORD $0xffff  // jne          LBB0_606, $-36(%rip)
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_610, $10(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_609:
	WORD $0x014c; BYTE $0xff  // addq         %r15, %rdi
LBB0_610:
	WORD $0x294c; BYTE $0xff  // subq         %r15, %rdi
	WORD $0x8949; BYTE $0xf9  // movq         %rdi, %r9
	WORD $0x3949; BYTE $0xc9  // cmpq         %rcx, %r9
	LONG $0x001b820f; WORD $0x0000  // jb           LBB0_612, $27(%rip)
	LONG $0x00154be9; BYTE $0x00  // jmp          LBB0_870, $5451(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_611:
	LONG $0xb04d034c  // addq         $-80(%rbp), %r9
	WORD $0x3949; BYTE $0xc9  // cmpq         %rcx, %r9
	LONG $0x1535830f; WORD $0x0000  // jae          LBB0_870, $5429(%rip)
LBB0_612:
	LONG $0x01518d4d  // leaq         $1(%r9), %r10
	WORD $0x894d; BYTE $0x13  // movq         %r10, (%r11)
	LONG $0x3cbe0f43; BYTE $0x0f  // movsbl       (%r15,%r9), %edi
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0xff85  // testl        %edi, %edi
	LONG $0xfcd7840f; WORD $0xffff  // je           LBB0_558, $-809(%rip)
	LONG $0xff728d48  // leaq         $-1(%rdx), %rsi
	LONG $0xd61c8b41  // movl         (%r14,%rdx,8), %ebx
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0xfff88348  // cmpq         $-1, %rax
	LONG $0xc1440f49  // cmoveq       %r9, %rax
	LONG $0x98458948  // movq         %rax, $-104(%rbp)
	WORD $0xcbff  // decl         %ebx
	WORD $0xfb83; BYTE $0x05  // cmpl         $5, %ebx
	LONG $0x0233870f; WORD $0x0000  // ja           LBB0_641, $563(%rip)
	LONG $0xb6058d48; WORD $0x0025; BYTE $0x00  // leaq         $9654(%rip), %rax  /* LJTI0_2+0(%rip) */
	LONG $0x981c6348  // movslq       (%rax,%rbx,4), %rbx
	WORD $0x0148; BYTE $0xc3  // addq         %rax, %rbx
	JMP BX
LBB0_615:
	WORD $0xff83; BYTE $0x2c  // cmpl         $44, %edi
	LONG $0x04fa840f; WORD $0x0000  // je           LBB0_682, $1274(%rip)
	WORD $0xff83; BYTE $0x5d  // cmpl         $93, %edi
	LONG $0x04a3840f; WORD $0x0000  // je           LBB0_617, $1187(%rip)
	LONG $0xfffc86e9; BYTE $0xff  // jmp          LBB0_557, $-890(%rip)
LBB0_618:
	LONG $0x5dff8040  // cmpb         $93, %dil
	LONG $0x0494840f; WORD $0x0000  // je           LBB0_617, $1172(%rip)
	QUAD $0x00000001d604c749  // movq         $1, (%r14,%rdx,8)
	WORD $0xff83; BYTE $0x7b  // cmpl         $123, %edi
	LONG $0x01fd860f; WORD $0x0000  // jbe          LBB0_620, $509(%rip)
	LONG $0xfffc66e9; BYTE $0xff  // jmp          LBB0_557, $-922(%rip)
LBB0_621:
	WORD $0xff83; BYTE $0x2c  // cmpl         $44, %edi
	LONG $0x046c850f; WORD $0x0000  // jne          LBB0_622, $1132(%rip)
	LONG $0xfffa8148; WORD $0x000f; BYTE $0x00  // cmpq         $4095, %rdx
	LONG $0x14a68f0f; WORD $0x0000  // jg           LBB0_955, $5286(%rip)
	LONG $0x01428d48  // leaq         $1(%rdx), %rax
	WORD $0x8949; BYTE $0x06  // movq         %rax, (%r14)
	QUAD $0x00000308d644c749; BYTE $0x00  // movq         $3, $8(%r14,%rdx,8)
	LONG $0xfffde3e9; BYTE $0xff  // jmp          LBB0_584, $-541(%rip)
LBB0_623:
	LONG $0x22ff8040  // cmpb         $34, %dil
	LONG $0xfc31850f; WORD $0xffff  // jne          LBB0_557, $-975(%rip)
	QUAD $0x00000004d604c749  // movq         $4, (%r14,%rdx,8)
	LONG $0x08458b49  // movq         $8(%r13), %rax
	WORD $0x8949; BYTE $0xc0  // movq         %rax, %r8
	WORD $0x294d; BYTE $0xd0  // subq         %r10, %r8
	LONG $0x1ff9840f; WORD $0x0000  // je           LBB0_967, $8185(%rip)
	LONG $0xc855894c  // movq         %r10, $-56(%rbp)
	WORD $0x014d; BYTE $0xfa  // addq         %r15, %r10
	LONG $0x40f88349  // cmpq         $64, %r8
	LONG $0x1175820f; WORD $0x0000  // jb           LBB0_840, $4469(%rip)
	WORD $0x8944; BYTE $0xc1  // movl         %r8d, %ecx
	WORD $0xe183; BYTE $0x3f  // andl         $63, %ecx
	LONG $0x804d8948  // movq         %rcx, $-128(%rbp)
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0x294c; BYTE $0xc9  // subq         %r9, %rcx
	LONG $0xbfc18348  // addq         $-65, %rcx
	LONG $0xc0e18348  // andq         $-64, %rcx
	WORD $0x014c; BYTE $0xc9  // addq         %r9, %rcx
	LONG $0x0f4c8d49; BYTE $0x41  // leaq         $65(%r15,%rcx), %rcx
	LONG $0x884d8948  // movq         %rcx, $-120(%rbp)
	LONG $0xffc7c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r15
	WORD $0x3145; BYTE $0xed  // xorl         %r13d, %r13d
	WORD $0x9090  // .p2align 4, 0x90
LBB0_627:
	LONG $0x6f0f41f3; BYTE $0x12  // movdqu       (%r10), %xmm2
	LONG $0x6f0f41f3; WORD $0x106a  // movdqu       $16(%r10), %xmm5
	LONG $0x6f0f41f3; WORD $0x2072  // movdqu       $32(%r10), %xmm6
	LONG $0x6f0f41f3; WORD $0x307a  // movdqu       $48(%r10), %xmm7
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0xe0740f66  // pcmpeqb      %xmm0, %xmm4
	LONG $0xdcd70f66  // pmovmskb     %xmm4, %ebx
	LONG $0xe56f0f66  // movdqa       %xmm5, %xmm4
	LONG $0xe0740f66  // pcmpeqb      %xmm0, %xmm4
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0xe66f0f66  // movdqa       %xmm6, %xmm4
	LONG $0xe0740f66  // pcmpeqb      %xmm0, %xmm4
	LONG $0xd4d70f66  // pmovmskb     %xmm4, %edx
	LONG $0xe76f0f66  // movdqa       %xmm7, %xmm4
	LONG $0xe0740f66  // pcmpeqb      %xmm0, %xmm4
	LONG $0xfcd70f66  // pmovmskb     %xmm4, %edi
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xf2d70f66  // pmovmskb     %xmm2, %esi
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xf5  // pmovmskb     %xmm5, %r14d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xde  // pmovmskb     %xmm6, %r11d
	LONG $0xf9740f66  // pcmpeqb      %xmm1, %xmm7
	LONG $0xd70f4466; BYTE $0xe7  // pmovmskb     %xmm7, %r12d
	LONG $0x30e7c148  // shlq         $48, %rdi
	LONG $0x20e2c148  // shlq         $32, %rdx
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcb  // orq          %rcx, %rbx
	WORD $0x0948; BYTE $0xd3  // orq          %rdx, %rbx
	LONG $0x30e4c149  // shlq         $48, %r12
	LONG $0x20e3c149  // shlq         $32, %r11
	LONG $0x10e6c149  // shlq         $16, %r14
	WORD $0x094c; BYTE $0xf6  // orq          %r14, %rsi
	WORD $0x094c; BYTE $0xde  // orq          %r11, %rsi
	WORD $0x094c; BYTE $0xe6  // orq          %r12, %rsi
	LONG $0xffff8349  // cmpq         $-1, %r15
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_629, $9(%rip)
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0090850f; WORD $0x0000  // jne          LBB0_638, $144(%rip)
LBB0_629:
	WORD $0x0948; BYTE $0xfb  // orq          %rdi, %rbx
	WORD $0x8948; BYTE $0xf1  // movq         %rsi, %rcx
	WORD $0x094c; BYTE $0xe9  // orq          %r13, %rcx
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0x0020850f; WORD $0x0000  // jne          LBB0_644, $32(%rip)
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0348850f; WORD $0x0000  // jne          LBB0_645, $840(%rip)
LBB0_631:
	LONG $0xc0c08349  // addq         $-64, %r8
	LONG $0x40c28349  // addq         $64, %r10
	LONG $0x3ff88349  // cmpq         $63, %r8
	LONG $0xff2e870f; WORD $0xffff  // ja           LBB0_627, $-210(%rip)
	LONG $0x000bbde9; BYTE $0x00  // jmp          LBB0_632, $3005(%rip)
LBB0_644:
	WORD $0x894c; BYTE $0xe9  // movq         %r13, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xf1  // andq         %rsi, %rcx
	LONG $0x09148d48  // leaq         (%rcx,%rcx), %rdx
	WORD $0x094c; BYTE $0xea  // orq          %r13, %rdx
	WORD $0x8948; BYTE $0xd7  // movq         %rdx, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	QUAD $0xaaaaaaaaaaaab848; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rax
	WORD $0x2148; BYTE $0xc7  // andq         %rax, %rdi
	WORD $0x3145; BYTE $0xed  // xorl         %r13d, %r13d
	WORD $0x0148; BYTE $0xcf  // addq         %rcx, %rdi
	LONG $0xc5920f41  // setb         %r13b
	WORD $0x0148; BYTE $0xff  // addq         %rdi, %rdi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc7  // xorq         %rax, %rdi
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	WORD $0x2148; BYTE $0xd7  // andq         %rdx, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	WORD $0x2148; BYTE $0xfb  // andq         %rdi, %rbx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xff91840f; WORD $0xffff  // je           LBB0_631, $-111(%rip)
	LONG $0x0002d4e9; BYTE $0x00  // jmp          LBB0_645, $724(%rip)
LBB0_638:
	WORD $0x894c; BYTE $0xd1  // movq         %r10, %rcx
	LONG $0xb84d2b48  // subq         $-72(%rbp), %rcx
	LONG $0xfebc0f4c  // bsfq         %rsi, %r15
	WORD $0x0149; BYTE $0xcf  // addq         %rcx, %r15
	LONG $0xffff5de9; BYTE $0xff  // jmp          LBB0_629, $-163(%rip)
LBB0_639:
	LONG $0x3aff8040  // cmpb         $58, %dil
	LONG $0xfa87850f; WORD $0xffff  // jne          LBB0_557, $-1401(%rip)
	QUAD $0x00000000d604c749  // movq         $0, (%r14,%rdx,8)
	LONG $0xfffc22e9; BYTE $0xff  // jmp          LBB0_584, $-990(%rip)
LBB0_641:
	WORD $0x8949; BYTE $0x36  // movq         %rsi, (%r14)
	WORD $0xff83; BYTE $0x7b  // cmpl         $123, %edi
	LONG $0xfa6e870f; WORD $0xffff  // ja           LBB0_557, $-1426(%rip)
LBB0_620:
	LONG $0x0f248d4f  // leaq         (%r15,%r9), %r12
	WORD $0xf889  // movl         %edi, %eax
	LONG $0x89158d48; WORD $0x0023; BYTE $0x00  // leaq         $9097(%rip), %rdx  /* LJTI0_3+0(%rip) */
	LONG $0x82046348  // movslq       (%rdx,%rax,4), %rax
	WORD $0x0148; BYTE $0xd0  // addq         %rdx, %rax
	JMP AX
LBB0_648:
	LONG $0x087d8b49  // movq         $8(%r13), %rdi
	WORD $0x294c; BYTE $0xcf  // subq         %r9, %rdi
	LONG $0x12d6840f; WORD $0x0000  // je           LBB0_875, $4822(%rip)
	LONG $0x243c8041; BYTE $0x30  // cmpb         $48, (%r12)
	LONG $0x0031850f; WORD $0x0000  // jne          LBB0_653, $49(%rip)
	LONG $0x01ff8348  // cmpq         $1, %rdi
	LONG $0xfbc7840f; WORD $0xffff  // je           LBB0_583, $-1081(%rip)
	LONG $0x170c8a43  // movb         (%r15,%r10), %cl
	WORD $0xc180; BYTE $0xd2  // addb         $-46, %cl
	WORD $0xf980; BYTE $0x37  // cmpb         $55, %cl
	LONG $0xfbb7870f; WORD $0xffff  // ja           LBB0_583, $-1097(%rip)
	WORD $0xb60f; BYTE $0xc1  // movzbl       %cl, %eax
	QUAD $0x000000800001b948; WORD $0x0080  // movabsq      $36028797027352577, %rcx
	LONG $0xc1a30f48  // btq          %rax, %rcx
	LONG $0xfba0830f; WORD $0xffff  // jae          LBB0_583, $-1120(%rip)
LBB0_653:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x0ff1820f; WORD $0x0000  // jb           LBB0_845, $4081(%rip)
	LONG $0xf07f8d4c  // leaq         $-16(%rdi), %r15
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xf0e08348  // andq         $-16, %rax
	LONG $0x20448d4a; BYTE $0x10  // leaq         $16(%rax,%r12), %rax
	LONG $0xc8458948  // movq         %rax, $-56(%rbp)
	LONG $0x0fe78341  // andl         $15, %r15d
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x894c; BYTE $0xe3  // movq         %r12, %rbx
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_655:
	LONG $0x136f0ff3  // movdqu       (%rbx), %xmm2
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0x640f4166; BYTE $0xe0  // pcmpgtb      %xmm8, %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xea640f66  // pcmpgtb      %xmm2, %xmm5
	LONG $0xecdb0f66  // pand         %xmm4, %xmm5
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0x740f4166; BYTE $0xe1  // pcmpeqb      %xmm9, %xmm4
	LONG $0xf26f0f66  // movdqa       %xmm2, %xmm6
	LONG $0x740f4166; BYTE $0xf2  // pcmpeqb      %xmm10, %xmm6
	LONG $0xf4eb0f66  // por          %xmm4, %xmm6
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0xeb0f4166; BYTE $0xe3  // por          %xmm11, %xmm4
	LONG $0x740f4166; BYTE $0xd4  // pcmpeqb      %xmm12, %xmm2
	LONG $0x740f4166; BYTE $0xe5  // pcmpeqb      %xmm13, %xmm4
	LONG $0xd70f4466; BYTE $0xf4  // pmovmskb     %xmm4, %r14d
	LONG $0xe2eb0f66  // por          %xmm2, %xmm4
	LONG $0xeeeb0f66  // por          %xmm6, %xmm5
	LONG $0xeceb0f66  // por          %xmm4, %xmm5
	LONG $0xd70f4466; BYTE $0xea  // pmovmskb     %xmm2, %r13d
	LONG $0xf6d70f66  // pmovmskb     %xmm6, %esi
	LONG $0xc5d70f66  // pmovmskb     %xmm5, %eax
	LONG $0xffffffb9; BYTE $0xff  // movl         $4294967295, %ecx
	WORD $0x3148; BYTE $0xc8  // xorq         %rcx, %rax
	LONG $0xc8bc0f48  // bsfq         %rax, %rcx
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0013840f; WORD $0x0000  // je           LBB0_657, $19(%rip)
	LONG $0xffffffb8; BYTE $0xff  // movl         $-1, %eax
	WORD $0xe0d3  // shll         %cl, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0x2141; BYTE $0xc5  // andl         %eax, %r13d
	WORD $0x2141; BYTE $0xc6  // andl         %eax, %r14d
	WORD $0xf021  // andl         %esi, %eax
	WORD $0xc689  // movl         %eax, %esi
LBB0_657:
	LONG $0xff558d41  // leal         $-1(%r13), %edx
	WORD $0x2144; BYTE $0xea  // andl         %r13d, %edx
	LONG $0x0a82850f; WORD $0x0000  // jne          LBB0_807, $2690(%rip)
	LONG $0xff568d41  // leal         $-1(%r14), %edx
	WORD $0x2144; BYTE $0xf2  // andl         %r14d, %edx
	LONG $0x0a75850f; WORD $0x0000  // jne          LBB0_807, $2677(%rip)
	WORD $0x568d; BYTE $0xff  // leal         $-1(%rsi), %edx
	WORD $0xf221  // andl         %esi, %edx
	LONG $0x0a6a850f; WORD $0x0000  // jne          LBB0_807, $2666(%rip)
	WORD $0x8545; BYTE $0xed  // testl        %r13d, %r13d
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_663, $26(%rip)
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xd5bc0f41  // bsfl         %r13d, %edx
	WORD $0x0148; BYTE $0xc2  // addq         %rax, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0c2a850f; WORD $0x0000  // jne          LBB0_823, $3114(%rip)
	WORD $0x8949; BYTE $0xd0  // movq         %rdx, %r8
LBB0_663:
	WORD $0x8545; BYTE $0xf6  // testl        %r14d, %r14d
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_666, $26(%rip)
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xd6bc0f41  // bsfl         %r14d, %edx
	WORD $0x0148; BYTE $0xc2  // addq         %rax, %rdx
	LONG $0xfffa8349  // cmpq         $-1, %r10
	LONG $0x0c07850f; WORD $0x0000  // jne          LBB0_823, $3079(%rip)
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
LBB0_666:
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	WORD $0xf685  // testl        %esi, %esi
	LONG $0x0019840f; WORD $0x0000  // je           LBB0_669, $25(%rip)
	WORD $0x8948; BYTE $0xd8  // movq         %rbx, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	WORD $0xbc0f; BYTE $0xd6  // bsfl         %esi, %edx
	WORD $0x0148; BYTE $0xc2  // addq         %rax, %rdx
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x0cf7850f; WORD $0x0000  // jne          LBB0_835, $3319(%rip)
	WORD $0x8949; BYTE $0xd3  // movq         %rdx, %r11
LBB0_669:
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0324850f; WORD $0x0000  // jne          LBB0_708, $804(%rip)
	LONG $0x10c38348  // addq         $16, %rbx
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x0fff8348  // cmpq         $15, %rdi
	LONG $0xfecd870f; WORD $0xffff  // ja           LBB0_655, $-307(%rip)
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x8f3d8d48; WORD $0x0024; BYTE $0x00  // leaq         $9359(%rip), %rdi  /* LJTI0_5+0(%rip) */
	LONG $0x0309840f; WORD $0x0000  // je           LBB0_710, $777(%rip)
LBB0_672:
	LONG $0xc85d8b48  // movq         $-56(%rbp), %rbx
	LONG $0x3b0c8d4a  // leaq         (%rbx,%r15), %rcx
	LONG $0x00002ce9; BYTE $0x00  // jmp          LBB0_676, $44(%rip)
LBB0_673:
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x0cda850f; WORD $0x0000  // jne          LBB0_837, $3290(%rip)
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_675:
	WORD $0x8948; BYTE $0xf3  // movq         %rsi, %rbx
	WORD $0xff49; BYTE $0xcf  // decq         %r15
	LONG $0x0b92840f; WORD $0x0000  // je           LBB0_825, $2962(%rip)
LBB0_676:
	WORD $0xbe0f; BYTE $0x13  // movsbl       (%rbx), %edx
	WORD $0xc283; BYTE $0xd5  // addl         $-43, %edx
	WORD $0xfa83; BYTE $0x3a  // cmpl         $58, %edx
	LONG $0x02bd870f; WORD $0x0000  // ja           LBB0_709, $701(%rip)
	LONG $0x01738d48  // leaq         $1(%rbx), %rsi
	LONG $0x97046348  // movslq       (%rdi,%rdx,4), %rax
	WORD $0x0148; BYTE $0xf8  // addq         %rdi, %rax
	JMP AX
LBB0_678:
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xfffa8349  // cmpq         $-1, %r10
	LONG $0x0c92850f; WORD $0x0000  // jne          LBB0_837, $3218(%rip)
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0x8949; BYTE $0xc2  // movq         %rax, %r10
	LONG $0xffffbde9; BYTE $0xff  // jmp          LBB0_675, $-67(%rip)
LBB0_680:
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0c77850f; WORD $0x0000  // jne          LBB0_837, $3191(%rip)
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0x8949; BYTE $0xc0  // movq         %rax, %r8
	LONG $0xffffa2e9; BYTE $0xff  // jmp          LBB0_675, $-94(%rip)
LBB0_642:
	WORD $0xff83; BYTE $0x22  // cmpl         $34, %edi
	LONG $0x0079840f; WORD $0x0000  // je           LBB0_686, $121(%rip)
LBB0_622:
	WORD $0xff83; BYTE $0x7d  // cmpl         $125, %edi
	LONG $0xf7e8850f; WORD $0xffff  // jne          LBB0_557, $-2072(%rip)
LBB0_617:
	WORD $0x8949; BYTE $0x36  // movq         %rsi, (%r14)
	WORD $0x8948; BYTE $0xf2  // movq         %rsi, %rdx
	LONG $0x984d8b48  // movq         $-104(%rbp), %rcx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xf990850f; WORD $0xffff  // jne          LBB0_586, $-1648(%rip)
	LONG $0xfff7d7e9; BYTE $0xff  // jmp          LBB0_558, $-2089(%rip)
LBB0_645:
	LONG $0xcbbc0f48  // bsfq         %rbx, %rcx
	LONG $0xa055034c  // addq         $-96(%rbp), %r10
	WORD $0x0149; BYTE $0xca  // addq         %rcx, %r10
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
LBB0_646:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x1024880f; WORD $0x0000  // js           LBB0_872, $4132(%rip)
	WORD $0x894d; BYTE $0x13  // movq         %r10, (%r11)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	LONG $0xc87d8348; BYTE $0x00  // cmpq         $0, $-56(%rbp)
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	LONG $0xf9478f0f; WORD $0xffff  // jg           LBB0_584, $-1721(%rip)
	LONG $0xfff7a1e9; BYTE $0xff  // jmp          LBB0_558, $-2143(%rip)
LBB0_682:
	LONG $0xfffa8148; WORD $0x000f; BYTE $0x00  // cmpq         $4095, %rdx
	LONG $0x0fe38f0f; WORD $0x0000  // jg           LBB0_955, $4067(%rip)
	LONG $0x01428d48  // leaq         $1(%rdx), %rax
	WORD $0x8949; BYTE $0x06  // movq         %rax, (%r14)
	QUAD $0x00000008d644c749; BYTE $0x00  // movq         $0, $8(%r14,%rdx,8)
	LONG $0xfff920e9; BYTE $0xff  // jmp          LBB0_584, $-1760(%rip)
LBB0_686:
	QUAD $0x00000002d604c749  // movq         $2, (%r14,%rdx,8)
	LONG $0x084d8b49  // movq         $8(%r13), %rcx
	WORD $0x8949; BYTE $0xcd  // movq         %rcx, %r13
	WORD $0x294d; BYTE $0xd5  // subq         %r10, %r13
	LONG $0x1b5b840f; WORD $0x0000  // je           LBB0_974, $7003(%rip)
	LONG $0xc855894c  // movq         %r10, $-56(%rbp)
	WORD $0x014d; BYTE $0xfa  // addq         %r15, %r10
	LONG $0x40fd8349  // cmpq         $64, %r13
	LONG $0x884d8948  // movq         %rcx, $-120(%rbp)
	LONG $0x0d5f820f; WORD $0x0000  // jb           LBB0_846, $3423(%rip)
	WORD $0x8945; BYTE $0xee  // movl         %r13d, %r14d
	LONG $0x3fe68341  // andl         $63, %r14d
	WORD $0x294c; BYTE $0xc9  // subq         %r9, %rcx
	LONG $0xbfc18348  // addq         $-65, %rcx
	LONG $0xc0e18348  // andq         $-64, %rcx
	WORD $0x014c; BYTE $0xc9  // addq         %r9, %rcx
	LONG $0x0f448d49; BYTE $0x41  // leaq         $65(%r15,%rcx), %rax
	LONG $0x80458948  // movq         %rax, $-128(%rbp)
	LONG $0xffc4c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r12
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	QUAD $0x9090909090909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_689:
	LONG $0x6f0f41f3; BYTE $0x12  // movdqu       (%r10), %xmm2
	LONG $0x6f0f41f3; WORD $0x1062  // movdqu       $16(%r10), %xmm4
	LONG $0x6f0f41f3; WORD $0x206a  // movdqu       $32(%r10), %xmm5
	LONG $0x6f0f41f3; WORD $0x3072  // movdqu       $48(%r10), %xmm6
	LONG $0xfa6f0f66  // movdqa       %xmm2, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xd7d70f66  // pmovmskb     %xmm7, %edx
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xc7d70f66  // pmovmskb     %xmm7, %eax
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xdcd70f66  // pmovmskb     %xmm4, %ebx
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xdd  // pmovmskb     %xmm5, %r11d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xc6  // pmovmskb     %xmm6, %r8d
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e0c148  // shlq         $32, %rax
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0948; BYTE $0xd6  // orq          %rdx, %rsi
	WORD $0x0948; BYTE $0xc6  // orq          %rax, %rsi
	LONG $0x30e0c149  // shlq         $48, %r8
	LONG $0x20e3c149  // shlq         $32, %r11
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x094c; BYTE $0xdf  // orq          %r11, %rdi
	WORD $0x094c; BYTE $0xc7  // orq          %r8, %rdi
	LONG $0xfffc8349  // cmpq         $-1, %r12
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_691, $9(%rip)
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x008a850f; WORD $0x0000  // jne          LBB0_700, $138(%rip)
LBB0_691:
	WORD $0x0948; BYTE $0xce  // orq          %rcx, %rsi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x094c; BYTE $0xf8  // orq          %r15, %rax
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0x0020850f; WORD $0x0000  // jne          LBB0_701, $32(%rip)
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0081850f; WORD $0x0000  // jne          LBB0_702, $129(%rip)
LBB0_693:
	LONG $0xc0c58349  // addq         $-64, %r13
	LONG $0x40c28349  // addq         $64, %r10
	LONG $0x3ffd8349  // cmpq         $63, %r13
	LONG $0xff2f870f; WORD $0xffff  // ja           LBB0_689, $-209(%rip)
	LONG $0x0008a8e9; BYTE $0x00  // jmp          LBB0_694, $2216(%rip)
LBB0_701:
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xf9  // orq          %r15, %rcx
	WORD $0x8948; BYTE $0xca  // movq         %rcx, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x2148; BYTE $0xfa  // andq         %rdi, %rdx
	QUAD $0xaaaaaaaaaaaabf48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdi
	WORD $0x2148; BYTE $0xfa  // andq         %rdi, %rdx
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0x0148; BYTE $0xc2  // addq         %rax, %rdx
	LONG $0xc7920f41  // setb         %r15b
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc2  // xorq         %rax, %rdx
	WORD $0x2148; BYTE $0xca  // andq         %rcx, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xff97840f; WORD $0xffff  // je           LBB0_693, $-105(%rip)
	LONG $0x000013e9; BYTE $0x00  // jmp          LBB0_702, $19(%rip)
LBB0_700:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xb8452b48  // subq         $-72(%rbp), %rax
	LONG $0xe7bc0f4c  // bsfq         %rdi, %r12
	WORD $0x0149; BYTE $0xc4  // addq         %rax, %r12
	LONG $0xffff63e9; BYTE $0xff  // jmp          LBB0_691, $-157(%rip)
LBB0_702:
	LONG $0xc6bc0f48  // bsfq         %rsi, %rax
	LONG $0xa055034c  // addq         $-96(%rbp), %r10
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x1820880f; WORD $0x0000  // js           LBB0_939, $6176(%rip)
LBB0_705:
	WORD $0x894d; BYTE $0x13  // movq         %r10, (%r11)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	LONG $0xc87d8348; BYTE $0x00  // cmpq         $0, $-56(%rbp)
	LONG $0xf5ae8e0f; WORD $0xffff  // jle          LBB0_558, $-2642(%rip)
	WORD $0x8b49; BYTE $0x06  // movq         (%r14), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x0dee8f0f; WORD $0x0000  // jg           LBB0_955, $3566(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8949; BYTE $0x0e  // movq         %rcx, (%r14)
	QUAD $0x00000408c644c749; BYTE $0x00  // movq         $4, $8(%r14,%rax,8)
	LONG $0xfff72be9; BYTE $0xff  // jmp          LBB0_584, $-2261(%rip)
LBB0_708:
	WORD $0x0148; BYTE $0xcb  // addq         %rcx, %rbx
LBB0_709:
	LONG $0xc85d8948  // movq         %rbx, $-56(%rbp)
LBB0_710:
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x17f7840f; WORD $0x0000  // je           LBB0_943, $6135(%rip)
LBB0_711:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x17ee840f; WORD $0x0000  // je           LBB0_943, $6126(%rip)
	WORD $0x854d; BYTE $0xc0  // testq        %r8, %r8
	LONG $0x17e5840f; WORD $0x0000  // je           LBB0_943, $6117(%rip)
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	WORD $0x8948; BYTE $0xc2  // movq         %rax, %rdx
	LONG $0xff488d48  // leaq         $-1(%rax), %rcx
	WORD $0x3949; BYTE $0xca  // cmpq         %rcx, %r10
	LONG $0x003f840f; WORD $0x0000  // je           LBB0_719, $63(%rip)
	WORD $0x3949; BYTE $0xc8  // cmpq         %rcx, %r8
	LONG $0x0036840f; WORD $0x0000  // je           LBB0_719, $54(%rip)
	WORD $0x3949; BYTE $0xcb  // cmpq         %rcx, %r11
	LONG $0x002d840f; WORD $0x0000  // je           LBB0_719, $45(%rip)
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	LONG $0x00338e0f; WORD $0x0000  // jle          LBB0_721, $51(%rip)
	LONG $0xff438d49  // leaq         $-1(%r11), %rax
	WORD $0x3949; BYTE $0xc2  // cmpq         %rax, %r10
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_721, $38(%rip)
	WORD $0xf749; BYTE $0xd3  // notq         %r11
	WORD $0x894d; BYTE $0xda  // movq         %r11, %r10
	LONG $0xfff685e9; BYTE $0xff  // jmp          LBB0_580, $-2427(%rip)
LBB0_719:
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	WORD $0xf749; BYTE $0xda  // negq         %r10
LBB0_720:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	LONG $0xfff66ee9; BYTE $0xff  // jmp          LBB0_581, $-2450(%rip)
LBB0_721:
	WORD $0x894c; BYTE $0xc1  // movq         %r8, %rcx
	WORD $0x094c; BYTE $0xd1  // orq          %r10, %rcx
	WORD $0x394d; BYTE $0xd0  // cmpq         %r10, %r8
	LONG $0xf6438c0f; WORD $0xffff  // jl           LBB0_579, $-2493(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xf63a880f; WORD $0xffff  // js           LBB0_579, $-2502(%rip)
	WORD $0xf749; BYTE $0xd0  // notq         %r8
	WORD $0x894d; BYTE $0xc2  // movq         %r8, %r10
	LONG $0xfff647e9; BYTE $0xff  // jmp          LBB0_580, $-2489(%rip)
LBB0_724:
	LONG $0x08458b49  // movq         $8(%r13), %rax
	WORD $0x8949; BYTE $0xc5  // movq         %rax, %r13
	WORD $0x294d; BYTE $0xd5  // subq         %r10, %r13
	LONG $0x18b1840f; WORD $0x0000  // je           LBB0_974, $6321(%rip)
	LONG $0xc855894c  // movq         %r10, $-56(%rbp)
	WORD $0x014d; BYTE $0xfa  // addq         %r15, %r10
	LONG $0x40fd8349  // cmpq         $64, %r13
	LONG $0x88458948  // movq         %rax, $-120(%rbp)
	LONG $0x0b2e820f; WORD $0x0000  // jb           LBB0_850, $2862(%rip)
	WORD $0x8945; BYTE $0xee  // movl         %r13d, %r14d
	LONG $0x3fe68341  // andl         $63, %r14d
	WORD $0x294c; BYTE $0xc8  // subq         %r9, %rax
	LONG $0xbfc08348  // addq         $-65, %rax
	LONG $0xc0e08348  // andq         $-64, %rax
	WORD $0x014c; BYTE $0xc8  // addq         %r9, %rax
	LONG $0x07448d49; BYTE $0x41  // leaq         $65(%r15,%rax), %rax
	LONG $0x80458948  // movq         %rax, $-128(%rbp)
	LONG $0xffc4c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r12
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	BYTE $0x90  // .p2align 4, 0x90
LBB0_727:
	LONG $0x6f0f41f3; BYTE $0x12  // movdqu       (%r10), %xmm2
	LONG $0x6f0f41f3; WORD $0x1062  // movdqu       $16(%r10), %xmm4
	LONG $0x6f0f41f3; WORD $0x206a  // movdqu       $32(%r10), %xmm5
	LONG $0x6f0f41f3; WORD $0x3072  // movdqu       $48(%r10), %xmm6
	LONG $0xfa6f0f66  // movdqa       %xmm2, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xc7d70f66  // pmovmskb     %xmm7, %eax
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xd7d70f66  // pmovmskb     %xmm7, %edx
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xdcd70f66  // pmovmskb     %xmm4, %ebx
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xdd  // pmovmskb     %xmm5, %r11d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xc6  // pmovmskb     %xmm6, %r8d
	LONG $0x30e1c148  // shlq         $48, %rcx
	LONG $0x20e2c148  // shlq         $32, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc6  // orq          %rax, %rsi
	WORD $0x0948; BYTE $0xd6  // orq          %rdx, %rsi
	LONG $0x30e0c149  // shlq         $48, %r8
	LONG $0x20e3c149  // shlq         $32, %r11
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x094c; BYTE $0xdf  // orq          %r11, %rdi
	WORD $0x094c; BYTE $0xc7  // orq          %r8, %rdi
	LONG $0xfffc8349  // cmpq         $-1, %r12
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_729, $9(%rip)
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x008a850f; WORD $0x0000  // jne          LBB0_738, $138(%rip)
LBB0_729:
	WORD $0x0948; BYTE $0xce  // orq          %rcx, %rsi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x094c; BYTE $0xf8  // orq          %r15, %rax
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0x0020850f; WORD $0x0000  // jne          LBB0_791, $32(%rip)
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x03af850f; WORD $0x0000  // jne          LBB0_792, $943(%rip)
LBB0_731:
	LONG $0xc0c58349  // addq         $-64, %r13
	LONG $0x40c28349  // addq         $64, %r10
	LONG $0x3ffd8349  // cmpq         $63, %r13
	LONG $0xff2f870f; WORD $0xffff  // ja           LBB0_727, $-209(%rip)
	LONG $0x000870e9; BYTE $0x00  // jmp          LBB0_732, $2160(%rip)
LBB0_791:
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xf9  // orq          %r15, %rcx
	WORD $0x8948; BYTE $0xca  // movq         %rcx, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x2148; BYTE $0xfa  // andq         %rdi, %rdx
	QUAD $0xaaaaaaaaaaaabf48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdi
	WORD $0x2148; BYTE $0xfa  // andq         %rdi, %rdx
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0x0148; BYTE $0xc2  // addq         %rax, %rdx
	LONG $0xc7920f41  // setb         %r15b
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc2  // xorq         %rax, %rdx
	WORD $0x2148; BYTE $0xca  // andq         %rcx, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xff97840f; WORD $0xffff  // je           LBB0_731, $-105(%rip)
	LONG $0x000341e9; BYTE $0x00  // jmp          LBB0_792, $833(%rip)
LBB0_738:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xb8452b48  // subq         $-72(%rbp), %rax
	LONG $0xe7bc0f4c  // bsfq         %rdi, %r12
	WORD $0x0149; BYTE $0xc4  // addq         %rax, %r12
	LONG $0xffff63e9; BYTE $0xff  // jmp          LBB0_729, $-157(%rip)
LBB0_739:
	LONG $0x087d8b4d  // movq         $8(%r13), %r15
	WORD $0x294d; BYTE $0xd7  // subq         %r10, %r15
	LONG $0x15f9840f; WORD $0x0000  // je           LBB0_953, $5625(%rip)
	LONG $0xb8458b48  // movq         $-72(%rbp), %rax
	LONG $0xc855894c  // movq         %r10, $-56(%rbp)
	LONG $0x101c8d4e  // leaq         (%rax,%r10), %r11
	LONG $0x303b8041  // cmpb         $48, (%r11)
	LONG $0x0037850f; WORD $0x0000  // jne          LBB0_744, $55(%rip)
	LONG $0x0001ba41; WORD $0x0000  // movl         $1, %r10d
	LONG $0x01ff8349  // cmpq         $1, %r15
	LONG $0x07a8840f; WORD $0x0000  // je           LBB0_822, $1960(%rip)
	LONG $0x014b8a41  // movb         $1(%r11), %cl
	WORD $0xc180; BYTE $0xd2  // addb         $-46, %cl
	WORD $0xf980; BYTE $0x37  // cmpb         $55, %cl
	LONG $0x0798870f; WORD $0x0000  // ja           LBB0_822, $1944(%rip)
	WORD $0xb60f; BYTE $0xc1  // movzbl       %cl, %eax
	QUAD $0x000000800001b948; WORD $0x0080  // movabsq      $36028797027352577, %rcx
	LONG $0xc1a30f48  // btq          %rax, %rcx
	LONG $0x0781830f; WORD $0x0000  // jae          LBB0_822, $1921(%rip)
LBB0_744:
	LONG $0x10ff8349  // cmpq         $16, %r15
	LONG $0x097e820f; WORD $0x0000  // jb           LBB0_851, $2430(%rip)
	LONG $0xf0478d4d  // leaq         $-16(%r15), %r8
	WORD $0x894c; BYTE $0xc0  // movq         %r8, %rax
	LONG $0xf0e08348  // andq         $-16, %rax
	LONG $0x186c8d4e; BYTE $0x10  // leaq         $16(%rax,%r11), %r13
	LONG $0x0fe08341  // andl         $15, %r8d
	QUAD $0xffffffff8845c748  // movq         $-1, $-120(%rbp)
	QUAD $0xffffffff8045c748  // movq         $-1, $-128(%rbp)
	LONG $0xffc6c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r14
	WORD $0x894d; BYTE $0xdc  // movq         %r11, %r12
LBB0_746:
	LONG $0x6f0f41f3; WORD $0x2414  // movdqu       (%r12), %xmm2
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0x640f4166; BYTE $0xe0  // pcmpgtb      %xmm8, %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xea640f66  // pcmpgtb      %xmm2, %xmm5
	LONG $0xecdb0f66  // pand         %xmm4, %xmm5
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0x740f4166; BYTE $0xe1  // pcmpeqb      %xmm9, %xmm4
	LONG $0xf26f0f66  // movdqa       %xmm2, %xmm6
	LONG $0x740f4166; BYTE $0xf2  // pcmpeqb      %xmm10, %xmm6
	LONG $0xf4eb0f66  // por          %xmm4, %xmm6
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0xeb0f4166; BYTE $0xe3  // por          %xmm11, %xmm4
	LONG $0x740f4166; BYTE $0xd4  // pcmpeqb      %xmm12, %xmm2
	LONG $0x740f4166; BYTE $0xe5  // pcmpeqb      %xmm13, %xmm4
	LONG $0xd4d70f66  // pmovmskb     %xmm4, %edx
	LONG $0xe2eb0f66  // por          %xmm2, %xmm4
	LONG $0xeeeb0f66  // por          %xmm6, %xmm5
	LONG $0xeceb0f66  // por          %xmm4, %xmm5
	LONG $0xdad70f66  // pmovmskb     %xmm2, %ebx
	LONG $0xf6d70f66  // pmovmskb     %xmm6, %esi
	LONG $0xc5d70f66  // pmovmskb     %xmm5, %eax
	LONG $0xffffffb9; BYTE $0xff  // movl         $4294967295, %ecx
	WORD $0x3148; BYTE $0xc8  // xorq         %rcx, %rax
	LONG $0xc8bc0f48  // bsfq         %rax, %rcx
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0011840f; WORD $0x0000  // je           LBB0_748, $17(%rip)
	LONG $0xffffffb8; BYTE $0xff  // movl         $-1, %eax
	WORD $0xe0d3  // shll         %cl, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc321  // andl         %eax, %ebx
	WORD $0xc221  // andl         %eax, %edx
	WORD $0xf021  // andl         %esi, %eax
	WORD $0xc689  // movl         %eax, %esi
LBB0_748:
	WORD $0x7b8d; BYTE $0xff  // leal         $-1(%rbx), %edi
	WORD $0xdf21  // andl         %ebx, %edi
	LONG $0x06a2850f; WORD $0x0000  // jne          LBB0_838, $1698(%rip)
	WORD $0x7a8d; BYTE $0xff  // leal         $-1(%rdx), %edi
	WORD $0xd721  // andl         %edx, %edi
	LONG $0x0697850f; WORD $0x0000  // jne          LBB0_838, $1687(%rip)
	WORD $0x7e8d; BYTE $0xff  // leal         $-1(%rsi), %edi
	WORD $0xf721  // andl         %esi, %edi
	LONG $0x068c850f; WORD $0x0000  // jne          LBB0_838, $1676(%rip)
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_754, $26(%rip)
	WORD $0x894c; BYTE $0xe0  // movq         %r12, %rax
	WORD $0x294c; BYTE $0xd8  // subq         %r11, %rax
	LONG $0xd3bc0f44  // bsfl         %ebx, %r10d
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0xfffe8349  // cmpq         $-1, %r14
	LONG $0x0677850f; WORD $0x0000  // jne          LBB0_839, $1655(%rip)
	WORD $0x894d; BYTE $0xd6  // movq         %r10, %r14
LBB0_754:
	WORD $0xd285  // testl        %edx, %edx
	LONG $0x001c840f; WORD $0x0000  // je           LBB0_757, $28(%rip)
	WORD $0x894c; BYTE $0xe0  // movq         %r12, %rax
	WORD $0x294c; BYTE $0xd8  // subq         %r11, %rax
	LONG $0xd2bc0f44  // bsfl         %edx, %r10d
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0x807d8348; BYTE $0xff  // cmpq         $-1, $-128(%rbp)
	LONG $0x0654850f; WORD $0x0000  // jne          LBB0_839, $1620(%rip)
	LONG $0x8055894c  // movq         %r10, $-128(%rbp)
LBB0_757:
	WORD $0xf685  // testl        %esi, %esi
	LONG $0x001c840f; WORD $0x0000  // je           LBB0_760, $28(%rip)
	WORD $0x894c; BYTE $0xe0  // movq         %r12, %rax
	WORD $0x294c; BYTE $0xd8  // subq         %r11, %rax
	LONG $0xd6bc0f44  // bsfl         %esi, %r10d
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0x887d8348; BYTE $0xff  // cmpq         $-1, $-120(%rbp)
	LONG $0x0630850f; WORD $0x0000  // jne          LBB0_839, $1584(%rip)
	LONG $0x8855894c  // movq         %r10, $-120(%rbp)
LBB0_760:
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x01b8850f; WORD $0x0000  // jne          LBB0_796, $440(%rip)
	LONG $0x10c48349  // addq         $16, %r12
	LONG $0xf0c78349  // addq         $-16, %r15
	LONG $0x0fff8349  // cmpq         $15, %r15
	LONG $0xfed4870f; WORD $0xffff  // ja           LBB0_746, $-300(%rip)
	WORD $0x854d; BYTE $0xc0  // testq        %r8, %r8
	LONG $0x883d8d48; WORD $0x001c; BYTE $0x00  // leaq         $7304(%rip), %rdi  /* LJTI0_4+0(%rip) */
	LONG $0x807d8b4c  // movq         $-128(%rbp), %r15
	LONG $0x885d8b48  // movq         $-120(%rbp), %rbx
	LONG $0x019c840f; WORD $0x0000  // je           LBB0_797, $412(%rip)
LBB0_763:
	LONG $0x054c8d4b; BYTE $0x00  // leaq         (%r13,%r8), %rcx
	LONG $0x00000ce9; BYTE $0x00  // jmp          LBB0_765, $12(%rip)
LBB0_764:
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	WORD $0xff49; BYTE $0xc8  // decq         %r8
	LONG $0x0720840f; WORD $0x0000  // je           LBB0_844, $1824(%rip)
LBB0_765:
	LONG $0x75be0f41; BYTE $0x00  // movsbl       (%r13), %esi
	WORD $0xc683; BYTE $0xd5  // addl         $-43, %esi
	WORD $0xfe83; BYTE $0x3a  // cmpl         $58, %esi
	LONG $0x0175870f; WORD $0x0000  // ja           LBB0_797, $373(%rip)
	LONG $0x01558d49  // leaq         $1(%r13), %rdx
	LONG $0xb7046348  // movslq       (%rdi,%rsi,4), %rax
	WORD $0x0148; BYTE $0xf8  // addq         %rdi, %rax
	JMP AX
LBB0_767:
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	WORD $0x294d; BYTE $0xda  // subq         %r11, %r10
	LONG $0xfffb8348  // cmpq         $-1, %rbx
	LONG $0x079a850f; WORD $0x0000  // jne          LBB0_852, $1946(%rip)
	WORD $0xff49; BYTE $0xca  // decq         %r10
	WORD $0x894c; BYTE $0xd3  // movq         %r10, %rbx
	LONG $0xffffbbe9; BYTE $0xff  // jmp          LBB0_764, $-69(%rip)
LBB0_769:
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	WORD $0x294d; BYTE $0xda  // subq         %r11, %r10
	LONG $0xffff8349  // cmpq         $-1, %r15
	LONG $0x077f850f; WORD $0x0000  // jne          LBB0_852, $1919(%rip)
	WORD $0xff49; BYTE $0xca  // decq         %r10
	WORD $0x894d; BYTE $0xd7  // movq         %r10, %r15
	LONG $0xffffa0e9; BYTE $0xff  // jmp          LBB0_764, $-96(%rip)
LBB0_771:
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	WORD $0x294d; BYTE $0xda  // subq         %r11, %r10
	LONG $0xfffe8349  // cmpq         $-1, %r14
	LONG $0x0764850f; WORD $0x0000  // jne          LBB0_852, $1892(%rip)
	WORD $0xff49; BYTE $0xca  // decq         %r10
	WORD $0x894d; BYTE $0xd6  // movq         %r10, %r14
	LONG $0xffff85e9; BYTE $0xff  // jmp          LBB0_764, $-123(%rip)
LBB0_773:
	WORD $0x8b49; BYTE $0x06  // movq         (%r14), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x09248f0f; WORD $0x0000  // jg           LBB0_955, $2340(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8949; BYTE $0x0e  // movq         %rcx, (%r14)
	QUAD $0x00000508c644c749; BYTE $0x00  // movq         $5, $8(%r14,%rax,8)
	LONG $0xfff261e9; BYTE $0xff  // jmp          LBB0_584, $-3487(%rip)
LBB0_775:
	WORD $0x8b49; BYTE $0x06  // movq         (%r14), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x09008f0f; WORD $0x0000  // jg           LBB0_955, $2304(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8949; BYTE $0x0e  // movq         %rcx, (%r14)
	QUAD $0x00000608c644c749; BYTE $0x00  // movq         $6, $8(%r14,%rax,8)
	LONG $0xfff23de9; BYTE $0xff  // jmp          LBB0_584, $-3523(%rip)
LBB0_777:
	LONG $0x08558b49  // movq         $8(%r13), %rdx
	LONG $0xfc428d48  // leaq         $-4(%rdx), %rax
	WORD $0x3949; BYTE $0xc1  // cmpq         %rax, %r9
	LONG $0x1321830f; WORD $0x0000  // jae          LBB0_956, $4897(%rip)
	LONG $0x17148b43  // movl         (%r15,%r10), %edx
	LONG $0x6c61fa81; WORD $0x6573  // cmpl         $1702063201, %edx
	LONG $0x13a4850f; WORD $0x0000  // jne          LBB0_961, $5028(%rip)
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0x05518d4d  // leaq         $5(%r9), %r10
	LONG $0x00004ae9; BYTE $0x00  // jmp          LBB0_790, $74(%rip)
LBB0_780:
	LONG $0x08558b49  // movq         $8(%r13), %rdx
	LONG $0xfd428d48  // leaq         $-3(%rdx), %rax
	WORD $0x3949; BYTE $0xc1  // cmpq         %rax, %r9
	LONG $0x12f4830f; WORD $0x0000  // jae          LBB0_956, $4852(%rip)
	QUAD $0x6c6c756e243c8141  // cmpl         $1819047278, (%r12)
	LONG $0x0024840f; WORD $0x0000  // je           LBB0_789, $36(%rip)
	LONG $0x0013c6e9; BYTE $0x00  // jmp          LBB0_782, $5062(%rip)
LBB0_787:
	LONG $0x08558b49  // movq         $8(%r13), %rdx
	LONG $0xfd428d48  // leaq         $-3(%rdx), %rax
	WORD $0x3949; BYTE $0xc1  // cmpq         %rax, %r9
	LONG $0x12d0830f; WORD $0x0000  // jae          LBB0_956, $4816(%rip)
	QUAD $0x65757274243c8141  // cmpl         $1702195828, (%r12)
	LONG $0x1302850f; WORD $0x0000  // jne          LBB0_957, $4866(%rip)
LBB0_789:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0x04518d4d  // leaq         $4(%r9), %r10
LBB0_790:
	WORD $0x894d; BYTE $0x13  // movq         %r10, (%r11)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xf1b78f0f; WORD $0xffff  // jg           LBB0_584, $-3657(%rip)
	LONG $0xfff011e9; BYTE $0xff  // jmp          LBB0_558, $-4079(%rip)
LBB0_792:
	LONG $0xc6bc0f48  // bsfq         %rsi, %rax
	LONG $0xa055034c  // addq         $-96(%rbp), %r10
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0x1252880f; WORD $0x0000  // js           LBB0_939, $4690(%rip)
LBB0_795:
	WORD $0x894d; BYTE $0x13  // movq         %r10, (%r11)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	LONG $0xc87d8348; BYTE $0x00  // cmpq         $0, $-56(%rbp)
	LONG $0xf1818f0f; WORD $0xffff  // jg           LBB0_584, $-3711(%rip)
	LONG $0xffefdbe9; BYTE $0xff  // jmp          LBB0_558, $-4133(%rip)
LBB0_796:
	WORD $0x0149; BYTE $0xcc  // addq         %rcx, %r12
	WORD $0x894d; BYTE $0xe5  // movq         %r12, %r13
	LONG $0x807d8b4c  // movq         $-128(%rbp), %r15
	LONG $0x885d8b48  // movq         $-120(%rbp), %rbx
LBB0_797:
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x128b840f; WORD $0x0000  // je           LBB0_954, $4747(%rip)
LBB0_798:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x1282840f; WORD $0x0000  // je           LBB0_954, $4738(%rip)
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0x1279840f; WORD $0x0000  // je           LBB0_954, $4729(%rip)
	WORD $0x294d; BYTE $0xdd  // subq         %r11, %r13
	LONG $0xff4d8d49  // leaq         $-1(%r13), %rcx
	WORD $0x3949; BYTE $0xcf  // cmpq         %rcx, %r15
	LONG $0x003c840f; WORD $0x0000  // je           LBB0_806, $60(%rip)
	WORD $0x3949; BYTE $0xce  // cmpq         %rcx, %r14
	LONG $0x0033840f; WORD $0x0000  // je           LBB0_806, $51(%rip)
	WORD $0x3948; BYTE $0xcb  // cmpq         %rcx, %rbx
	LONG $0x002a840f; WORD $0x0000  // je           LBB0_806, $42(%rip)
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x00da8e0f; WORD $0x0000  // jle          LBB0_808, $218(%rip)
	LONG $0xff438d48  // leaq         $-1(%rbx), %rax
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x00cd840f; WORD $0x0000  // je           LBB0_808, $205(%rip)
	WORD $0xf748; BYTE $0xd3  // notq         %rbx
	WORD $0x8949; BYTE $0xda  // movq         %rbx, %r10
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0400890f; WORD $0x0000  // jns          LBB0_822, $1024(%rip)
	LONG $0x00122de9; BYTE $0x00  // jmp          LBB0_954, $4653(%rip)
LBB0_806:
	WORD $0xf749; BYTE $0xdd  // negq         %r13
	WORD $0x894d; BYTE $0xea  // movq         %r13, %r10
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x03ec890f; WORD $0x0000  // jns          LBB0_822, $1004(%rip)
	LONG $0x001219e9; BYTE $0x00  // jmp          LBB0_954, $4633(%rip)
LBB0_632:
	LONG $0x88558b4c  // movq         $-120(%rbp), %r10
	LONG $0x80458b4c  // movq         $-128(%rbp), %r8
	LONG $0x20f88349  // cmpq         $32, %r8
	LONG $0x04b3820f; WORD $0x0000  // jb           LBB0_841, $1203(%rip)
LBB0_633:
	LONG $0x6f0f41f3; BYTE $0x12  // movdqu       (%r10), %xmm2
	LONG $0x6f0f41f3; WORD $0x1062  // movdqu       $16(%r10), %xmm4
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xf5d70f66  // pmovmskb     %xmm5, %esi
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0x10e6c148  // shlq         $16, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcf  // orq          %rcx, %rdi
	LONG $0xffff8349  // cmpq         $-1, %r15
	LONG $0x0077850f; WORD $0x0000  // jne          LBB0_811, $119(%rip)
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0x05aa850f; WORD $0x0000  // jne          LBB0_853, $1450(%rip)
	WORD $0x0948; BYTE $0xde  // orq          %rbx, %rsi
	WORD $0x8948; BYTE $0xf9  // movq         %rdi, %rcx
	WORD $0x094c; BYTE $0xe9  // orq          %r13, %rcx
	LONG $0x006e850f; WORD $0x0000  // jne          LBB0_812, $110(%rip)
LBB0_636:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x009e840f; WORD $0x0000  // je           LBB0_813, $158(%rip)
LBB0_637:
	LONG $0xcebc0f48  // bsfq         %rsi, %rcx
	LONG $0xa055034c  // addq         $-96(%rbp), %r10
	WORD $0x0149; BYTE $0xca  // addq         %rcx, %r10
	LONG $0xfff6f0e9; BYTE $0xff  // jmp          LBB0_646, $-2320(%rip)
LBB0_807:
	WORD $0x294c; BYTE $0xe3  // subq         %r12, %rbx
	LONG $0xd2bc0f44  // bsfl         %edx, %r10d
	WORD $0x0149; BYTE $0xda  // addq         %rbx, %r10
	WORD $0xf749; BYTE $0xd2  // notq         %r10
	LONG $0xfff9a1e9; BYTE $0xff  // jmp          LBB0_720, $-1631(%rip)
LBB0_808:
	WORD $0x894c; BYTE $0xf1  // movq         %r14, %rcx
	WORD $0x094c; BYTE $0xf9  // orq          %r15, %rcx
	WORD $0x394d; BYTE $0xfe  // cmpq         %r15, %r14
	LONG $0x01998c0f; WORD $0x0000  // jl           LBB0_820, $409(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0190880f; WORD $0x0000  // js           LBB0_820, $400(%rip)
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x894d; BYTE $0xf2  // movq         %r14, %r10
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x031b890f; WORD $0x0000  // jns          LBB0_822, $795(%rip)
	LONG $0x001148e9; BYTE $0x00  // jmp          LBB0_954, $4424(%rip)
LBB0_811:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	WORD $0x0948; BYTE $0xde  // orq          %rbx, %rsi
	WORD $0x8948; BYTE $0xf9  // movq         %rdi, %rcx
	WORD $0x094c; BYTE $0xe9  // orq          %r13, %rcx
	LONG $0xff92840f; WORD $0xffff  // je           LBB0_636, $-110(%rip)
LBB0_812:
	WORD $0x8944; BYTE $0xe9  // movl         %r13d, %ecx
	WORD $0xd1f7  // notl         %ecx
	WORD $0xf921  // andl         %edi, %ecx
	WORD $0x1c8d; BYTE $0x09  // leal         (%rcx,%rcx), %ebx
	WORD $0x0944; BYTE $0xeb  // orl          %r13d, %ebx
	WORD $0xda89  // movl         %ebx, %edx
	WORD $0xd2f7  // notl         %edx
	WORD $0xfa21  // andl         %edi, %edx
	LONG $0xaaaae281; WORD $0xaaaa  // andl         $-1431655766, %edx
	WORD $0x3145; BYTE $0xed  // xorl         %r13d, %r13d
	WORD $0xca01  // addl         %ecx, %edx
	LONG $0xc5920f41  // setb         %r13b
	WORD $0xd201  // addl         %edx, %edx
	LONG $0x5555f281; WORD $0x5555  // xorl         $1431655765, %edx
	WORD $0xda21  // andl         %ebx, %edx
	WORD $0xd2f7  // notl         %edx
	WORD $0xd621  // andl         %edx, %esi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xff62850f; WORD $0xffff  // jne          LBB0_637, $-158(%rip)
LBB0_813:
	LONG $0x20c28349  // addq         $32, %r10
	LONG $0xe0c08349  // addq         $-32, %r8
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x03a4850f; WORD $0x0000  // jne          LBB0_842, $932(%rip)
LBB0_814:
	WORD $0x894c; BYTE $0xfa  // movq         %r15, %rdx
	WORD $0x854d; BYTE $0xc0  // testq        %r8, %r8
	LONG $0x067c840f; WORD $0x0000  // je           LBB0_873, $1660(%rip)
LBB0_815:
	LONG $0x01728d49  // leaq         $1(%r10), %rsi
	LONG $0x1ab60f41  // movzbl       (%r10), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x012f840f; WORD $0x0000  // je           LBB0_824, $303(%rip)
	LONG $0xff788d49  // leaq         $-1(%r8), %rdi
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_818, $20(%rip)
	WORD $0x8949; BYTE $0xf8  // movq         %rdi, %r8
	WORD $0x8949; BYTE $0xf2  // movq         %rsi, %r10
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_815, $-45(%rip)
	LONG $0x00064ae9; BYTE $0x00  // jmp          LBB0_873, $1610(%rip)
LBB0_818:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x12f2840f; WORD $0x0000  // je           LBB0_983, $4850(%rip)
	LONG $0xb0750348  // addq         $-80(%rbp), %rsi
	LONG $0xfffa8348  // cmpq         $-1, %rdx
	LONG $0xfe440f4c  // cmoveq       %rsi, %r15
	LONG $0xd6440f48  // cmoveq       %rsi, %rdx
	LONG $0x02c28349  // addq         $2, %r10
	LONG $0xfec08349  // addq         $-2, %r8
	WORD $0x894c; BYTE $0xc7  // movq         %r8, %rdi
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff99850f; WORD $0xffff  // jne          LBB0_815, $-103(%rip)
	LONG $0x000610e9; BYTE $0x00  // jmp          LBB0_873, $1552(%rip)
LBB0_694:
	LONG $0x80558b4c  // movq         $-128(%rbp), %r10
	WORD $0x894d; BYTE $0xf5  // movq         %r14, %r13
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0x03b1820f; WORD $0x0000  // jb           LBB0_847, $945(%rip)
LBB0_695:
	LONG $0x6f0f41f3; BYTE $0x12  // movdqu       (%r10), %xmm2
	LONG $0x6f0f41f3; WORD $0x1062  // movdqu       $16(%r10), %xmm4
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xfdd70f66  // pmovmskb     %xmm5, %edi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xf5d70f66  // pmovmskb     %xmm5, %esi
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xcad70f66  // pmovmskb     %xmm2, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e6c148  // shlq         $16, %rsi
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfffc8349  // cmpq         $-1, %r12
	LONG $0x009c850f; WORD $0x0000  // jne          LBB0_826, $156(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0x0423850f; WORD $0x0000  // jne          LBB0_854, $1059(%rip)
	WORD $0x0948; BYTE $0xfe  // orq          %rdi, %rsi
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xf8  // orq          %r15, %rax
	LONG $0x0093850f; WORD $0x0000  // jne          LBB0_827, $147(%rip)
LBB0_698:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x00c3840f; WORD $0x0000  // je           LBB0_828, $195(%rip)
LBB0_699:
	LONG $0xc6bc0f48  // bsfq         %rsi, %rax
	LONG $0xa055034c  // addq         $-96(%rbp), %r10
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xf744890f; WORD $0xffff  // jns          LBB0_705, $-2236(%rip)
	LONG $0x000f5fe9; BYTE $0x00  // jmp          LBB0_939, $3935(%rip)
LBB0_820:
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xff478d49  // leaq         $-1(%r15), %rax
	WORD $0xf749; BYTE $0xd7  // notq         %r15
	LONG $0xfd480f4d  // cmovsq       %r13, %r15
	WORD $0x3949; BYTE $0xc6  // cmpq         %rax, %r14
	LONG $0xfd450f4d  // cmovneq      %r13, %r15
	WORD $0x894d; BYTE $0xfa  // movq         %r15, %r10
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0179890f; WORD $0x0000  // jns          LBB0_822, $377(%rip)
	LONG $0x000fa6e9; BYTE $0x00  // jmp          LBB0_954, $4006(%rip)
LBB0_823:
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	LONG $0xfff7c8e9; BYTE $0xff  // jmp          LBB0_720, $-2104(%rip)
LBB0_824:
	LONG $0xb8752b48  // subq         $-72(%rbp), %rsi
	WORD $0x8949; BYTE $0xf2  // movq         %rsi, %r10
	LONG $0xfff4f9e9; BYTE $0xff  // jmp          LBB0_646, $-2823(%rip)
LBB0_825:
	LONG $0xc84d8948  // movq         %rcx, $-56(%rbp)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xf73a850f; WORD $0xffff  // jne          LBB0_711, $-2246(%rip)
	LONG $0x000f2ce9; BYTE $0x00  // jmp          LBB0_943, $3884(%rip)
LBB0_826:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x0948; BYTE $0xfe  // orq          %rdi, %rsi
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xf8  // orq          %r15, %rax
	LONG $0xff6d840f; WORD $0xffff  // je           LBB0_698, $-147(%rip)
LBB0_827:
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	WORD $0x148d; BYTE $0x00  // leal         (%rax,%rax), %edx
	WORD $0x0944; BYTE $0xfa  // orl          %r15d, %edx
	WORD $0xd789  // movl         %edx, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xcf21  // andl         %ecx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0xc701  // addl         %eax, %edi
	LONG $0xc7920f41  // setb         %r15b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xd721  // andl         %edx, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xfe21  // andl         %edi, %esi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xff3d850f; WORD $0xffff  // jne          LBB0_699, $-195(%rip)
LBB0_828:
	LONG $0x20c28349  // addq         $32, %r10
	LONG $0xe0c58349  // addq         $-32, %r13
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x027d850f; WORD $0x0000  // jne          LBB0_848, $637(%rip)
LBB0_829:
	WORD $0x894c; BYTE $0xe7  // movq         %r12, %rdi
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x0ea2840f; WORD $0x0000  // je           LBB0_940, $3746(%rip)
LBB0_830:
	LONG $0x014a8d49  // leaq         $1(%r10), %rcx
	LONG $0x12b60f41  // movzbl       (%r10), %edx
	WORD $0xfa80; BYTE $0x22  // cmpb         $34, %dl
	LONG $0x007a840f; WORD $0x0000  // je           LBB0_836, $122(%rip)
	LONG $0xff758d49  // leaq         $-1(%r13), %rsi
	WORD $0xfa80; BYTE $0x5c  // cmpb         $92, %dl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_833, $20(%rip)
	WORD $0x8949; BYTE $0xf5  // movq         %rsi, %r13
	WORD $0x8949; BYTE $0xca  // movq         %rcx, %r10
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_830, $-45(%rip)
	LONG $0x000e70e9; BYTE $0x00  // jmp          LBB0_940, $3696(%rip)
LBB0_833:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0433840f; WORD $0x0000  // je           LBB0_868, $1075(%rip)
	LONG $0xb04d0348  // addq         $-80(%rbp), %rcx
	LONG $0xffff8348  // cmpq         $-1, %rdi
	LONG $0xe1440f4c  // cmoveq       %rcx, %r12
	LONG $0xf9440f48  // cmoveq       %rcx, %rdi
	LONG $0x02c28349  // addq         $2, %r10
	LONG $0xfec58349  // addq         $-2, %r13
	WORD $0x894c; BYTE $0xee  // movq         %r13, %rsi
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xff91850f; WORD $0xffff  // jne          LBB0_830, $-111(%rip)
	LONG $0x000e2ee9; BYTE $0x00  // jmp          LBB0_940, $3630(%rip)
LBB0_835:
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	LONG $0xffed2ae9; BYTE $0xff  // jmp          LBB0_581, $-4822(%rip)
LBB0_836:
	WORD $0x294c; BYTE $0xf9  // subq         %r15, %rcx
	WORD $0x8949; BYTE $0xca  // movq         %rcx, %r10
	WORD $0x8949; BYTE $0xc5  // movq         %rax, %r13
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xf5db890f; WORD $0xffff  // jns          LBB0_705, $-2597(%rip)
	LONG $0x000df6e9; BYTE $0x00  // jmp          LBB0_939, $3574(%rip)
LBB0_837:
	WORD $0xf748; BYTE $0xd8  // negq         %rax
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x8949; BYTE $0xc2  // movq         %rax, %r10
	LONG $0xffecf8e9; BYTE $0xff  // jmp          LBB0_581, $-4872(%rip)
LBB0_838:
	WORD $0x294d; BYTE $0xdc  // subq         %r11, %r12
	LONG $0xd7bc0f44  // bsfl         %edi, %r10d
	WORD $0x014d; BYTE $0xe2  // addq         %r12, %r10
LBB0_839:
	WORD $0xf749; BYTE $0xd2  // notq         %r10
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0e32880f; WORD $0x0000  // js           LBB0_954, $3634(%rip)
LBB0_822:
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x894d; BYTE $0x13  // movq         %r10, (%r11)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	LONG $0xecdf8f0f; WORD $0xffff  // jg           LBB0_584, $-4897(%rip)
	LONG $0xffeb39e9; BYTE $0xff  // jmp          LBB0_558, $-5319(%rip)
LBB0_732:
	LONG $0x80558b4c  // movq         $-128(%rbp), %r10
	WORD $0x894d; BYTE $0xf5  // movq         %r14, %r13
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0x0290820f; WORD $0x0000  // jb           LBB0_858, $656(%rip)
LBB0_733:
	LONG $0x6f0f41f3; BYTE $0x12  // movdqu       (%r10), %xmm2
	LONG $0x6f0f41f3; WORD $0x1062  // movdqu       $16(%r10), %xmm4
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xfdd70f66  // pmovmskb     %xmm5, %edi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xf5d70f66  // pmovmskb     %xmm5, %esi
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xcad70f66  // pmovmskb     %xmm2, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e6c148  // shlq         $16, %rsi
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfffc8349  // cmpq         $-1, %r12
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_735, $9(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x01e1850f; WORD $0x0000  // jne          LBB0_855, $481(%rip)
LBB0_735:
	WORD $0x0948; BYTE $0xfe  // orq          %rdi, %rsi
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xf8  // orq          %r15, %rax
	LONG $0x01ef850f; WORD $0x0000  // jne          LBB0_856, $495(%rip)
LBB0_736:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x021f840f; WORD $0x0000  // je           LBB0_857, $543(%rip)
LBB0_737:
	LONG $0xc6bc0f48  // bsfq         %rsi, %rax
	LONG $0xa055034c  // addq         $-96(%rbp), %r10
	WORD $0x0149; BYTE $0xc2  // addq         %rax, %r10
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xfaae890f; WORD $0xffff  // jns          LBB0_795, $-1362(%rip)
	LONG $0x000cfbe9; BYTE $0x00  // jmp          LBB0_939, $3323(%rip)
LBB0_840:
	LONG $0xffc7c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r15
	WORD $0x3145; BYTE $0xed  // xorl         %r13d, %r13d
	LONG $0x20f88349  // cmpq         $32, %r8
	LONG $0xfb4d830f; WORD $0xffff  // jae          LBB0_633, $-1203(%rip)
LBB0_841:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xfc5c840f; WORD $0xffff  // je           LBB0_814, $-932(%rip)
LBB0_842:
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0x854d; BYTE $0xc0  // testq        %r8, %r8
	LONG $0x0f7d840f; WORD $0x0000  // je           LBB0_982, $3965(%rip)
	LONG $0xb0458b48  // movq         $-80(%rbp), %rax
	LONG $0x020c8d49  // leaq         (%r10,%rax), %rcx
	LONG $0xffff8349  // cmpq         $-1, %r15
	WORD $0x894c; BYTE $0xfa  // movq         %r15, %rdx
	LONG $0xf9440f4c  // cmoveq       %rcx, %r15
	LONG $0xd1440f48  // cmoveq       %rcx, %rdx
	WORD $0xff49; BYTE $0xc2  // incq         %r10
	WORD $0xff49; BYTE $0xc8  // decq         %r8
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	WORD $0x854d; BYTE $0xc0  // testq        %r8, %r8
	LONG $0xfc2b850f; WORD $0xffff  // jne          LBB0_815, $-981(%rip)
	LONG $0x0002a2e9; BYTE $0x00  // jmp          LBB0_873, $674(%rip)
LBB0_844:
	WORD $0x8949; BYTE $0xcd  // movq         %rcx, %r13
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0xfa63850f; WORD $0xffff  // jne          LBB0_798, $-1437(%rip)
	LONG $0x000ce9e9; BYTE $0x00  // jmp          LBB0_954, $3305(%rip)
LBB0_845:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	LONG $0xc865894c  // movq         %r12, $-56(%rbp)
	WORD $0x8949; BYTE $0xff  // movq         %rdi, %r15
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	LONG $0xf53d8d48; WORD $0x0015; BYTE $0x00  // leaq         $5621(%rip), %rdi  /* LJTI0_5+0(%rip) */
	LONG $0xfff167e9; BYTE $0xff  // jmp          LBB0_672, $-3737(%rip)
LBB0_846:
	LONG $0xffc4c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r12
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xfc4f830f; WORD $0xffff  // jae          LBB0_695, $-945(%rip)
LBB0_847:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0xfd83840f; WORD $0xffff  // je           LBB0_829, $-637(%rip)
LBB0_848:
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x01fc840f; WORD $0x0000  // je           LBB0_868, $508(%rip)
	LONG $0xb0458b48  // movq         $-80(%rbp), %rax
	WORD $0x014c; BYTE $0xd0  // addq         %r10, %rax
	LONG $0xfffc8349  // cmpq         $-1, %r12
	WORD $0x894c; BYTE $0xe7  // movq         %r12, %rdi
	LONG $0xe0440f4c  // cmoveq       %rax, %r12
	LONG $0xf8440f48  // cmoveq       %rax, %rdi
	WORD $0xff49; BYTE $0xc2  // incq         %r10
	WORD $0xff49; BYTE $0xcd  // decq         %r13
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xfd59850f; WORD $0xffff  // jne          LBB0_830, $-679(%rip)
	LONG $0x000bf6e9; BYTE $0x00  // jmp          LBB0_940, $3062(%rip)
LBB0_852:
	WORD $0xf749; BYTE $0xda  // negq         %r10
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xfe1b890f; WORD $0xffff  // jns          LBB0_822, $-485(%rip)
	LONG $0x000c48e9; BYTE $0x00  // jmp          LBB0_954, $3144(%rip)
LBB0_850:
	LONG $0xffc4c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r12
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	LONG $0xfe3e830f; WORD $0xffff  // jae          LBB0_733, $-450(%rip)
	LONG $0x0000c9e9; BYTE $0x00  // jmp          LBB0_858, $201(%rip)
LBB0_851:
	LONG $0xffc6c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r14
	WORD $0x894d; BYTE $0xdd  // movq         %r11, %r13
	WORD $0x894d; BYTE $0xf8  // movq         %r15, %r8
	LONG $0xffc7c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r15
	LONG $0xffc3c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rbx
	LONG $0x4c3d8d48; WORD $0x0014; BYTE $0x00  // leaq         $5196(%rip), %rdi  /* LJTI0_4+0(%rip) */
	LONG $0xfff7cde9; BYTE $0xff  // jmp          LBB0_763, $-2099(%rip)
LBB0_853:
	WORD $0x894c; BYTE $0xd1  // movq         %r10, %rcx
	LONG $0xb84d2b48  // subq         $-72(%rbp), %rcx
	LONG $0xffbc0f4c  // bsfq         %rdi, %r15
	WORD $0x0149; BYTE $0xcf  // addq         %rcx, %r15
	WORD $0x0948; BYTE $0xde  // orq          %rbx, %rsi
	WORD $0x8948; BYTE $0xf9  // movq         %rdi, %rcx
	WORD $0x094c; BYTE $0xe9  // orq          %r13, %rcx
	LONG $0xfa48840f; WORD $0xffff  // je           LBB0_636, $-1464(%rip)
	LONG $0xfffab1e9; BYTE $0xff  // jmp          LBB0_812, $-1359(%rip)
LBB0_854:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xb8452b48  // subq         $-72(%rbp), %rax
	LONG $0xe1bc0f4c  // bsfq         %rcx, %r12
	WORD $0x0149; BYTE $0xc4  // addq         %rax, %r12
	WORD $0x0948; BYTE $0xfe  // orq          %rdi, %rsi
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xf8  // orq          %r15, %rax
	LONG $0xfbcf840f; WORD $0xffff  // je           LBB0_698, $-1073(%rip)
	LONG $0xfffc5de9; BYTE $0xff  // jmp          LBB0_827, $-931(%rip)
LBB0_855:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xb8452b48  // subq         $-72(%rbp), %rax
	LONG $0xe1bc0f4c  // bsfq         %rcx, %r12
	WORD $0x0149; BYTE $0xc4  // addq         %rax, %r12
	WORD $0x0948; BYTE $0xfe  // orq          %rdi, %rsi
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xf8  // orq          %r15, %rax
	LONG $0xfe11840f; WORD $0xffff  // je           LBB0_736, $-495(%rip)
LBB0_856:
	WORD $0x8944; BYTE $0xf8  // movl         %r15d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	WORD $0x148d; BYTE $0x00  // leal         (%rax,%rax), %edx
	WORD $0x0944; BYTE $0xfa  // orl          %r15d, %edx
	WORD $0xd789  // movl         %edx, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xcf21  // andl         %ecx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0xc701  // addl         %eax, %edi
	LONG $0xc7920f41  // setb         %r15b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xd721  // andl         %edx, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xfe21  // andl         %edi, %esi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xfde1850f; WORD $0xffff  // jne          LBB0_737, $-543(%rip)
LBB0_857:
	LONG $0x20c28349  // addq         $32, %r10
	LONG $0xe0c58349  // addq         $-32, %r13
LBB0_858:
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x0094850f; WORD $0x0000  // jne          LBB0_866, $148(%rip)
	WORD $0x894c; BYTE $0xe7  // movq         %r12, %rdi
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x00b6840f; WORD $0x0000  // je           LBB0_868, $182(%rip)
LBB0_860:
	LONG $0x014a8d49  // leaq         $1(%r10), %rcx
	LONG $0x12b60f41  // movzbl       (%r10), %edx
	WORD $0xfa80; BYTE $0x22  // cmpb         $34, %dl
	LONG $0x0053840f; WORD $0x0000  // je           LBB0_865, $83(%rip)
	LONG $0xff758d49  // leaq         $-1(%r13), %rsi
	WORD $0xfa80; BYTE $0x5c  // cmpb         $92, %dl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_863, $20(%rip)
	WORD $0x8949; BYTE $0xf5  // movq         %rsi, %r13
	WORD $0x8949; BYTE $0xca  // movq         %rcx, %r10
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_860, $-45(%rip)
	LONG $0x000084e9; BYTE $0x00  // jmp          LBB0_868, $132(%rip)
LBB0_863:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x007b840f; WORD $0x0000  // je           LBB0_868, $123(%rip)
	LONG $0xb04d0348  // addq         $-80(%rbp), %rcx
	LONG $0xffff8348  // cmpq         $-1, %rdi
	LONG $0xe1440f4c  // cmoveq       %rcx, %r12
	LONG $0xf9440f48  // cmoveq       %rcx, %rdi
	LONG $0x02c28349  // addq         $2, %r10
	LONG $0xfec58349  // addq         $-2, %r13
	WORD $0x894c; BYTE $0xee  // movq         %r13, %rsi
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xffa1850f; WORD $0xffff  // jne          LBB0_860, $-95(%rip)
	LONG $0x000052e9; BYTE $0x00  // jmp          LBB0_868, $82(%rip)
LBB0_865:
	LONG $0xb87d8b4c  // movq         $-72(%rbp), %r15
	WORD $0x294c; BYTE $0xf9  // subq         %r15, %rcx
	WORD $0x8949; BYTE $0xca  // movq         %rcx, %r10
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xa8758b4c  // movq         $-88(%rbp), %r14
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xc06d8b4c  // movq         $-64(%rbp), %r13
	LONG $0xf80b890f; WORD $0xffff  // jns          LBB0_795, $-2037(%rip)
	LONG $0x000a58e9; BYTE $0x00  // jmp          LBB0_939, $2648(%rip)
LBB0_866:
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x0025840f; WORD $0x0000  // je           LBB0_868, $37(%rip)
	LONG $0xb0458b48  // movq         $-80(%rbp), %rax
	WORD $0x014c; BYTE $0xd0  // addq         %r10, %rax
	LONG $0xfffc8349  // cmpq         $-1, %r12
	WORD $0x894c; BYTE $0xe7  // movq         %r12, %rdi
	LONG $0xe0440f4c  // cmoveq       %rax, %r12
	LONG $0xf8440f48  // cmoveq       %rax, %rdi
	WORD $0xff49; BYTE $0xc2  // incq         %r10
	WORD $0xff49; BYTE $0xcd  // decq         %r13
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xff4a850f; WORD $0xffff  // jne          LBB0_860, $-182(%rip)
LBB0_868:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0x000a2be9; BYTE $0x00  // jmp          LBB0_940, $2603(%rip)
LBB0_869:
	WORD $0x8949; BYTE $0x3b  // movq         %rdi, (%r11)
LBB0_870:
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0xffe7b1e9; BYTE $0xff  // jmp          LBB0_558, $-6223(%rip)
LBB0_955:
	LONG $0xf9c1c748; WORD $0xffff; BYTE $0xff  // movq         $-7, %rcx
	LONG $0xffe7a5e9; BYTE $0xff  // jmp          LBB0_558, $-6235(%rip)
LBB0_871:
	LONG $0x24448d49; BYTE $0x04  // leaq         $4(%r12), %rax
	LONG $0x00057ce9; BYTE $0x00  // jmp          LBB0_912, $1404(%rip)
LBB0_872:
	LONG $0xfffa8349  // cmpq         $-1, %r10
	LONG $0x000a850f; WORD $0x0000  // jne          LBB0_874, $10(%rip)
LBB0_873:
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	WORD $0x8949; BYTE $0xc7  // movq         %rax, %r15
LBB0_874:
	WORD $0x894d; BYTE $0x3b  // movq         %r15, (%r11)
	WORD $0x894c; BYTE $0xd1  // movq         %r10, %rcx
	LONG $0xffe77ce9; BYTE $0xff  // jmp          LBB0_558, $-6276(%rip)
LBB0_875:
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x0009f4e9; BYTE $0x00  // jmp          LBB0_943, $2548(%rip)
LBB0_876:
	WORD $0x894d; BYTE $0x23  // movq         %r12, (%r11)
	LONG $0xffe761e9; BYTE $0xff  // jmp          LBB0_557, $-6303(%rip)
LBB0_877:
	LONG $0x084d8b4d  // movq         $8(%r13), %r9
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	WORD $0x2949; BYTE $0xfe  // subq         %rdi, %r14
	LONG $0x20fe8349  // cmpq         $32, %r14
	LONG $0x0c0c8c0f; WORD $0x0000  // jl           LBB0_975, $3084(%rip)
	LONG $0xffffba41; WORD $0xffff  // movl         $4294967295, %r10d
	LONG $0x201c8d4f  // leaq         (%r8,%r12), %r11
	WORD $0x294d; BYTE $0xe1  // subq         %r12, %r9
	LONG $0x00001fbe; BYTE $0x00  // movl         $31, %esi
	WORD $0x3145; BYTE $0xf6  // xorl         %r14d, %r14d
	QUAD $0xffffb518056f0ff3  // movdqu       $-19176(%rip), %xmm0  /* LCPI0_3+0(%rip) */
	QUAD $0xffffb5200d6f0ff3  // movdqu       $-19168(%rip), %xmm1  /* LCPI0_4+0(%rip) */
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	LONG $0x000022e9; BYTE $0x00  // jmp          LBB0_879, $34(%rip)
LBB0_882:
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0xff85  // testl        %edi, %edi
	LONG $0x00a6850f; WORD $0x0000  // jne          LBB0_881, $166(%rip)
LBB0_883:
	LONG $0x20c68349  // addq         $32, %r14
	LONG $0x31448d49; BYTE $0xe0  // leaq         $-32(%r9,%rsi), %rax
	LONG $0xe0c68348  // addq         $-32, %rsi
	LONG $0x3ff88348  // cmpq         $63, %rax
	LONG $0x0b028e0f; WORD $0x0000  // jle          LBB0_884, $2818(%rip)
LBB0_879:
	LONG $0x6f0f43f3; WORD $0x3354; BYTE $0x01  // movdqu       $1(%r11,%r14), %xmm2
	LONG $0x6f0f43f3; WORD $0x335c; BYTE $0x11  // movdqu       $17(%r11,%r14), %xmm3
	LONG $0xe26f0f66  // movdqa       %xmm2, %xmm4
	LONG $0xe0740f66  // pcmpeqb      %xmm0, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0xe0740f66  // pcmpeqb      %xmm0, %xmm4
	LONG $0xfcd70f66  // pmovmskb     %xmm4, %edi
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xc7  // orq          %rax, %rdi
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xdad70f66  // pmovmskb     %xmm2, %ebx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	WORD $0x8948; BYTE $0xc3  // movq         %rax, %rbx
	WORD $0x094c; BYTE $0xfb  // orq          %r15, %rbx
	LONG $0xff8e840f; WORD $0xffff  // je           LBB0_882, $-114(%rip)
	WORD $0x8944; BYTE $0xfb  // movl         %r15d, %ebx
	WORD $0x3144; BYTE $0xd3  // xorl         %r10d, %ebx
	WORD $0xd821  // andl         %ebx, %eax
	WORD $0x1c8d; BYTE $0x00  // leal         (%rax,%rax), %ebx
	WORD $0x0944; BYTE $0xfb  // orl          %r15d, %ebx
	LONG $0xab928d41; WORD $0xaaaa; BYTE $0xaa  // leal         $-1431655765(%r10), %edx
	WORD $0xda31  // xorl         %ebx, %edx
	WORD $0xc221  // andl         %eax, %edx
	LONG $0xaaaae281; WORD $0xaaaa  // andl         $-1431655766, %edx
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	WORD $0xc201  // addl         %eax, %edx
	LONG $0xc7920f41  // setb         %r15b
	WORD $0xd201  // addl         %edx, %edx
	LONG $0x5555f281; WORD $0x5555  // xorl         $1431655765, %edx
	WORD $0xda21  // andl         %ebx, %edx
	WORD $0x3144; BYTE $0xd2  // xorl         %r10d, %edx
	WORD $0xd721  // andl         %edx, %edi
	WORD $0xff85  // testl        %edi, %edi
	LONG $0xff5a840f; WORD $0xffff  // je           LBB0_883, $-166(%rip)
LBB0_881:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	WORD $0x014d; BYTE $0xf3  // addq         %r14, %r11
	WORD $0x294d; BYTE $0xc3  // subq         %r8, %r11
	LONG $0x02c38349  // addq         $2, %r11
	LONG $0xd0458b48  // movq         $-48(%rbp), %rax
	WORD $0x894c; BYTE $0x18  // movq         %r11, (%rax)
	WORD $0x894c; BYTE $0xe1  // movq         %r12, %rcx
	LONG $0xffe656e9; BYTE $0xff  // jmp          LBB0_558, $-6570(%rip)
LBB0_887:
	QUAD $0x555555555555bb49; WORD $0x5555  // movabsq      $6148914691236517205, %r11
	LONG $0x08458b49  // movq         $8(%r13), %rax
	WORD $0x2948; BYTE $0xf8  // subq         %rdi, %rax
	WORD $0x0149; BYTE $0xf8  // addq         %rdi, %r8
	WORD $0x3145; BYTE $0xff  // xorl         %r15d, %r15d
	QUAD $0xffb417156f0f44f3; BYTE $0xff  // movdqu       $-19433(%rip), %xmm10  /* LCPI0_3+0(%rip) */
	QUAD $0xffffb41f0d6f0ff3  // movdqu       $-19425(%rip), %xmm1  /* LCPI0_4+0(%rip) */
	LONG $0x760f4566; BYTE $0xc9  // pcmpeqd      %xmm9, %xmm9
	QUAD $0xffffb4321d6f0ff3  // movdqu       $-19406(%rip), %xmm3  /* LCPI0_6+0(%rip) */
	QUAD $0xffffb43a256f0ff3  // movdqu       $-19398(%rip), %xmm4  /* LCPI0_7+0(%rip) */
	QUAD $0x333333333333bd49; WORD $0x3333  // movabsq      $3689348814741910323, %r13
	LONG $0xef0f4566; BYTE $0xc0  // pxor         %xmm8, %xmm8
	WORD $0xd231  // xorl         %edx, %edx
	LONG $0x98558948  // movq         %rdx, $-104(%rbp)
	WORD $0x3145; BYTE $0xf6  // xorl         %r14d, %r14d
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0xc8458948  // movq         %rax, $-56(%rbp)
	LONG $0x907d894c  // movq         %r15, $-112(%rbp)
	LONG $0x02758c0f; WORD $0x0000  // jl           LBB0_896, $629(%rip)
LBB0_890:
	LONG $0x6f0f41f3; BYTE $0x00  // movdqu       (%r8), %xmm0
	LONG $0x6f0f41f3; WORD $0x1068  // movdqu       $16(%r8), %xmm5
	LONG $0x6f0f41f3; WORD $0x2078  // movdqu       $32(%r8), %xmm7
	LONG $0x6f0f41f3; WORD $0x3070  // movdqu       $48(%r8), %xmm6
	LONG $0xd06f0f66  // movdqa       %xmm0, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xd70f4466; BYTE $0xfa  // pmovmskb     %xmm2, %r15d
	LONG $0xd56f0f66  // movdqa       %xmm5, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd76f0f66  // movdqa       %xmm7, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xd2d70f66  // pmovmskb     %xmm2, %edx
	LONG $0xd66f0f66  // movdqa       %xmm6, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xd70f4466; BYTE $0xca  // pmovmskb     %xmm2, %r9d
	LONG $0x30e1c149  // shlq         $48, %r9
	LONG $0x20e2c148  // shlq         $32, %rdx
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0949; BYTE $0xff  // orq          %rdi, %r15
	WORD $0x0949; BYTE $0xd7  // orq          %rdx, %r15
	WORD $0x094d; BYTE $0xcf  // orq          %r9, %r15
	LONG $0xd06f0f66  // movdqa       %xmm0, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd56f0f66  // movdqa       %xmm5, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xd2d70f66  // pmovmskb     %xmm2, %edx
	LONG $0xd76f0f66  // movdqa       %xmm7, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0xd66f0f66  // movdqa       %xmm6, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xdad70f66  // pmovmskb     %xmm2, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e0c148  // shlq         $32, %rax
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0948; BYTE $0xd7  // orq          %rdx, %rdi
	WORD $0x0948; BYTE $0xc7  // orq          %rax, %rdi
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	LONG $0x98558b48  // movq         $-104(%rbp), %rdx
	WORD $0x0948; BYTE $0xd0  // orq          %rdx, %rax
	LONG $0x0043840f; WORD $0x0000  // je           LBB0_892, $67(%rip)
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x001c8d48  // leaq         (%rax,%rax), %rbx
	WORD $0x0948; BYTE $0xd3  // orq          %rdx, %rbx
	WORD $0x8948; BYTE $0xda  // movq         %rbx, %rdx
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x3148; BYTE $0xf2  // xorq         %rsi, %rdx
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x2148; BYTE $0xd7  // andq         %rdx, %rdi
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0x0148; BYTE $0xc7  // addq         %rax, %rdi
	WORD $0x920f; BYTE $0xc2  // setb         %dl
	LONG $0x98558948  // movq         %rdx, $-104(%rbp)
	WORD $0x0148; BYTE $0xff  // addq         %rdi, %rdi
	WORD $0x314c; BYTE $0xdf  // xorq         %r11, %rdi
	WORD $0x2148; BYTE $0xdf  // andq         %rbx, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	LONG $0x00000de9; BYTE $0x00  // jmp          LBB0_893, $13(%rip)
LBB0_892:
	LONG $0xffc7c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rdi
	WORD $0xc031  // xorl         %eax, %eax
	LONG $0x98458948  // movq         %rax, $-104(%rbp)
LBB0_893:
	LONG $0x90458b48  // movq         $-112(%rbp), %rax
	WORD $0x214c; BYTE $0xff  // andq         %r15, %rdi
	LONG $0x6e0f4866; BYTE $0xd7  // movq         %rdi, %xmm2
	LONG $0x3a0f4166; WORD $0xd144; BYTE $0x00  // pclmulqdq    $0, %xmm9, %xmm2
	LONG $0x7e0f4966; BYTE $0xd7  // movq         %xmm2, %r15
	WORD $0x3149; BYTE $0xc7  // xorq         %rax, %r15
	LONG $0xd06f0f66  // movdqa       %xmm0, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd56f0f66  // movdqa       %xmm5, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0xd76f0f66  // movdqa       %xmm7, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xd2d70f66  // pmovmskb     %xmm2, %edx
	LONG $0xd66f0f66  // movdqa       %xmm6, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xdad70f66  // pmovmskb     %xmm2, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e2c148  // shlq         $32, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc7  // orq          %rax, %rdi
	WORD $0x0948; BYTE $0xd7  // orq          %rdx, %rdi
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x894d; BYTE $0xf9  // movq         %r15, %r9
	WORD $0xf749; BYTE $0xd1  // notq         %r9
	WORD $0x214c; BYTE $0xcf  // andq         %r9, %rdi
	LONG $0xc4740f66  // pcmpeqb      %xmm4, %xmm0
	LONG $0xd0d70f66  // pmovmskb     %xmm0, %edx
	LONG $0xec740f66  // pcmpeqb      %xmm4, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xfc740f66  // pcmpeqb      %xmm4, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xf4740f66  // pcmpeqb      %xmm4, %xmm6
	LONG $0xc6d70f66  // pmovmskb     %xmm6, %eax
	LONG $0x30e0c148  // shlq         $48, %rax
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	WORD $0x0948; BYTE $0xf2  // orq          %rsi, %rdx
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	QUAD $0x0f0f0f0f0f0fbb48; WORD $0x0f0f  // movabsq      $1085102592571150095, %rbx
	WORD $0x214c; BYTE $0xca  // andq         %r9, %rdx
	LONG $0x005d840f; WORD $0x0000  // je           LBB0_888, $93(%rip)
LBB0_894:
	LONG $0xff4a8d4c  // leaq         $-1(%rdx), %r9
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0xd148; BYTE $0xee  // shrq         %rsi
	WORD $0x214c; BYTE $0xde  // andq         %r11, %rsi
	WORD $0x2948; BYTE $0xf0  // subq         %rsi, %rax
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0x214c; BYTE $0xee  // andq         %r13, %rsi
	LONG $0x02e8c148  // shrq         $2, %rax
	WORD $0x214c; BYTE $0xe8  // andq         %r13, %rax
	WORD $0x0148; BYTE $0xf0  // addq         %rsi, %rax
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	LONG $0x04eec148  // shrq         $4, %rsi
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	WORD $0x2148; BYTE $0xde  // andq         %rbx, %rsi
	QUAD $0x010101010101b848; WORD $0x0101  // movabsq      $72340172838076673, %rax
	LONG $0xf0af0f48  // imulq        %rax, %rsi
	LONG $0x38eec148  // shrq         $56, %rsi
	WORD $0x014c; BYTE $0xf6  // addq         %r14, %rsi
	WORD $0x394c; BYTE $0xd6  // cmpq         %r10, %rsi
	LONG $0x0607860f; WORD $0x0000  // jbe          LBB0_938, $1543(%rip)
	WORD $0xff49; BYTE $0xc2  // incq         %r10
	WORD $0x214c; BYTE $0xca  // andq         %r9, %rdx
	LONG $0xffa3850f; WORD $0xffff  // jne          LBB0_894, $-93(%rip)
LBB0_888:
	LONG $0x3fffc149  // sarq         $63, %r15
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0xd148; BYTE $0xe8  // shrq         %rax
	WORD $0x214c; BYTE $0xd8  // andq         %r11, %rax
	WORD $0x2948; BYTE $0xc7  // subq         %rax, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x214c; BYTE $0xe8  // andq         %r13, %rax
	LONG $0x02efc148  // shrq         $2, %rdi
	WORD $0x214c; BYTE $0xef  // andq         %r13, %rdi
	WORD $0x0148; BYTE $0xc7  // addq         %rax, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	LONG $0x04e8c148  // shrq         $4, %rax
	WORD $0x0148; BYTE $0xf8  // addq         %rdi, %rax
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	QUAD $0x010101010101ba48; WORD $0x0101  // movabsq      $72340172838076673, %rdx
	LONG $0xc2af0f48  // imulq        %rdx, %rax
	LONG $0x38e8c148  // shrq         $56, %rax
	WORD $0x0149; BYTE $0xc6  // addq         %rax, %r14
	LONG $0x40c08349  // addq         $64, %r8
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	LONG $0xc0c08348  // addq         $-64, %rax
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0xc8458948  // movq         %rax, $-56(%rbp)
	LONG $0x907d894c  // movq         %r15, $-112(%rbp)
	LONG $0xfd8b8d0f; WORD $0xffff  // jge          LBB0_890, $-629(%rip)
LBB0_896:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x082e8e0f; WORD $0x0000  // jle          LBB0_976, $2094(%rip)
	QUAD $0xffff70857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-144(%rbp)
	QUAD $0xffff60857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-160(%rbp)
	QUAD $0xffff50857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-176(%rbp)
	QUAD $0xffff40857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-192(%rbp)
	WORD $0x8944; BYTE $0xc0  // movl         %r8d, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000fc13d; BYTE $0x00  // cmpl         $4033, %eax
	LONG $0xfd4b820f; WORD $0xffff  // jb           LBB0_890, $-693(%rip)
	LONG $0xc87d8348; BYTE $0x20  // cmpq         $32, $-56(%rbp)
	LONG $0x0031820f; WORD $0x0000  // jb           LBB0_900, $49(%rip)
	LONG $0x00100f41  // movups       (%r8), %xmm0
	LONG $0x4085110f; WORD $0xffff; BYTE $0xff  // movups       %xmm0, $-192(%rbp)
	LONG $0x6f0f41f3; WORD $0x1040  // movdqu       $16(%r8), %xmm0
	QUAD $0xffffff50857f0ff3  // movdqu       %xmm0, $-176(%rbp)
	LONG $0x20c08349  // addq         $32, %r8
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	LONG $0xe0788d48  // leaq         $-32(%rax), %rdi
	LONG $0x60b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-160(%rbp), %rsi
	LONG $0x00000be9; BYTE $0x00  // jmp          LBB0_901, $11(%rip)
LBB0_900:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
LBB0_901:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x005c820f; WORD $0x0000  // jb           LBB0_902, $92(%rip)
	LONG $0x6f0f41f3; BYTE $0x00  // movdqu       (%r8), %xmm0
	LONG $0x067f0ff3  // movdqu       %xmm0, (%rsi)
	LONG $0x10c08349  // addq         $16, %r8
	LONG $0x10c68348  // addq         $16, %rsi
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0x0047830f; WORD $0x0000  // jae          LBB0_907, $71(%rip)
LBB0_903:
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0x00598c0f; WORD $0x0000  // jl           LBB0_904, $89(%rip)
LBB0_908:
	WORD $0x8b41; BYTE $0x00  // movl         (%r8), %eax
	WORD $0x0689  // movl         %eax, (%rsi)
	LONG $0x04c08349  // addq         $4, %r8
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0xfcc78348  // addq         $-4, %rdi
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x0048830f; WORD $0x0000  // jae          LBB0_909, $72(%rip)
LBB0_905:
	WORD $0x894c; BYTE $0xc2  // movq         %r8, %rdx
	LONG $0x40858d4c; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %r8
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x005b850f; WORD $0x0000  // jne          LBB0_910, $91(%rip)
	LONG $0xfffc9ee9; BYTE $0xff  // jmp          LBB0_890, $-866(%rip)
LBB0_902:
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0xffb9820f; WORD $0xffff  // jb           LBB0_903, $-71(%rip)
LBB0_907:
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	WORD $0x8948; BYTE $0x06  // movq         %rax, (%rsi)
	LONG $0x08c08349  // addq         $8, %r8
	LONG $0x08c68348  // addq         $8, %rsi
	LONG $0xf8c78348  // addq         $-8, %rdi
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0xffa78d0f; WORD $0xffff  // jge          LBB0_908, $-89(%rip)
LBB0_904:
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0xffb8820f; WORD $0xffff  // jb           LBB0_905, $-72(%rip)
LBB0_909:
	LONG $0x00b70f41  // movzwl       (%r8), %eax
	WORD $0x8966; BYTE $0x06  // movw         %ax, (%rsi)
	LONG $0x02c08349  // addq         $2, %r8
	LONG $0x02c68348  // addq         $2, %rsi
	LONG $0xfec78348  // addq         $-2, %rdi
	WORD $0x894c; BYTE $0xc2  // movq         %r8, %rdx
	LONG $0x40858d4c; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %r8
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xfc48840f; WORD $0xffff  // je           LBB0_890, $-952(%rip)
LBB0_910:
	WORD $0x028a  // movb         (%rdx), %al
	WORD $0x0688  // movb         %al, (%rsi)
	LONG $0x40858d4c; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %r8
	LONG $0xfffc38e9; BYTE $0xff  // jmp          LBB0_890, $-968(%rip)
LBB0_911:
	LONG $0x24448d49; BYTE $0x05  // leaq         $5(%r12), %rax
LBB0_912:
	LONG $0x08453b49  // cmpq         $8(%r13), %rax
	LONG $0xe215870f; WORD $0xffff  // ja           LBB0_558, $-7659(%rip)
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	WORD $0x894c; BYTE $0xe1  // movq         %r12, %rcx
	LONG $0xffe20ae9; BYTE $0xff  // jmp          LBB0_558, $-7670(%rip)
LBB0_914:
	QUAD $0x555555555555bb49; WORD $0x5555  // movabsq      $6148914691236517205, %r11
	LONG $0x08458b49  // movq         $8(%r13), %rax
	WORD $0x2948; BYTE $0xf8  // subq         %rdi, %rax
	WORD $0x0149; BYTE $0xf8  // addq         %rdi, %r8
	WORD $0xd231  // xorl         %edx, %edx
	LONG $0x90558948  // movq         %rdx, $-112(%rbp)
	QUAD $0xffafc8156f0f44f3; BYTE $0xff  // movdqu       $-20536(%rip), %xmm10  /* LCPI0_3+0(%rip) */
	QUAD $0xffffafd00d6f0ff3  // movdqu       $-20528(%rip), %xmm1  /* LCPI0_4+0(%rip) */
	LONG $0x760f4566; BYTE $0xc9  // pcmpeqd      %xmm9, %xmm9
	QUAD $0xffffafd31d6f0ff3  // movdqu       $-20525(%rip), %xmm3  /* LCPI0_5+0(%rip) */
	QUAD $0xffffaf9b256f0ff3  // movdqu       $-20581(%rip), %xmm4  /* LCPI0_2+0(%rip) */
	QUAD $0x333333333333bd49; WORD $0x3333  // movabsq      $3689348814741910323, %r13
	LONG $0xef0f4566; BYTE $0xc0  // pxor         %xmm8, %xmm8
	WORD $0xd231  // xorl         %edx, %edx
	LONG $0x98558948  // movq         %rdx, $-104(%rbp)
	WORD $0x3145; BYTE $0xf6  // xorl         %r14d, %r14d
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0xc8458948  // movq         %rax, $-56(%rbp)
	LONG $0x02728c0f; WORD $0x0000  // jl           LBB0_923, $626(%rip)
LBB0_917:
	LONG $0x6f0f41f3; BYTE $0x00  // movdqu       (%r8), %xmm0
	LONG $0x6f0f41f3; WORD $0x1068  // movdqu       $16(%r8), %xmm5
	LONG $0x6f0f41f3; WORD $0x2078  // movdqu       $32(%r8), %xmm7
	LONG $0x6f0f41f3; WORD $0x3070  // movdqu       $48(%r8), %xmm6
	LONG $0xd06f0f66  // movdqa       %xmm0, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xd70f4466; BYTE $0xfa  // pmovmskb     %xmm2, %r15d
	LONG $0xd56f0f66  // movdqa       %xmm5, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd76f0f66  // movdqa       %xmm7, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xd2d70f66  // pmovmskb     %xmm2, %edx
	LONG $0xd66f0f66  // movdqa       %xmm6, %xmm2
	LONG $0x740f4166; BYTE $0xd2  // pcmpeqb      %xmm10, %xmm2
	LONG $0xd70f4466; BYTE $0xca  // pmovmskb     %xmm2, %r9d
	LONG $0x30e1c149  // shlq         $48, %r9
	LONG $0x20e2c148  // shlq         $32, %rdx
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0949; BYTE $0xff  // orq          %rdi, %r15
	WORD $0x0949; BYTE $0xd7  // orq          %rdx, %r15
	WORD $0x094d; BYTE $0xcf  // orq          %r9, %r15
	LONG $0xd06f0f66  // movdqa       %xmm0, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd56f0f66  // movdqa       %xmm5, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xd2d70f66  // pmovmskb     %xmm2, %edx
	LONG $0xd76f0f66  // movdqa       %xmm7, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0xd66f0f66  // movdqa       %xmm6, %xmm2
	LONG $0xd1740f66  // pcmpeqb      %xmm1, %xmm2
	LONG $0xdad70f66  // pmovmskb     %xmm2, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e0c148  // shlq         $32, %rax
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0948; BYTE $0xd7  // orq          %rdx, %rdi
	WORD $0x0948; BYTE $0xc7  // orq          %rax, %rdi
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	LONG $0x98558b48  // movq         $-104(%rbp), %rdx
	WORD $0x0948; BYTE $0xd0  // orq          %rdx, %rax
	LONG $0x0043840f; WORD $0x0000  // je           LBB0_919, $67(%rip)
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	LONG $0x001c8d48  // leaq         (%rax,%rax), %rbx
	WORD $0x0948; BYTE $0xd3  // orq          %rdx, %rbx
	WORD $0x8948; BYTE $0xda  // movq         %rbx, %rdx
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x3148; BYTE $0xf2  // xorq         %rsi, %rdx
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x2148; BYTE $0xd7  // andq         %rdx, %rdi
	WORD $0xd231  // xorl         %edx, %edx
	WORD $0x0148; BYTE $0xc7  // addq         %rax, %rdi
	WORD $0x920f; BYTE $0xc2  // setb         %dl
	LONG $0x98558948  // movq         %rdx, $-104(%rbp)
	WORD $0x0148; BYTE $0xff  // addq         %rdi, %rdi
	WORD $0x314c; BYTE $0xdf  // xorq         %r11, %rdi
	WORD $0x2148; BYTE $0xdf  // andq         %rbx, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	LONG $0x00000de9; BYTE $0x00  // jmp          LBB0_920, $13(%rip)
LBB0_919:
	LONG $0xffc7c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rdi
	WORD $0xc031  // xorl         %eax, %eax
	LONG $0x98458948  // movq         %rax, $-104(%rbp)
LBB0_920:
	WORD $0x214c; BYTE $0xff  // andq         %r15, %rdi
	LONG $0x6e0f4866; BYTE $0xd7  // movq         %rdi, %xmm2
	LONG $0x3a0f4166; WORD $0xd144; BYTE $0x00  // pclmulqdq    $0, %xmm9, %xmm2
	LONG $0x7e0f4966; BYTE $0xd7  // movq         %xmm2, %r15
	LONG $0x907d334c  // xorq         $-112(%rbp), %r15
	LONG $0xd06f0f66  // movdqa       %xmm0, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xfad70f66  // pmovmskb     %xmm2, %edi
	LONG $0xd56f0f66  // movdqa       %xmm5, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xc2d70f66  // pmovmskb     %xmm2, %eax
	LONG $0xd76f0f66  // movdqa       %xmm7, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xd2d70f66  // pmovmskb     %xmm2, %edx
	LONG $0xd66f0f66  // movdqa       %xmm6, %xmm2
	LONG $0xd3740f66  // pcmpeqb      %xmm3, %xmm2
	LONG $0xdad70f66  // pmovmskb     %xmm2, %ebx
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e2c148  // shlq         $32, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc7  // orq          %rax, %rdi
	WORD $0x0948; BYTE $0xd7  // orq          %rdx, %rdi
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x894d; BYTE $0xf9  // movq         %r15, %r9
	WORD $0xf749; BYTE $0xd1  // notq         %r9
	WORD $0x214c; BYTE $0xcf  // andq         %r9, %rdi
	LONG $0xc4740f66  // pcmpeqb      %xmm4, %xmm0
	LONG $0xd0d70f66  // pmovmskb     %xmm0, %edx
	LONG $0xec740f66  // pcmpeqb      %xmm4, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xfc740f66  // pcmpeqb      %xmm4, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xf4740f66  // pcmpeqb      %xmm4, %xmm6
	LONG $0xc6d70f66  // pmovmskb     %xmm6, %eax
	LONG $0x30e0c148  // shlq         $48, %rax
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	WORD $0x0948; BYTE $0xf2  // orq          %rsi, %rdx
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	QUAD $0x0f0f0f0f0f0fbb48; WORD $0x0f0f  // movabsq      $1085102592571150095, %rbx
	WORD $0x214c; BYTE $0xca  // andq         %r9, %rdx
	LONG $0x005d840f; WORD $0x0000  // je           LBB0_915, $93(%rip)
LBB0_921:
	LONG $0xff4a8d4c  // leaq         $-1(%rdx), %r9
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0x2148; BYTE $0xf8  // andq         %rdi, %rax
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0xd148; BYTE $0xee  // shrq         %rsi
	WORD $0x214c; BYTE $0xde  // andq         %r11, %rsi
	WORD $0x2948; BYTE $0xf0  // subq         %rsi, %rax
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	WORD $0x214c; BYTE $0xee  // andq         %r13, %rsi
	LONG $0x02e8c148  // shrq         $2, %rax
	WORD $0x214c; BYTE $0xe8  // andq         %r13, %rax
	WORD $0x0148; BYTE $0xf0  // addq         %rsi, %rax
	WORD $0x8948; BYTE $0xc6  // movq         %rax, %rsi
	LONG $0x04eec148  // shrq         $4, %rsi
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	WORD $0x2148; BYTE $0xde  // andq         %rbx, %rsi
	QUAD $0x010101010101b848; WORD $0x0101  // movabsq      $72340172838076673, %rax
	LONG $0xf0af0f48  // imulq        %rax, %rsi
	LONG $0x38eec148  // shrq         $56, %rsi
	WORD $0x014c; BYTE $0xf6  // addq         %r14, %rsi
	WORD $0x394c; BYTE $0xd6  // cmpq         %r10, %rsi
	LONG $0x01bf860f; WORD $0x0000  // jbe          LBB0_938, $447(%rip)
	WORD $0xff49; BYTE $0xc2  // incq         %r10
	WORD $0x214c; BYTE $0xca  // andq         %r9, %rdx
	LONG $0xffa3850f; WORD $0xffff  // jne          LBB0_921, $-93(%rip)
LBB0_915:
	LONG $0x3fffc149  // sarq         $63, %r15
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0xd148; BYTE $0xe8  // shrq         %rax
	WORD $0x214c; BYTE $0xd8  // andq         %r11, %rax
	WORD $0x2948; BYTE $0xc7  // subq         %rax, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	WORD $0x214c; BYTE $0xe8  // andq         %r13, %rax
	LONG $0x02efc148  // shrq         $2, %rdi
	WORD $0x214c; BYTE $0xef  // andq         %r13, %rdi
	WORD $0x0148; BYTE $0xc7  // addq         %rax, %rdi
	WORD $0x8948; BYTE $0xf8  // movq         %rdi, %rax
	LONG $0x04e8c148  // shrq         $4, %rax
	WORD $0x0148; BYTE $0xf8  // addq         %rdi, %rax
	WORD $0x2148; BYTE $0xd8  // andq         %rbx, %rax
	QUAD $0x010101010101ba48; WORD $0x0101  // movabsq      $72340172838076673, %rdx
	LONG $0xc2af0f48  // imulq        %rdx, %rax
	LONG $0x38e8c148  // shrq         $56, %rax
	WORD $0x0149; BYTE $0xc6  // addq         %rax, %r14
	LONG $0x40c08349  // addq         $64, %r8
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	LONG $0xc0c08348  // addq         $-64, %rax
	LONG $0x907d894c  // movq         %r15, $-112(%rbp)
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0xc8458948  // movq         %rax, $-56(%rbp)
	LONG $0xfd8e8d0f; WORD $0xffff  // jge          LBB0_917, $-626(%rip)
LBB0_923:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x03e68e0f; WORD $0x0000  // jle          LBB0_976, $998(%rip)
	QUAD $0xffff70857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-144(%rbp)
	QUAD $0xffff60857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-160(%rbp)
	QUAD $0xffff50857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-176(%rbp)
	QUAD $0xffff40857f0f44f3; BYTE $0xff  // movdqu       %xmm8, $-192(%rbp)
	WORD $0x8944; BYTE $0xc0  // movl         %r8d, %eax
	LONG $0x000fff25; BYTE $0x00  // andl         $4095, %eax
	LONG $0x000fc13d; BYTE $0x00  // cmpl         $4033, %eax
	LONG $0xfd4e820f; WORD $0xffff  // jb           LBB0_917, $-690(%rip)
	LONG $0xc87d8348; BYTE $0x20  // cmpq         $32, $-56(%rbp)
	LONG $0x0031820f; WORD $0x0000  // jb           LBB0_927, $49(%rip)
	LONG $0x00100f41  // movups       (%r8), %xmm0
	LONG $0x4085110f; WORD $0xffff; BYTE $0xff  // movups       %xmm0, $-192(%rbp)
	LONG $0x6f0f41f3; WORD $0x1040  // movdqu       $16(%r8), %xmm0
	QUAD $0xffffff50857f0ff3  // movdqu       %xmm0, $-176(%rbp)
	LONG $0x20c08349  // addq         $32, %r8
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	LONG $0xe0788d48  // leaq         $-32(%rax), %rdi
	LONG $0x60b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-160(%rbp), %rsi
	LONG $0x00000be9; BYTE $0x00  // jmp          LBB0_928, $11(%rip)
LBB0_927:
	LONG $0x40b58d48; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %rsi
	LONG $0xc87d8b48  // movq         $-56(%rbp), %rdi
LBB0_928:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x005c820f; WORD $0x0000  // jb           LBB0_929, $92(%rip)
	LONG $0x6f0f41f3; BYTE $0x00  // movdqu       (%r8), %xmm0
	LONG $0x067f0ff3  // movdqu       %xmm0, (%rsi)
	LONG $0x10c08349  // addq         $16, %r8
	LONG $0x10c68348  // addq         $16, %rsi
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0x0047830f; WORD $0x0000  // jae          LBB0_934, $71(%rip)
LBB0_930:
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0x00598c0f; WORD $0x0000  // jl           LBB0_931, $89(%rip)
LBB0_935:
	WORD $0x8b41; BYTE $0x00  // movl         (%r8), %eax
	WORD $0x0689  // movl         %eax, (%rsi)
	LONG $0x04c08349  // addq         $4, %r8
	LONG $0x04c68348  // addq         $4, %rsi
	LONG $0xfcc78348  // addq         $-4, %rdi
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0x0048830f; WORD $0x0000  // jae          LBB0_936, $72(%rip)
LBB0_932:
	WORD $0x894c; BYTE $0xc2  // movq         %r8, %rdx
	LONG $0x40858d4c; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %r8
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x005b850f; WORD $0x0000  // jne          LBB0_937, $91(%rip)
	LONG $0xfffca1e9; BYTE $0xff  // jmp          LBB0_917, $-863(%rip)
LBB0_929:
	LONG $0x08ff8348  // cmpq         $8, %rdi
	LONG $0xffb9820f; WORD $0xffff  // jb           LBB0_930, $-71(%rip)
LBB0_934:
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	WORD $0x8948; BYTE $0x06  // movq         %rax, (%rsi)
	LONG $0x08c08349  // addq         $8, %r8
	LONG $0x08c68348  // addq         $8, %rsi
	LONG $0xf8c78348  // addq         $-8, %rdi
	LONG $0x04ff8348  // cmpq         $4, %rdi
	LONG $0xffa78d0f; WORD $0xffff  // jge          LBB0_935, $-89(%rip)
LBB0_931:
	LONG $0x02ff8348  // cmpq         $2, %rdi
	LONG $0xffb8820f; WORD $0xffff  // jb           LBB0_932, $-72(%rip)
LBB0_936:
	LONG $0x00b70f41  // movzwl       (%r8), %eax
	WORD $0x8966; BYTE $0x06  // movw         %ax, (%rsi)
	LONG $0x02c08349  // addq         $2, %r8
	LONG $0x02c68348  // addq         $2, %rsi
	LONG $0xfec78348  // addq         $-2, %rdi
	WORD $0x894c; BYTE $0xc2  // movq         %r8, %rdx
	LONG $0x40858d4c; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %r8
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xfc4b840f; WORD $0xffff  // je           LBB0_917, $-949(%rip)
LBB0_937:
	WORD $0x028a  // movb         (%rdx), %al
	WORD $0x0688  // movb         %al, (%rsi)
	LONG $0x40858d4c; WORD $0xffff; BYTE $0xff  // leaq         $-192(%rbp), %r8
	LONG $0xfffc3be9; BYTE $0xff  // jmp          LBB0_917, $-965(%rip)
LBB0_938:
	LONG $0xc0758b48  // movq         $-64(%rbp), %rsi
	LONG $0x08468b48  // movq         $8(%rsi), %rax
	LONG $0xcabc0f48  // bsfq         %rdx, %rcx
	LONG $0xc84d2b48  // subq         $-56(%rbp), %rcx
	LONG $0x01448d48; BYTE $0x01  // leaq         $1(%rcx,%rax), %rax
	LONG $0xd0558b48  // movq         $-48(%rbp), %rdx
	WORD $0x8948; BYTE $0x02  // movq         %rax, (%rdx)
	LONG $0x084e8b48  // movq         $8(%rsi), %rcx
	WORD $0x3948; BYTE $0xc8  // cmpq         %rcx, %rax
	LONG $0xc1470f48  // cmovaq       %rcx, %rax
	WORD $0x8948; BYTE $0x02  // movq         %rax, (%rdx)
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	LONG $0xe0470f4c  // cmovaq       %rax, %r12
	WORD $0x894c; BYTE $0xe1  // movq         %r12, %rcx
	LONG $0xffdd9fe9; BYTE $0xff  // jmp          LBB0_558, $-8801(%rip)
LBB0_939:
	LONG $0xfffa8349  // cmpq         $-1, %r10
	LONG $0x000b850f; WORD $0x0000  // jne          LBB0_941, $11(%rip)
LBB0_940:
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	LONG $0x88658b4c  // movq         $-120(%rbp), %r12
LBB0_941:
	WORD $0x894d; BYTE $0x23  // movq         %r12, (%r11)
	WORD $0x894c; BYTE $0xd1  // movq         %r10, %rcx
	LONG $0xffdd7fe9; BYTE $0xff  // jmp          LBB0_558, $-8833(%rip)
LBB0_942:
	WORD $0x894c; BYTE $0xd1  // movq         %r10, %rcx
LBB0_943:
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x0149; BYTE $0xc9  // addq         %rcx, %r9
LBB0_944:
	LONG $0xd0458b48  // movq         $-48(%rbp), %rax
	WORD $0x894c; BYTE $0x08  // movq         %r9, (%rax)
	LONG $0xffdd63e9; BYTE $0xff  // jmp          LBB0_557, $-8861(%rip)
LBB0_956:
	WORD $0x8949; BYTE $0x13  // movq         %rdx, (%r11)
	LONG $0xffdd62e9; BYTE $0xff  // jmp          LBB0_558, $-8862(%rip)
LBB0_950:
	LONG $0x38b5894c; WORD $0xffff; BYTE $0xff  // movq         %r14, $-200(%rbp)
LBB0_951:
	LONG $0xd0458b48  // movq         $-48(%rbp), %rax
	LONG $0x388d8b48; WORD $0xffff; BYTE $0xff  // movq         $-200(%rbp), %rcx
	WORD $0x8948; BYTE $0x08  // movq         %rcx, (%rax)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0xffdd41e9; BYTE $0xff  // jmp          LBB0_558, $-8895(%rip)
LBB0_952:
	WORD $0x294c; BYTE $0xc7  // subq         %r8, %rdi
	LONG $0xffde90e9; BYTE $0xff  // jmp          LBB0_578, $-8560(%rip)
LBB0_953:
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
LBB0_954:
	WORD $0x294d; BYTE $0xd1  // subq         %r10, %r9
	LONG $0xffffb4e9; BYTE $0xff  // jmp          LBB0_944, $-76(%rip)
LBB0_957:
	WORD $0x894d; BYTE $0x0b  // movq         %r9, (%r11)
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x243c8041; BYTE $0x74  // cmpb         $116, (%r12)
	LONG $0xdd15850f; WORD $0xffff  // jne          LBB0_558, $-8939(%rip)
	LONG $0x01418d49  // leaq         $1(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x7201  // cmpb         $114, $1(%r15,%r9)
	LONG $0xdd02850f; WORD $0xffff  // jne          LBB0_558, $-8958(%rip)
	LONG $0x02418d49  // leaq         $2(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x7502  // cmpb         $117, $2(%r15,%r9)
	LONG $0xdcef850f; WORD $0xffff  // jne          LBB0_558, $-8977(%rip)
	LONG $0x03418d49  // leaq         $3(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x6503  // cmpb         $101, $3(%r15,%r9)
	LONG $0xdcdc850f; WORD $0xffff  // jne          LBB0_558, $-8996(%rip)
	LONG $0x0000a0e9; BYTE $0x00  // jmp          LBB0_786, $160(%rip)
LBB0_961:
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	WORD $0xfa80; BYTE $0x61  // cmpb         $97, %dl
	LONG $0xdcc7850f; WORD $0xffff  // jne          LBB0_558, $-9017(%rip)
	LONG $0x02418d49  // leaq         $2(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x6c02  // cmpb         $108, $2(%r15,%r9)
	LONG $0xdcb4850f; WORD $0xffff  // jne          LBB0_558, $-9036(%rip)
	LONG $0x03418d49  // leaq         $3(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x7303  // cmpb         $115, $3(%r15,%r9)
	LONG $0xdca1850f; WORD $0xffff  // jne          LBB0_558, $-9055(%rip)
	LONG $0x04418d49  // leaq         $4(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x6504  // cmpb         $101, $4(%r15,%r9)
	LONG $0xdc8e850f; WORD $0xffff  // jne          LBB0_558, $-9074(%rip)
	LONG $0x05c18349  // addq         $5, %r9
	LONG $0x000052e9; BYTE $0x00  // jmp          LBB0_966, $82(%rip)
LBB0_782:
	WORD $0x894d; BYTE $0x0b  // movq         %r9, (%r11)
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x243c8041; BYTE $0x6e  // cmpb         $110, (%r12)
	LONG $0xdc70850f; WORD $0xffff  // jne          LBB0_558, $-9104(%rip)
	LONG $0x01418d49  // leaq         $1(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x7501  // cmpb         $117, $1(%r15,%r9)
	LONG $0xdc5d850f; WORD $0xffff  // jne          LBB0_558, $-9123(%rip)
	LONG $0x02418d49  // leaq         $2(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x6c02  // cmpb         $108, $2(%r15,%r9)
	LONG $0xdc4a850f; WORD $0xffff  // jne          LBB0_558, $-9142(%rip)
	LONG $0x03418d49  // leaq         $3(%r9), %rax
	WORD $0x8949; BYTE $0x03  // movq         %rax, (%r11)
	LONG $0x0f7c8043; WORD $0x6c03  // cmpb         $108, $3(%r15,%r9)
	LONG $0xdc37850f; WORD $0xffff  // jne          LBB0_558, $-9161(%rip)
LBB0_786:
	LONG $0x04c18349  // addq         $4, %r9
LBB0_966:
	LONG $0xd0458b48  // movq         $-48(%rbp), %rax
	WORD $0x894c; BYTE $0x08  // movq         %r9, (%rax)
	LONG $0xffdc27e9; BYTE $0xff  // jmp          LBB0_558, $-9177(%rip)
LBB0_967:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xfff48ee9; BYTE $0xff  // jmp          LBB0_873, $-2930(%rip)
LBB0_968:
	WORD $0x894c; BYTE $0xe3  // movq         %r12, %rbx
	LONG $0x02c38348  // addq         $2, %rbx
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x0000b5e9; BYTE $0x00  // jmp          LBB0_973, $181(%rip)
LBB0_974:
	LONG $0x8855894c  // movq         %r10, $-120(%rbp)
	LONG $0xfffe6ee9; BYTE $0xff  // jmp          LBB0_940, $-402(%rip)
LBB0_884:
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x00ed850f; WORD $0x0000  // jne          LBB0_980, $237(%rip)
	LONG $0x1e7c8d4b; BYTE $0x01  // leaq         $1(%r14,%r11), %rdi
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x014d; BYTE $0xce  // addq         %r9, %r14
LBB0_886:
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0xd0558b48  // movq         $-48(%rbp), %rdx
	LONG $0x00248f0f; WORD $0x0000  // jg           LBB0_947, $36(%rip)
	LONG $0xffdbdde9; BYTE $0xff  // jmp          LBB0_558, $-9251(%rip)
LBB0_945:
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	LONG $0x000002b9; BYTE $0x00  // movl         $2, %ecx
	WORD $0x0148; BYTE $0xcf  // addq         %rcx, %rdi
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x0149; BYTE $0xc6  // addq         %rax, %r14
	LONG $0xdbbe8e0f; WORD $0xffff  // jle          LBB0_558, $-9282(%rip)
LBB0_947:
	WORD $0xb60f; BYTE $0x07  // movzbl       (%rdi), %eax
	WORD $0x5c3c  // cmpb         $92, %al
	LONG $0xffd6840f; WORD $0xffff  // je           LBB0_945, $-42(%rip)
	WORD $0x223c  // cmpb         $34, %al
	LONG $0x0024840f; WORD $0x0000  // je           LBB0_969, $36(%rip)
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	LONG $0x000001b9; BYTE $0x00  // movl         $1, %ecx
	WORD $0x0148; BYTE $0xcf  // addq         %rcx, %rdi
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x0149; BYTE $0xc6  // addq         %rax, %r14
	LONG $0xffce8f0f; WORD $0xffff  // jg           LBB0_947, $-50(%rip)
	LONG $0xffdb87e9; BYTE $0xff  // jmp          LBB0_558, $-9337(%rip)
LBB0_969:
	WORD $0x294c; BYTE $0xc7  // subq         %r8, %rdi
	WORD $0xff48; BYTE $0xc7  // incq         %rdi
	WORD $0x8948; BYTE $0x3a  // movq         %rdi, (%rdx)
	WORD $0x894c; BYTE $0xe1  // movq         %r12, %rcx
	LONG $0xffdb76e9; BYTE $0xff  // jmp          LBB0_558, $-9354(%rip)
LBB0_970:
	WORD $0x894c; BYTE $0xe3  // movq         %r12, %rbx
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
	LONG $0xfdc1c748; WORD $0xffff; BYTE $0xff  // movq         $-3, %rcx
	LONG $0x00000de9; BYTE $0x00  // jmp          LBB0_973, $13(%rip)
LBB0_971:
	WORD $0x894c; BYTE $0xe3  // movq         %r12, %rbx
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
LBB0_972:
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
LBB0_973:
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	WORD $0x2948; BYTE $0xc3  // subq         %rax, %rbx
	WORD $0x8949; BYTE $0x1b  // movq         %rbx, (%r11)
	LONG $0xffdb48e9; BYTE $0xff  // jmp          LBB0_558, $-9400(%rip)
LBB0_975:
	WORD $0x014c; BYTE $0xc7  // addq         %r8, %rdi
	LONG $0xffff51e9; BYTE $0xff  // jmp          LBB0_886, $-175(%rip)
LBB0_976:
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	LONG $0x08408b48  // movq         $8(%rax), %rax
	LONG $0xd0558b48  // movq         $-48(%rbp), %rdx
	WORD $0x8948; BYTE $0x02  // movq         %rax, (%rdx)
	LONG $0xffdb2ce9; BYTE $0xff  // jmp          LBB0_558, $-9428(%rip)
LBB0_977:
	LONG $0xfcc1c748; WORD $0xffff; BYTE $0xff  // movq         $-4, %rcx
	LONG $0x000007e9; BYTE $0x00  // jmp          LBB0_979, $7(%rip)
LBB0_978:
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
LBB0_979:
	WORD $0x894c; BYTE $0xc3  // movq         %r8, %rbx
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xffffb6e9; BYTE $0xff  // jmp          LBB0_973, $-74(%rip)
LBB0_980:
	LONG $0xff418d49  // leaq         $-1(%r9), %rax
	WORD $0x394c; BYTE $0xf0  // cmpq         %r14, %rax
	LONG $0xdb00840f; WORD $0xffff  // je           LBB0_558, $-9472(%rip)
	LONG $0x1e7c8d4b; BYTE $0x02  // leaq         $2(%r14,%r11), %rdi
	WORD $0x294d; BYTE $0xf1  // subq         %r14, %r9
	LONG $0xfec18349  // addq         $-2, %r9
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	LONG $0xfffefde9; BYTE $0xff  // jmp          LBB0_886, $-259(%rip)
LBB0_982:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	LONG $0xfff34fe9; BYTE $0xff  // jmp          LBB0_873, $-3249(%rip)
LBB0_983:
	LONG $0xd05d8b4c  // movq         $-48(%rbp), %r11
	LONG $0xfff346e9; BYTE $0xff  // jmp          LBB0_873, $-3258(%rip)
	  // .p2align 2, 0x90
	// .set L0_0_set_419, LBB0_419-LJTI0_0
	// .set L0_0_set_462, LBB0_462-LJTI0_0
	// .set L0_0_set_451, LBB0_451-LJTI0_0
	// .set L0_0_set_404, LBB0_404-LJTI0_0
	// .set L0_0_set_489, LBB0_489-LJTI0_0
	// .set L0_0_set_461, LBB0_461-LJTI0_0
	// .set L0_0_set_450, LBB0_450-LJTI0_0
	// .set L0_0_set_463, LBB0_463-LJTI0_0
LJTI0_0:
	LONG $0xffffcc18  // .long L0_0_set_419
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcdc5  // .long L0_0_set_451
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcb3c  // .long L0_0_set_404
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffd32b  // .long L0_0_set_489
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcee7  // .long L0_0_set_461
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcdb3  // .long L0_0_set_450
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcdb3  // .long L0_0_set_450
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffcef4  // .long L0_0_set_462
	LONG $0xffffceff  // .long L0_0_set_463
	// .set L0_1_set_224, LBB0_224-LJTI0_1
	// .set L0_1_set_265, LBB0_265-LJTI0_1
	// .set L0_1_set_253, LBB0_253-LJTI0_1
	// .set L0_1_set_209, LBB0_209-LJTI0_1
	// .set L0_1_set_266, LBB0_266-LJTI0_1
	// .set L0_1_set_264, LBB0_264-LJTI0_1
	// .set L0_1_set_252, LBB0_252-LJTI0_1
	// .set L0_1_set_292, LBB0_292-LJTI0_1
LJTI0_1:
	LONG $0xffffb3d8  // .long L0_1_set_224
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb53e  // .long L0_1_set_253
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb2fc  // .long L0_1_set_209
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb679  // .long L0_1_set_266
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb661  // .long L0_1_set_264
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb52c  // .long L0_1_set_252
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb52c  // .long L0_1_set_252
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffb66e  // .long L0_1_set_265
	LONG $0xffffba8b  // .long L0_1_set_292
	// .set L0_2_set_615, LBB0_615-LJTI0_2
	// .set L0_2_set_621, LBB0_621-LJTI0_2
	// .set L0_2_set_623, LBB0_623-LJTI0_2
	// .set L0_2_set_639, LBB0_639-LJTI0_2
	// .set L0_2_set_618, LBB0_618-LJTI0_2
	// .set L0_2_set_642, LBB0_642-LJTI0_2
LJTI0_2:
	LONG $0xffffda53  // .long L0_2_set_615
	LONG $0xffffda8a  // .long L0_2_set_621
	LONG $0xffffdab5  // .long L0_2_set_623
	LONG $0xffffdc5f  // .long L0_2_set_639
	LONG $0xffffda6a  // .long L0_2_set_618
	LONG $0xffffdef6  // .long L0_2_set_642
	// .set L0_3_set_558, LBB0_558-LJTI0_3
	// .set L0_3_set_557, LBB0_557-LJTI0_3
	// .set L0_3_set_724, LBB0_724-LJTI0_3
	// .set L0_3_set_739, LBB0_739-LJTI0_3
	// .set L0_3_set_648, LBB0_648-LJTI0_3
	// .set L0_3_set_773, LBB0_773-LJTI0_3
	// .set L0_3_set_777, LBB0_777-LJTI0_3
	// .set L0_3_set_780, LBB0_780-LJTI0_3
	// .set L0_3_set_787, LBB0_787-LJTI0_3
	// .set L0_3_set_775, LBB0_775-LJTI0_3
LJTI0_3:
	LONG $0xffffd6df  // .long L0_3_set_558
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffe212  // .long L0_3_set_724
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffe3a0  // .long L0_3_set_739
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffdc80  // .long L0_3_set_648
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffe5fb  // .long L0_3_set_773
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffe643  // .long L0_3_set_777
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffe670  // .long L0_3_set_780
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffe694  // .long L0_3_set_787
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffd6d8  // .long L0_3_set_557
	LONG $0xffffe61f  // .long L0_3_set_775
	// .set L0_4_set_767, LBB0_767-LJTI0_4
	// .set L0_4_set_797, LBB0_797-LJTI0_4
	// .set L0_4_set_771, LBB0_771-LJTI0_4
	// .set L0_4_set_764, LBB0_764-LJTI0_4
	// .set L0_4_set_769, LBB0_769-LJTI0_4
LJTI0_4:
	LONG $0xffffe3ba  // .long L0_4_set_767
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe3ba  // .long L0_4_set_767
	LONG $0xffffe3f0  // .long L0_4_set_771
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe390  // .long L0_4_set_764
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe3d5  // .long L0_4_set_769
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe522  // .long L0_4_set_797
	LONG $0xffffe3d5  // .long L0_4_set_769
	// .set L0_5_set_673, LBB0_673-LJTI0_5
	// .set L0_5_set_709, LBB0_709-LJTI0_5
	// .set L0_5_set_680, LBB0_680-LJTI0_5
	// .set L0_5_set_675, LBB0_675-LJTI0_5
	// .set L0_5_set_678, LBB0_678-LJTI0_5
LJTI0_5:
	LONG $0xffffdb84  // .long L0_5_set_673
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffdb84  // .long L0_5_set_673
	LONG $0xffffdbe7  // .long L0_5_set_680
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffdba4  // .long L0_5_set_675
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffdbcc  // .long L0_5_set_678
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffde7c  // .long L0_5_set_709
	LONG $0xffffdbcc  // .long L0_5_set_678
	// .set L0_6_set_558, LBB0_558-LJTI0_6
	// .set L0_6_set_876, LBB0_876-LJTI0_6
	// .set L0_6_set_877, LBB0_877-LJTI0_6
	// .set L0_6_set_564, LBB0_564-LJTI0_6
	// .set L0_6_set_887, LBB0_887-LJTI0_6
	// .set L0_6_set_911, LBB0_911-LJTI0_6
	// .set L0_6_set_871, LBB0_871-LJTI0_6
	// .set L0_6_set_914, LBB0_914-LJTI0_6
LJTI0_6:
	LONG $0xffffd317  // .long L0_6_set_558
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffebaf  // .long L0_6_set_877
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffd390  // .long L0_6_set_564
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffecc1  // .long L0_6_set_887
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xfffff0f3  // .long L0_6_set_911
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeb72  // .long L0_6_set_871
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeb72  // .long L0_6_set_871
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xffffeba7  // .long L0_6_set_876
	LONG $0xfffff10d  // .long L0_6_set_914
	  // .p2align 2, 0x00
_MASK_USE_NUMBER:
	LONG $0x00000002  // .long 2
	LONG $0x00000000  // .p2align 4, 0x00
__UnquoteTab:
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .ascii 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .ascii 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000220000; QUAD $0x2f00000000000000  // .ascii 16, '\x00\x00"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00/'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .ascii 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .ascii 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000005c00000000  // .ascii 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\\\x00\x00\x00'
	QUAD $0x000c000000080000; QUAD $0x000a000000000000  // .ascii 16, '\x00\x00\x08\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\n\x00'
	LONG $0x000d0000; WORD $0xff09  // .ascii 6, '\x00\x00\r\x00\t\xff'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; QUAD $0x0000000000000000  // .space 16, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'
	QUAD $0x0000000000000000; WORD $0x0000  // .space 10, '\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00'

TEXT Â·__get_by_path(SB), NOSPLIT | NOFRAME, $0 - 40
	NO_LOCAL_POINTERS

_entry:
	MOVQ (TLS), R14
	LEAQ -216(SP), R12
	CMPQ R12, 16(R14)
	JBE  _stack_grow

_get_by_path:
	MOVQ s+0(FP), DI
	MOVQ p+8(FP), SI
	MOVQ path+16(FP), DX
	MOVQ m+24(FP), CX
	CALL Â·__get_by_path_entry+272(SB)  // _get_by_path
	MOVQ AX, ret+32(FP)
	RET

_stack_grow:
	CALL runtimeÂ·morestack_noctxt<>(SB)
	JMP  _entry
