//go:build !noasm || !appengine
// +build !noasm !appengine

// Code generated by asm2asm, DO NOT EDIT.

package sse

import (
	"reflect"

	"github.com/bytedance/sonic/internal/rt"
)

//go:nosplit
//go:noescape
//goland:noinspection ALL
func __f64toa_entry()

var (
    _subr__f64toa uintptr = GetFuncPC(__f64toa_entry) + 32
)

const (
    _stack__f64toa = 64
)

var (
    _ = _subr__f64toa
)

const (
    _ = _stack__f64toa
)


func GetFuncPC(fn interface{}) uintptr {
    ft := rt.UnpackEface(fn)
    if ft.Type.Kind() != reflect.Func {
        panic("not a function")
    }
    return *(*uintptr)(ft.Value)
}