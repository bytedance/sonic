// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

package sse

import (
	`github.com/bytedance/sonic/loader`
)

const (
    _entry__f32toa = 42784
    _entry__f64toa = 128
    _entry__fsm_exec = 24272
    _entry__skip_string = 26240
    _entry__skip_negative = 29888
    _entry__skip_positive = 28640
    _entry__get_by_path = 36592
    _entry__skip_one_fast = 32688
    _entry__html_escape = 10208
    _entry__i64toa = 5120
    _entry__u64toa = 5248
    _entry__lspace = 16
    _entry__quote = 6528
    _entry__skip_array = 31056
    _entry__skip_number = 31248
    _entry__skip_object = 31104
    _entry__skip_one = 32464
    _entry__unquote = 8256
    _entry__validate_one = 32512
    _entry__validate_utf8 = 41536
    _entry__validate_utf8_fast = 42224
    _entry__value = 17856
    _entry__vstring = 19488
    _entry__vnumber = 21936
    _entry__atof_eisel_lemire64 = 11504
    _entry__atof_native = 17248
    _entry__decimal_to_f64 = 11904
    _entry__vsigned = 23536
    _entry__vunsigned = 23904
)

const (
    _stack__f32toa = 56
    _stack__f64toa = 72
    _stack__fsm_exec = 160
    _stack__skip_string = 88
    _stack__skip_negative = 72
    _stack__skip_positive = 64
    _stack__get_by_path = 296
    _stack__skip_one_fast = 136
    _stack__html_escape = 64
    _stack__i64toa = 16
    _stack__u64toa = 8
    _stack__lspace = 8
    _stack__quote = 80
    _stack__skip_array = 168
    _stack__skip_number = 80
    _stack__skip_object = 168
    _stack__skip_one = 168
    _stack__unquote = 80
    _stack__validate_one = 168
    _stack__validate_utf8 = 48
    _stack__validate_utf8_fast = 24
    _stack__value = 296
    _stack__vstring = 104
    _stack__vnumber = 240
    _stack__atof_eisel_lemire64 = 40
    _stack__atof_native = 136
    _stack__decimal_to_f64 = 80
    _stack__vsigned = 16
    _stack__vunsigned = 24
)

const (
    _size__f32toa = 3680
    _size__f64toa = 4992
    _size__fsm_exec = 1388
    _size__skip_string = 2288
    _size__skip_negative = 1036
    _size__skip_positive = 1020
    _size__get_by_path = 4944
    _size__skip_one_fast = 3348
    _size__html_escape = 1296
    _size__i64toa = 48
    _size__u64toa = 1232
    _size__lspace = 96
    _size__quote = 1712
    _size__skip_array = 32
    _size__skip_number = 1088
    _size__skip_object = 32
    _size__skip_one = 32
    _size__unquote = 1888
    _size__validate_one = 48
    _size__validate_utf8 = 688
    _size__validate_utf8_fast = 544
    _size__value = 1068
    _size__vstring = 2400
    _size__vnumber = 1600
    _size__atof_eisel_lemire64 = 400
    _size__atof_native = 608
    _size__decimal_to_f64 = 5344
    _size__vsigned = 368
    _size__vunsigned = 368
)

var (
    _pcsp__f32toa = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {3638, 56},
        {3642, 48},
        {3643, 40},
        {3645, 32},
        {3647, 24},
        {3649, 16},
        {3651, 8},
        {3652, 0},
        {3678, 56},
    }
    _pcsp__f64toa = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {4889, 72},
        {4893, 48},
        {4894, 40},
        {4896, 32},
        {4898, 24},
        {4900, 16},
        {4902, 8},
        {4903, 0},
        {4981, 72},
    }
    _pcsp__fsm_exec = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1100, 72},
        {1104, 48},
        {1105, 40},
        {1107, 32},
        {1109, 24},
        {1111, 16},
        {1113, 8},
        {1114, 0},
        {1388, 72},
    }
    _pcsp__skip_string = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1046, 88},
        {1050, 48},
        {1051, 40},
        {1053, 32},
        {1055, 24},
        {1057, 16},
        {1059, 8},
        {1060, 0},
        {2280, 88},
    }
    _pcsp__skip_negative = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {868, 72},
        {872, 48},
        {873, 40},
        {875, 32},
        {877, 24},
        {879, 16},
        {881, 8},
        {882, 0},
        {1036, 72},
    }
    _pcsp__skip_positive = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {870, 64},
        {874, 48},
        {875, 40},
        {877, 32},
        {879, 24},
        {881, 16},
        {883, 8},
        {884, 0},
        {1020, 64},
    }
    _pcsp__get_by_path = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {4830, 136},
        {4834, 48},
        {4835, 40},
        {4837, 32},
        {4839, 24},
        {4841, 16},
        {4843, 8},
        {4844, 0},
        {4943, 136},
    }
    _pcsp__skip_one_fast = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {600, 136},
        {604, 48},
        {605, 40},
        {607, 32},
        {609, 24},
        {611, 16},
        {613, 8},
        {614, 0},
        {3348, 136},
    }
    _pcsp__html_escape = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1281, 64},
        {1285, 48},
        {1286, 40},
        {1288, 32},
        {1290, 24},
        {1292, 16},
        {1294, 8},
        {1296, 0},
    }
    _pcsp__i64toa = [][2]uint32{
        {14, 0},
        {36, 8},
        {38, 0},
    }
    _pcsp__u64toa = [][2]uint32{
        {1, 0},
        {164, 8},
        {165, 0},
        {462, 8},
        {463, 0},
        {774, 8},
        {775, 0},
        {1230, 8},
        {1232, 0},
    }
    _pcsp__lspace = [][2]uint32{
        {1, 0},
        {85, 8},
        {87, 0},
    }
    _pcsp__quote = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1659, 80},
        {1663, 48},
        {1664, 40},
        {1666, 32},
        {1668, 24},
        {1670, 16},
        {1672, 8},
        {1673, 0},
        {1708, 80},
    }
    _pcsp__skip_array = [][2]uint32{
        {1, 0},
        {26, 8},
        {32, 0},
    }
    _pcsp__skip_number = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {911, 80},
        {915, 48},
        {916, 40},
        {918, 32},
        {920, 24},
        {922, 16},
        {924, 8},
        {925, 0},
        {1088, 80},
    }
    _pcsp__skip_object = [][2]uint32{
        {1, 0},
        {26, 8},
        {32, 0},
    }
    _pcsp__skip_one = [][2]uint32{
        {1, 0},
        {26, 8},
        {32, 0},
    }
    _pcsp__unquote = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1333, 80},
        {1337, 48},
        {1338, 40},
        {1340, 32},
        {1342, 24},
        {1344, 16},
        {1346, 8},
        {1347, 0},
        {1879, 80},
    }
    _pcsp__validate_one = [][2]uint32{
        {1, 0},
        {31, 8},
        {37, 0},
    }
    _pcsp__validate_utf8 = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {11, 40},
        {639, 48},
        {643, 40},
        {644, 32},
        {646, 24},
        {648, 16},
        {650, 8},
        {651, 0},
        {682, 48},
    }
    _pcsp__validate_utf8_fast = [][2]uint32{
        {1, 0},
        {4, 8},
        {5, 16},
        {247, 24},
        {251, 16},
        {252, 8},
        {253, 0},
        {527, 24},
        {531, 16},
        {532, 8},
        {534, 0},
    }
    _pcsp__value = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {7, 24},
        {418, 56},
        {422, 24},
        {423, 16},
        {425, 8},
        {426, 0},
        {1068, 56},
    }
    _pcsp__vstring = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {2191, 104},
        {2195, 48},
        {2196, 40},
        {2198, 32},
        {2200, 24},
        {2202, 16},
        {2204, 8},
        {2205, 0},
        {2390, 104},
    }
    _pcsp__vnumber = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {148, 104},
        {152, 48},
        {153, 40},
        {155, 32},
        {157, 24},
        {159, 16},
        {161, 8},
        {162, 0},
        {1599, 104},
    }
    _pcsp__atof_eisel_lemire64 = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {322, 40},
        {323, 32},
        {325, 24},
        {327, 16},
        {329, 8},
        {330, 0},
        {394, 40},
    }
    _pcsp__atof_native = [][2]uint32{
        {1, 0},
        {4, 8},
        {596, 56},
        {600, 8},
        {602, 0},
    }
    _pcsp__decimal_to_f64 = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {5312, 80},
        {5316, 48},
        {5317, 40},
        {5319, 32},
        {5321, 24},
        {5323, 16},
        {5325, 8},
        {5326, 0},
        {5334, 80},
    }
    _pcsp__vsigned = [][2]uint32{
        {1, 0},
        {4, 8},
        {111, 16},
        {112, 8},
        {113, 0},
        {124, 16},
        {125, 8},
        {126, 0},
        {278, 16},
        {279, 8},
        {280, 0},
        {284, 16},
        {285, 8},
        {286, 0},
        {340, 16},
        {341, 8},
        {342, 0},
        {353, 16},
        {354, 8},
        {356, 0},
    }
    _pcsp__vunsigned = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {72, 24},
        {73, 16},
        {75, 8},
        {76, 0},
        {87, 24},
        {88, 16},
        {90, 8},
        {91, 0},
        {114, 24},
        {115, 16},
        {117, 8},
        {118, 0},
        {281, 24},
        {282, 16},
        {284, 8},
        {285, 0},
        {336, 24},
        {337, 16},
        {339, 8},
        {340, 0},
        {348, 24},
        {349, 16},
        {351, 8},
        {353, 0},
    }
)

var Funcs = []loader.CFunc{
    {"__native_entry__", 0, 67, 0, nil},
    {"_f32toa", _entry__f32toa, _size__f32toa, _stack__f32toa, _pcsp__f32toa},
    {"_f64toa", _entry__f64toa, _size__f64toa, _stack__f64toa, _pcsp__f64toa},
    {"_fsm_exec", _entry__fsm_exec, _size__fsm_exec, _stack__fsm_exec, _pcsp__fsm_exec},
    {"_skip_string", _entry__skip_string, _size__skip_string, _stack__skip_string, _pcsp__skip_string},
    {"_skip_negative", _entry__skip_negative, _size__skip_negative, _stack__skip_negative, _pcsp__skip_negative},
    {"_skip_positive", _entry__skip_positive, _size__skip_positive, _stack__skip_positive, _pcsp__skip_positive},
    {"_get_by_path", _entry__get_by_path, _size__get_by_path, _stack__get_by_path, _pcsp__get_by_path},
    {"_skip_one_fast", _entry__skip_one_fast, _size__skip_one_fast, _stack__skip_one_fast, _pcsp__skip_one_fast},
    {"_html_escape", _entry__html_escape, _size__html_escape, _stack__html_escape, _pcsp__html_escape},
    {"_i64toa", _entry__i64toa, _size__i64toa, _stack__i64toa, _pcsp__i64toa},
    {"_u64toa", _entry__u64toa, _size__u64toa, _stack__u64toa, _pcsp__u64toa},
    {"_lspace", _entry__lspace, _size__lspace, _stack__lspace, _pcsp__lspace},
    {"_quote", _entry__quote, _size__quote, _stack__quote, _pcsp__quote},
    {"_skip_array", _entry__skip_array, _size__skip_array, _stack__skip_array, _pcsp__skip_array},
    {"_skip_number", _entry__skip_number, _size__skip_number, _stack__skip_number, _pcsp__skip_number},
    {"_skip_object", _entry__skip_object, _size__skip_object, _stack__skip_object, _pcsp__skip_object},
    {"_skip_one", _entry__skip_one, _size__skip_one, _stack__skip_one, _pcsp__skip_one},
    {"_unquote", _entry__unquote, _size__unquote, _stack__unquote, _pcsp__unquote},
    {"_validate_one", _entry__validate_one, _size__validate_one, _stack__validate_one, _pcsp__validate_one},
    {"_validate_utf8", _entry__validate_utf8, _size__validate_utf8, _stack__validate_utf8, _pcsp__validate_utf8},
    {"_validate_utf8_fast", _entry__validate_utf8_fast, _size__validate_utf8_fast, _stack__validate_utf8_fast, _pcsp__validate_utf8_fast},
    {"_value", _entry__value, _size__value, _stack__value, _pcsp__value},
    {"_vstring", _entry__vstring, _size__vstring, _stack__vstring, _pcsp__vstring},
    {"_vnumber", _entry__vnumber, _size__vnumber, _stack__vnumber, _pcsp__vnumber},
    {"_atof_eisel_lemire64", _entry__atof_eisel_lemire64, _size__atof_eisel_lemire64, _stack__atof_eisel_lemire64, _pcsp__atof_eisel_lemire64},
    {"_atof_native", _entry__atof_native, _size__atof_native, _stack__atof_native, _pcsp__atof_native},
    {"_decimal_to_f64", _entry__decimal_to_f64, _size__decimal_to_f64, _stack__decimal_to_f64, _pcsp__decimal_to_f64},
    {"_vsigned", _entry__vsigned, _size__vsigned, _stack__vsigned, _pcsp__vsigned},
    {"_vunsigned", _entry__vunsigned, _size__vunsigned, _stack__vunsigned, _pcsp__vunsigned},
}
