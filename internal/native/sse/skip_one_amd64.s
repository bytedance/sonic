// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

#include "go_asm.h"
#include "funcdata.h"
#include "textflag.h"

TEXT Â·__skip_one_entry(SB), NOSPLIT, $152
	NO_LOCAL_POINTERS
	LONG $0xe90d8d4c; WORD $0xffff; BYTE $0xff  // leaq         $-23(%rip), %r9
	QUAD $0x000000a8248c894c  // movq         %r9, $168(%rsp)
	BYTE $0xc3  // retq         
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	BYTE $0x00
	  // .p2align 4, 0x00
LCPI0_0:
	QUAD $0x2222222222222222; QUAD $0x2222222222222222  // .space 16, '""""""""""""""""'
LCPI0_1:
	QUAD $0x5c5c5c5c5c5c5c5c; QUAD $0x5c5c5c5c5c5c5c5c  // .space 16, '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
LCPI0_2:
	QUAD $0x2020202020202020; QUAD $0x2020202020202020  // .space 16, '                '
LCPI0_3:
	QUAD $0x2f2f2f2f2f2f2f2f; QUAD $0x2f2f2f2f2f2f2f2f  // .space 16, '////////////////'
LCPI0_4:
	QUAD $0x3a3a3a3a3a3a3a3a; QUAD $0x3a3a3a3a3a3a3a3a  // .space 16, '::::::::::::::::'
LCPI0_5:
	QUAD $0x2b2b2b2b2b2b2b2b; QUAD $0x2b2b2b2b2b2b2b2b  // .space 16, '++++++++++++++++'
LCPI0_6:
	QUAD $0x2d2d2d2d2d2d2d2d; QUAD $0x2d2d2d2d2d2d2d2d  // .space 16, '----------------'
LCPI0_7:
	QUAD $0x2e2e2e2e2e2e2e2e; QUAD $0x2e2e2e2e2e2e2e2e  // .space 16, '................'
LCPI0_8:
	QUAD $0x6565656565656565; QUAD $0x6565656565656565  // .space 16, 'eeeeeeeeeeeeeeee'
	  // .p2align 4, 0x90
_skip_one:
	BYTE $0x55  // pushq        %rbp
	WORD $0x8948; BYTE $0xe5  // movq         %rsp, %rbp
	WORD $0x5741  // pushq        %r15
	WORD $0x5641  // pushq        %r14
	WORD $0x5541  // pushq        %r13
	WORD $0x5441  // pushq        %r12
	BYTE $0x53  // pushq        %rbx
	LONG $0x70ec8348  // subq         $112, %rsp
	LONG $0x788d8948; WORD $0xffff; BYTE $0xff  // movq         %rcx, $-136(%rbp)
	WORD $0x8949; BYTE $0xd0  // movq         %rdx, %r8
	LONG $0x0001b941; WORD $0x0000  // movl         $1, %r9d
	LONG $0x6e0f4966; BYTE $0xc1  // movq         %r9, %xmm0
	LONG $0x027f0ff3  // movdqu       %xmm0, (%rdx)
	LONG $0x907d8948  // movq         %rdi, $-112(%rbp)
	WORD $0x8b4c; BYTE $0x17  // movq         (%rdi), %r10
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	LONG $0xa8458948  // movq         %rax, $-88(%rbp)
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	WORD $0x294c; BYTE $0xd0  // subq         %r10, %rax
	LONG $0x98458948  // movq         %rax, $-104(%rbp)
	LONG $0x40428d49  // leaq         $64(%r10), %rax
	LONG $0x88458948  // movq         %rax, $-120(%rbp)
	WORD $0x8b4c; BYTE $0x1e  // movq         (%rsi), %r11
	LONG $0x05428d49  // leaq         $5(%r10), %rax
	LONG $0x68858948; WORD $0xffff; BYTE $0xff  // movq         %rax, $-152(%rbp)
	QUAD $0xffffffff7085c748; WORD $0xffff; BYTE $0xff  // movq         $-1, $-144(%rbp)
	QUAD $0xffffff00056f0ff3  // movdqu       $-256(%rip), %xmm0  /* LCPI0_0+0(%rip) */
	QUAD $0xffffff080d6f0ff3  // movdqu       $-248(%rip), %xmm1  /* LCPI0_1+0(%rip) */
	QUAD $0xffffff10156f0ff3  // movdqu       $-240(%rip), %xmm2  /* LCPI0_2+0(%rip) */
	LONG $0x760f4566; BYTE $0xf6  // pcmpeqd      %xmm14, %xmm14
	QUAD $0xffff12056f0f44f3; BYTE $0xff  // movdqu       $-238(%rip), %xmm8  /* LCPI0_3+0(%rip) */
	QUAD $0xffff192d6f0f44f3; BYTE $0xff  // movdqu       $-231(%rip), %xmm13  /* LCPI0_4+0(%rip) */
	QUAD $0xffff200d6f0f44f3; BYTE $0xff  // movdqu       $-224(%rip), %xmm9  /* LCPI0_5+0(%rip) */
	QUAD $0xffff27156f0f44f3; BYTE $0xff  // movdqu       $-217(%rip), %xmm10  /* LCPI0_6+0(%rip) */
	QUAD $0xffff2e1d6f0f44f3; BYTE $0xff  // movdqu       $-210(%rip), %xmm11  /* LCPI0_7+0(%rip) */
	QUAD $0xffff35256f0f44f3; BYTE $0xff  // movdqu       $-203(%rip), %xmm12  /* LCPI0_8+0(%rip) */
	LONG $0xc8758948  // movq         %rsi, $-56(%rbp)
	LONG $0xd055894c  // movq         %r10, $-48(%rbp)
	LONG $0xa0558948  // movq         %rdx, $-96(%rbp)
	LONG $0x00002ae9; BYTE $0x00  // jmp          LBB0_5, $42(%rip)
LBB0_1:
	WORD $0x014d; BYTE $0xfb  // addq         %r15, %r11
LBB0_2:
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0x25f2880f; WORD $0x0000  // js           LBB0_150, $9714(%rip)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_3:
	WORD $0x8b49; BYTE $0x10  // movq         (%r8), %rdx
	WORD $0x8949; BYTE $0xd1  // movq         %rdx, %r9
	LONG $0x70858b48; WORD $0xffff; BYTE $0xff  // movq         $-144(%rbp), %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x25da840f; WORD $0x0000  // je           LBB0_150, $9690(%rip)
LBB0_5:
	LONG $0x90458b48  // movq         $-112(%rbp), %rax
	LONG $0x08408b48  // movq         $8(%rax), %rax
	WORD $0x894c; BYTE $0xdb  // movq         %r11, %rbx
	WORD $0x2948; BYTE $0xc3  // subq         %rax, %rbx
	LONG $0x0036830f; WORD $0x0000  // jae          LBB0_10, $54(%rip)
	LONG $0x1a148a43  // movb         (%r10,%r11), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0029840f; WORD $0x0000  // je           LBB0_10, $41(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x0020840f; WORD $0x0000  // je           LBB0_10, $32(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x0014860f; WORD $0x0000  // jbe          LBB0_10, $20(%rip)
	WORD $0x894d; BYTE $0xdf  // movq         %r11, %r15
	LONG $0x000139e9; BYTE $0x00  // jmp          LBB0_31, $313(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090  // .p2align 4, 0x90
LBB0_10:
	LONG $0x017b8d4d  // leaq         $1(%r11), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_14, $35(%rip)
	LONG $0x3a148a43  // movb         (%r10,%r15), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_14, $22(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_14, $13(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x00fe870f; WORD $0x0000  // ja           LBB0_31, $254(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_14:
	LONG $0x027b8d4d  // leaq         $2(%r11), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_18, $35(%rip)
	LONG $0x3a148a43  // movb         (%r10,%r15), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_18, $22(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_18, $13(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x00ce870f; WORD $0x0000  // ja           LBB0_31, $206(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_18:
	LONG $0x037b8d4d  // leaq         $3(%r11), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_22, $35(%rip)
	LONG $0x3a148a43  // movb         (%r10,%r15), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_22, $22(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_22, $13(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x009e870f; WORD $0x0000  // ja           LBB0_31, $158(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_22:
	LONG $0x04538d49  // leaq         $4(%r11), %rdx
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x22fb860f; WORD $0x0000  // jbe          LBB0_425, $8955(%rip)
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x005a840f; WORD $0x0000  // je           LBB0_28, $90(%rip)
	LONG $0x02148d49  // leaq         (%r10,%rax), %rdx
	LONG $0x04c38348  // addq         $4, %rbx
	LONG $0x689d034c; WORD $0xffff; BYTE $0xff  // addq         $-152(%rbp), %r11
	WORD $0x894d; BYTE $0xdf  // movq         %r11, %r15
	QUAD $0x000100002600b948; WORD $0x0000  // movabsq      $4294977024, %rcx
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_25:
	LONG $0x7fbe0f41; BYTE $0xff  // movsbl       $-1(%r15), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x0042870f; WORD $0x0000  // ja           LBB0_30, $66(%rip)
	LONG $0xf9a30f48  // btq          %rdi, %rcx
	LONG $0x0038830f; WORD $0x0000  // jae          LBB0_30, $56(%rip)
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
	LONG $0xffdc850f; WORD $0xffff  // jne          LBB0_25, $-36(%rip)
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_29, $10(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_28:
	WORD $0x014c; BYTE $0xd2  // addq         %r10, %rdx
LBB0_29:
	WORD $0x294c; BYTE $0xd2  // subq         %r10, %rdx
	WORD $0x8949; BYTE $0xd7  // movq         %rdx, %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x001b820f; WORD $0x0000  // jb           LBB0_31, $27(%rip)
	LONG $0x002284e9; BYTE $0x00  // jmp          LBB0_426, $8836(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_30:
	LONG $0xa87d034c  // addq         $-88(%rbp), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x226e830f; WORD $0x0000  // jae          LBB0_426, $8814(%rip)
LBB0_31:
	LONG $0x015f8d4d  // leaq         $1(%r15), %r11
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	LONG $0x1cbe0f43; BYTE $0x3a  // movsbl       (%r10,%r15), %ebx
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0x2448840f; WORD $0x0000  // je           LBB0_150, $9288(%rip)
	LONG $0xff518d49  // leaq         $-1(%r9), %rdx
	LONG $0xc83c8b43  // movl         (%r8,%r9,8), %edi
	LONG $0x708d8b48; WORD $0xffff; BYTE $0xff  // movq         $-144(%rbp), %rcx
	LONG $0xfff98348  // cmpq         $-1, %rcx
	LONG $0xcf440f49  // cmoveq       %r15, %rcx
	LONG $0x708d8948; WORD $0xffff; BYTE $0xff  // movq         %rcx, $-144(%rbp)
	WORD $0xcfff  // decl         %edi
	WORD $0xff83; BYTE $0x05  // cmpl         $5, %edi
	LONG $0x0259870f; WORD $0x0000  // ja           LBB0_64, $601(%rip)
	LONG $0x800d8d48; WORD $0x0024; BYTE $0x00  // leaq         $9344(%rip), %rcx  /* LJTI0_0+0(%rip) */
	LONG $0xb93c6348  // movslq       (%rcx,%rdi,4), %rdi
	WORD $0x0148; BYTE $0xcf  // addq         %rcx, %rdi
	JMP DI
LBB0_34:
	WORD $0xfb83; BYTE $0x2c  // cmpl         $44, %ebx
	LONG $0x0707840f; WORD $0x0000  // je           LBB0_122, $1799(%rip)
	WORD $0xfb83; BYTE $0x5d  // cmpl         $93, %ebx
	LONG $0x04c4840f; WORD $0x0000  // je           LBB0_36, $1220(%rip)
	LONG $0x0022a0e9; BYTE $0x00  // jmp          LBB0_440, $8864(%rip)
LBB0_37:
	WORD $0xfb80; BYTE $0x5d  // cmpb         $93, %bl
	LONG $0x04b6840f; WORD $0x0000  // je           LBB0_36, $1206(%rip)
	QUAD $0x00000001c804c74b  // movq         $1, (%r8,%r9,8)
	WORD $0xfb83; BYTE $0x7b  // cmpl         $123, %ebx
	LONG $0x0224860f; WORD $0x0000  // jbe          LBB0_39, $548(%rip)
	LONG $0x002281e9; BYTE $0x00  // jmp          LBB0_440, $8833(%rip)
LBB0_40:
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x2278850f; WORD $0x0000  // jne          LBB0_440, $8824(%rip)
	QUAD $0x00000004c804c74b  // movq         $4, (%r8,%r9,8)
	LONG $0x90458b48  // movq         $-112(%rbp), %rax
	LONG $0x08488b4c  // movq         $8(%rax), %r9
	LONG $0xff7885f6; WORD $0xffff; BYTE $0x20  // testb        $32, $-136(%rbp)
	LONG $0xb05d894c  // movq         %r11, $-80(%rbp)
	LONG $0x0491850f; WORD $0x0000  // jne          LBB0_101, $1169(%rip)
	WORD $0x894d; BYTE $0xcd  // movq         %r9, %r13
	WORD $0x294d; BYTE $0xdd  // subq         %r11, %r13
	LONG $0x2371840f; WORD $0x0000  // je           LBB0_456, $9073(%rip)
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	WORD $0x014d; BYTE $0xd3  // addq         %r10, %r11
	LONG $0x40fd8349  // cmpq         $64, %r13
	LONG $0x1bc8820f; WORD $0x0000  // jb           LBB0_362, $7112(%rip)
	WORD $0x8944; BYTE $0xe9  // movl         %r13d, %ecx
	WORD $0xe183; BYTE $0x3f  // andl         $63, %ecx
	LONG $0xb84d8948  // movq         %rcx, $-72(%rbp)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	WORD $0x294c; BYTE $0xf9  // subq         %r15, %rcx
	LONG $0xbfc18348  // addq         $-65, %rcx
	LONG $0xc0e18348  // andq         $-64, %rcx
	WORD $0x0148; BYTE $0xc1  // addq         %rax, %rcx
	LONG $0x884d0348  // addq         $-120(%rbp), %rcx
	LONG $0x804d8948  // movq         %rcx, $-128(%rbp)
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_45:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x206b  // movdqu       $32(%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x3073  // movdqu       $48(%r11), %xmm6
	LONG $0xfb6f0f66  // movdqa       %xmm3, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xdfd70f66  // pmovmskb     %xmm7, %ebx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xf5  // pmovmskb     %xmm5, %r14d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xe6  // pmovmskb     %xmm6, %r12d
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcf  // orq          %rcx, %rdi
	WORD $0x0948; BYTE $0xf7  // orq          %rsi, %rdi
	LONG $0x30e4c149  // shlq         $48, %r12
	LONG $0x20e6c149  // shlq         $32, %r14
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x094c; BYTE $0xe2  // orq          %r12, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_47, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_56, $47(%rip)
LBB0_47:
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_57, $61(%rip)
LBB0_48:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0086850f; WORD $0x0000  // jne          LBB0_58, $134(%rip)
LBB0_49:
	LONG $0xc0c58349  // addq         $-64, %r13
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffd8349  // cmpq         $63, %r13
	LONG $0xff33870f; WORD $0xffff  // ja           LBB0_45, $-205(%rip)
	LONG $0x0013afe9; BYTE $0x00  // jmp          LBB0_50, $5039(%rip)
LBB0_56:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0xffc3840f; WORD $0xffff  // je           LBB0_48, $-61(%rip)
LBB0_57:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xd0  // andq         %rdx, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xd1  // orq          %r10, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	QUAD $0xaaaaaaaaaaaaba48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xc2920f41  // setb         %r10b
	WORD $0x0148; BYTE $0xf6  // addq         %rsi, %rsi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc6  // xorq         %rax, %rsi
	WORD $0x2148; BYTE $0xce  // andq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff7a840f; WORD $0xffff  // je           LBB0_49, $-134(%rip)
LBB0_58:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
LBB0_59:
	LONG $0x985d034c  // addq         $-104(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0x000a08e9; BYTE $0x00  // jmp          LBB0_189, $2568(%rip)
LBB0_60:
	WORD $0xfb83; BYTE $0x2c  // cmpl         $44, %ebx
	LONG $0x02bc850f; WORD $0x0000  // jne          LBB0_61, $700(%rip)
	LONG $0xfff98149; WORD $0x000f; BYTE $0x00  // cmpq         $4095, %r9
	LONG $0x20088f0f; WORD $0x0000  // jg           LBB0_442, $8200(%rip)
	LONG $0x01418d49  // leaq         $1(%r9), %rax
	WORD $0x8949; BYTE $0x00  // movq         %rax, (%r8)
	QUAD $0x00000308c844c74b; BYTE $0x00  // movq         $3, $8(%r8,%r9,8)
	LONG $0xfffbece9; BYTE $0xff  // jmp          LBB0_3, $-1044(%rip)
LBB0_62:
	WORD $0xfb80; BYTE $0x3a  // cmpb         $58, %bl
	LONG $0x207b850f; WORD $0x0000  // jne          LBB0_440, $8315(%rip)
	QUAD $0x00000000c804c74b  // movq         $0, (%r8,%r9,8)
	LONG $0xfffbd6e9; BYTE $0xff  // jmp          LBB0_3, $-1066(%rip)
LBB0_64:
	WORD $0x8949; BYTE $0x10  // movq         %rdx, (%r8)
	WORD $0xfb83; BYTE $0x7b  // cmpl         $123, %ebx
	LONG $0x2062870f; WORD $0x0000  // ja           LBB0_440, $8290(%rip)
LBB0_39:
	LONG $0x3a0c8d4f  // leaq         (%r10,%r15), %r9
	WORD $0xd989  // movl         %ebx, %ecx
	LONG $0x2d158d48; WORD $0x0022; BYTE $0x00  // leaq         $8749(%rip), %rdx  /* LJTI0_1+0(%rip) */
	LONG $0x8a0c6348  // movslq       (%rdx,%rcx,4), %rcx
	WORD $0x0148; BYTE $0xd1  // addq         %rdx, %rcx
	JMP CX
LBB0_67:
	LONG $0x90458b48  // movq         $-112(%rbp), %rax
	LONG $0x08788b48  // movq         $8(%rax), %rdi
	WORD $0x294c; BYTE $0xff  // subq         %r15, %rdi
	LONG $0x1fcf840f; WORD $0x0000  // je           LBB0_429, $8143(%rip)
	LONG $0x30398041  // cmpb         $48, (%r9)
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_72, $47(%rip)
	LONG $0x01ff8348  // cmpq         $1, %rdi
	LONG $0xfb7e840f; WORD $0xffff  // je           LBB0_2, $-1154(%rip)
	LONG $0x1a048a43  // movb         (%r10,%r11), %al
	WORD $0xd204  // addb         $-46, %al
	WORD $0x373c  // cmpb         $55, %al
	LONG $0xfb70870f; WORD $0xffff  // ja           LBB0_2, $-1168(%rip)
	WORD $0xb60f; BYTE $0xc0  // movzbl       %al, %eax
	QUAD $0x000000800001b948; WORD $0x0080  // movabsq      $36028797027352577, %rcx
	LONG $0xc1a30f48  // btq          %rax, %rcx
	LONG $0xfb59830f; WORD $0xffff  // jae          LBB0_2, $-1191(%rip)
LBB0_72:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x18cb820f; WORD $0x0000  // jb           LBB0_351, $6347(%rip)
	LONG $0xf0778d48  // leaq         $-16(%rdi), %rsi
	WORD $0x8948; BYTE $0xf0  // movq         %rsi, %rax
	LONG $0xf0e08348  // andq         $-16, %rax
	LONG $0x08448d4a; BYTE $0x10  // leaq         $16(%rax,%r9), %rax
	LONG $0xb0458948  // movq         %rax, $-80(%rbp)
	WORD $0xe683; BYTE $0x0f  // andl         $15, %esi
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	LONG $0xffc5c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r13
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	BYTE $0x90  // .p2align 4, 0x90
LBB0_74:
	LONG $0x6f0f41f3; BYTE $0x1e  // movdqu       (%r14), %xmm3
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x640f4166; BYTE $0xe0  // pcmpgtb      %xmm8, %xmm4
	LONG $0x6f0f4166; BYTE $0xed  // movdqa       %xmm13, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0xecdb0f66  // pand         %xmm4, %xmm5
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x740f4166; BYTE $0xe1  // pcmpeqb      %xmm9, %xmm4
	LONG $0xf36f0f66  // movdqa       %xmm3, %xmm6
	LONG $0x740f4166; BYTE $0xf2  // pcmpeqb      %xmm10, %xmm6
	LONG $0xf4eb0f66  // por          %xmm4, %xmm6
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0xe2eb0f66  // por          %xmm2, %xmm4
	LONG $0x740f4166; BYTE $0xdb  // pcmpeqb      %xmm11, %xmm3
	LONG $0x740f4166; BYTE $0xe4  // pcmpeqb      %xmm12, %xmm4
	LONG $0xd70f4466; BYTE $0xe4  // pmovmskb     %xmm4, %r12d
	LONG $0xe3eb0f66  // por          %xmm3, %xmm4
	LONG $0xeeeb0f66  // por          %xmm6, %xmm5
	LONG $0xeceb0f66  // por          %xmm4, %xmm5
	LONG $0xd70f4466; BYTE $0xc3  // pmovmskb     %xmm3, %r8d
	LONG $0xd6d70f66  // pmovmskb     %xmm6, %edx
	LONG $0xc5d70f66  // pmovmskb     %xmm5, %eax
	LONG $0xaaaaaab9; BYTE $0xaa  // movl         $2863311530, %ecx
	LONG $0x55c18148; WORD $0x5555; BYTE $0x55  // addq         $1431655765, %rcx
	WORD $0x3148; BYTE $0xc1  // xorq         %rax, %rcx
	LONG $0xc9bc0f48  // bsfq         %rcx, %rcx
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0013840f; WORD $0x0000  // je           LBB0_76, $19(%rip)
	LONG $0xffffffb8; BYTE $0xff  // movl         $-1, %eax
	WORD $0xe0d3  // shll         %cl, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0x2141; BYTE $0xc0  // andl         %eax, %r8d
	WORD $0x2141; BYTE $0xc4  // andl         %eax, %r12d
	WORD $0xd021  // andl         %edx, %eax
	WORD $0xc289  // movl         %eax, %edx
LBB0_76:
	LONG $0xff408d41  // leal         $-1(%r8), %eax
	WORD $0x2144; BYTE $0xc0  // andl         %r8d, %eax
	LONG $0x1163850f; WORD $0x0000  // jne          LBB0_317, $4451(%rip)
	LONG $0x24448d41; BYTE $0xff  // leal         $-1(%r12), %eax
	WORD $0x2144; BYTE $0xe0  // andl         %r12d, %eax
	LONG $0x1155850f; WORD $0x0000  // jne          LBB0_317, $4437(%rip)
	WORD $0x428d; BYTE $0xff  // leal         $-1(%rdx), %eax
	WORD $0xd021  // andl         %edx, %eax
	LONG $0x114a850f; WORD $0x0000  // jne          LBB0_317, $4426(%rip)
	WORD $0x8545; BYTE $0xc0  // testl        %r8d, %r8d
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_82, $26(%rip)
	WORD $0x894c; BYTE $0xf3  // movq         %r14, %rbx
	WORD $0x294c; BYTE $0xcb  // subq         %r9, %rbx
	LONG $0xc0bc0f41  // bsfl         %r8d, %eax
	WORD $0x0148; BYTE $0xd8  // addq         %rbx, %rax
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x154a850f; WORD $0x0000  // jne          LBB0_334, $5450(%rip)
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
LBB0_82:
	LONG $0xa0458b4c  // movq         $-96(%rbp), %r8
	WORD $0x8545; BYTE $0xe4  // testl        %r12d, %r12d
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_85, $26(%rip)
	WORD $0x894c; BYTE $0xf3  // movq         %r14, %rbx
	WORD $0x294c; BYTE $0xcb  // subq         %r9, %rbx
	LONG $0xc4bc0f41  // bsfl         %r12d, %eax
	WORD $0x0148; BYTE $0xd8  // addq         %rbx, %rax
	LONG $0xfffd8349  // cmpq         $-1, %r13
	LONG $0x12e0850f; WORD $0x0000  // jne          LBB0_323, $4832(%rip)
	WORD $0x8949; BYTE $0xc5  // movq         %rax, %r13
LBB0_85:
	WORD $0xd285  // testl        %edx, %edx
	LONG $0x0019840f; WORD $0x0000  // je           LBB0_88, $25(%rip)
	WORD $0x894c; BYTE $0xf3  // movq         %r14, %rbx
	WORD $0x294c; BYTE $0xcb  // subq         %r9, %rbx
	WORD $0xbc0f; BYTE $0xc2  // bsfl         %edx, %eax
	WORD $0x0148; BYTE $0xd8  // addq         %rbx, %rax
	LONG $0xfffa8349  // cmpq         $-1, %r10
	LONG $0x12bf850f; WORD $0x0000  // jne          LBB0_323, $4799(%rip)
	WORD $0x8949; BYTE $0xc2  // movq         %rax, %r10
LBB0_88:
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0505850f; WORD $0x0000  // jne          LBB0_151, $1285(%rip)
	LONG $0x10c68349  // addq         $16, %r14
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x0fff8348  // cmpq         $15, %rdi
	LONG $0xfec4870f; WORD $0xffff  // ja           LBB0_74, $-316(%rip)
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x050a840f; WORD $0x0000  // je           LBB0_153, $1290(%rip)
LBB0_91:
	LONG $0xb05d8b48  // movq         $-80(%rbp), %rbx
	LONG $0x330c8d48  // leaq         (%rbx,%rsi), %rcx
	LONG $0x00002ae9; BYTE $0x00  // jmp          LBB0_95, $42(%rip)
LBB0_92:
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x294c; BYTE $0xc8  // subq         %r9, %rax
	LONG $0xfffd8349  // cmpq         $-1, %r13
	LONG $0x1572850f; WORD $0x0000  // jne          LBB0_345, $5490(%rip)
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0x8949; BYTE $0xc5  // movq         %rax, %r13
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_94:
	WORD $0x8948; BYTE $0xd3  // movq         %rdx, %rbx
	WORD $0xff48; BYTE $0xce  // decq         %rsi
	LONG $0x126c840f; WORD $0x0000  // je           LBB0_324, $4716(%rip)
LBB0_95:
	WORD $0xbe0f; BYTE $0x03  // movsbl       (%rbx), %eax
	WORD $0xc083; BYTE $0xd5  // addl         $-43, %eax
	WORD $0xf883; BYTE $0x3a  // cmpl         $58, %eax
	LONG $0x04c0870f; WORD $0x0000  // ja           LBB0_152, $1216(%rip)
	LONG $0x01538d48  // leaq         $1(%rbx), %rdx
	LONG $0xe63d8d48; WORD $0x0022; BYTE $0x00  // leaq         $8934(%rip), %rdi  /* LJTI0_3+0(%rip) */
	LONG $0x87046348  // movslq       (%rdi,%rax,4), %rax
	WORD $0x0148; BYTE $0xf8  // addq         %rdi, %rax
	JMP AX
LBB0_97:
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x294c; BYTE $0xc8  // subq         %r9, %rax
	LONG $0xfffa8349  // cmpq         $-1, %r10
	LONG $0x1525850f; WORD $0x0000  // jne          LBB0_345, $5413(%rip)
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0x8949; BYTE $0xc2  // movq         %rax, %r10
	LONG $0xffffb6e9; BYTE $0xff  // jmp          LBB0_94, $-74(%rip)
LBB0_99:
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x294c; BYTE $0xc8  // subq         %r9, %rax
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x150a850f; WORD $0x0000  // jne          LBB0_345, $5386(%rip)
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0xffff9be9; BYTE $0xff  // jmp          LBB0_94, $-101(%rip)
LBB0_65:
	WORD $0xfb83; BYTE $0x22  // cmpl         $34, %ebx
	LONG $0x0265840f; WORD $0x0000  // je           LBB0_126, $613(%rip)
LBB0_61:
	WORD $0xfb83; BYTE $0x7d  // cmpl         $125, %ebx
	LONG $0x1de1850f; WORD $0x0000  // jne          LBB0_440, $7649(%rip)
LBB0_36:
	WORD $0x8949; BYTE $0x10  // movq         %rdx, (%r8)
	WORD $0x8949; BYTE $0xd1  // movq         %rdx, %r9
	LONG $0x70858b48; WORD $0xffff; BYTE $0xff  // movq         $-144(%rbp), %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xf949850f; WORD $0xffff  // jne          LBB0_5, $-1719(%rip)
	LONG $0x001f1ee9; BYTE $0x00  // jmp          LBB0_150, $7966(%rip)
LBB0_101:
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0x294c; BYTE $0xd8  // subq         %r11, %rax
	LONG $0x1ee0840f; WORD $0x0000  // je           LBB0_456, $7904(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	WORD $0x014d; BYTE $0xd3  // addq         %r10, %r11
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0xc04d894c  // movq         %r9, $-64(%rbp)
	LONG $0x174c820f; WORD $0x0000  // jb           LBB0_363, $5964(%rip)
	WORD $0xc289  // movl         %eax, %edx
	WORD $0xe283; BYTE $0x3f  // andl         $63, %edx
	LONG $0xb8558948  // movq         %rdx, $-72(%rbp)
	WORD $0x894d; BYTE $0xcc  // movq         %r9, %r12
	WORD $0x294d; BYTE $0xfc  // subq         %r15, %r12
	LONG $0xbfc48349  // addq         $-65, %r12
	LONG $0xc0e48349  // andq         $-64, %r12
	WORD $0x0149; BYTE $0xcc  // addq         %rcx, %r12
	LONG $0x8865034c  // addq         $-120(%rbp), %r12
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_104:
	LONG $0x6f0f41f3; BYTE $0x2b  // movdqu       (%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x1073  // movdqu       $16(%r11), %xmm6
	LONG $0x6f0f41f3; WORD $0x2063  // movdqu       $32(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x307b  // movdqu       $48(%r11), %xmm7
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfb  // orq          %rdi, %rbx
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x20e1c148  // shlq         $32, %rcx
	WORD $0x0948; BYTE $0xcb  // orq          %rcx, %rbx
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdd640f66  // pcmpgtb      %xmm5, %xmm3
	LONG $0x640f4166; BYTE $0xee  // pcmpgtb      %xmm14, %xmm5
	LONG $0xebdb0f66  // pand         %xmm3, %xmm5
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0949; BYTE $0xd5  // orq          %rdx, %r13
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xde640f66  // pcmpgtb      %xmm6, %xmm3
	LONG $0x640f4166; BYTE $0xf6  // pcmpgtb      %xmm14, %xmm6
	LONG $0xf3db0f66  // pand         %xmm3, %xmm6
	LONG $0x20e7c148  // shlq         $32, %rdi
	WORD $0x0949; BYTE $0xfd  // orq          %rdi, %r13
	LONG $0xfed70f66  // pmovmskb     %xmm6, %edi
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0x30e1c148  // shlq         $48, %rcx
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdf640f66  // pcmpgtb      %xmm7, %xmm3
	LONG $0x640f4166; BYTE $0xfe  // pcmpgtb      %xmm14, %xmm7
	LONG $0xfbdb0f66  // pand         %xmm3, %xmm7
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0x30e6c149  // shlq         $48, %r14
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_106, $9(%rip)
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x00a4850f; WORD $0x0000  // jne          LBB0_121, $164(%rip)
LBB0_106:
	LONG $0x30e7c148  // shlq         $48, %rdi
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	WORD $0x094c; BYTE $0xf3  // orq          %r14, %rbx
	WORD $0x894c; BYTE $0xe9  // movq         %r13, %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	LONG $0x002c850f; WORD $0x0000  // jne          LBB0_145, $44(%rip)
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0285850f; WORD $0x0000  // jne          LBB0_146, $645(%rip)
LBB0_108:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x1bf7850f; WORD $0x0000  // jne          LBB0_431, $7159(%rip)
	LONG $0xc0c08348  // addq         $-64, %rax
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ff88348  // cmpq         $63, %rax
	LONG $0xfeb1870f; WORD $0xffff  // ja           LBB0_104, $-335(%rip)
	LONG $0x000f21e9; BYTE $0x00  // jmp          LBB0_110, $3873(%rip)
LBB0_145:
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x214d; BYTE $0xee  // andq         %r13, %r14
	LONG $0x36148d4f  // leaq         (%r14,%r14), %r10
	WORD $0x094d; BYTE $0xca  // orq          %r9, %r10
	WORD $0x894c; BYTE $0xd1  // movq         %r10, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x214c; BYTE $0xe9  // andq         %r13, %rcx
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x2148; BYTE $0xf1  // andq         %rsi, %rcx
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x014c; BYTE $0xf1  // addq         %r14, %rcx
	LONG $0xc1920f41  // setb         %r9b
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	QUAD $0x555555555555be48; WORD $0x5555  // movabsq      $6148914691236517205, %rsi
	WORD $0x3148; BYTE $0xf1  // xorq         %rsi, %rcx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xcb  // andq         %rcx, %rbx
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xff83840f; WORD $0xffff  // je           LBB0_108, $-125(%rip)
	LONG $0x000203e9; BYTE $0x00  // jmp          LBB0_146, $515(%rip)
LBB0_121:
	WORD $0x894d; BYTE $0xda  // movq         %r11, %r10
	LONG $0xd0552b4c  // subq         $-48(%rbp), %r10
	LONG $0xc5bc0f4d  // bsfq         %r13, %r8
	WORD $0x014d; BYTE $0xd0  // addq         %r10, %r8
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xffff41e9; BYTE $0xff  // jmp          LBB0_106, $-191(%rip)
LBB0_122:
	LONG $0xfff98149; WORD $0x000f; BYTE $0x00  // cmpq         $4095, %r9
	LONG $0x1b098f0f; WORD $0x0000  // jg           LBB0_442, $6921(%rip)
	LONG $0x01418d49  // leaq         $1(%r9), %rax
	WORD $0x8949; BYTE $0x00  // movq         %rax, (%r8)
	QUAD $0x00000008c844c74b; BYTE $0x00  // movq         $0, $8(%r8,%r9,8)
	LONG $0xfff6ede9; BYTE $0xff  // jmp          LBB0_3, $-2323(%rip)
LBB0_126:
	QUAD $0x00000002c804c74b  // movq         $2, (%r8,%r9,8)
	LONG $0x90458b48  // movq         $-112(%rbp), %rax
	LONG $0x08488b4c  // movq         $8(%rax), %r9
	LONG $0xff7885f6; WORD $0xffff; BYTE $0x20  // testb        $32, $-136(%rbp)
	LONG $0xb05d894c  // movq         %r11, $-80(%rbp)
	LONG $0x0261850f; WORD $0x0000  // jne          LBB0_163, $609(%rip)
	WORD $0x894d; BYTE $0xcd  // movq         %r9, %r13
	WORD $0x294d; BYTE $0xdd  // subq         %r11, %r13
	LONG $0x1c7e840f; WORD $0x0000  // je           LBB0_456, $7294(%rip)
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	WORD $0x014d; BYTE $0xd3  // addq         %r10, %r11
	LONG $0x40fd8349  // cmpq         $64, %r13
	LONG $0x1560820f; WORD $0x0000  // jb           LBB0_369, $5472(%rip)
	WORD $0x8944; BYTE $0xe9  // movl         %r13d, %ecx
	WORD $0xe183; BYTE $0x3f  // andl         $63, %ecx
	LONG $0xb84d8948  // movq         %rcx, $-72(%rbp)
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	WORD $0x294c; BYTE $0xf9  // subq         %r15, %rcx
	LONG $0xbfc18348  // addq         $-65, %rcx
	LONG $0xc0e18348  // andq         $-64, %rcx
	WORD $0x0148; BYTE $0xc1  // addq         %rax, %rcx
	LONG $0x884d0348  // addq         $-120(%rbp), %rcx
	LONG $0x804d8948  // movq         %rcx, $-128(%rbp)
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_130:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x206b  // movdqu       $32(%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x3073  // movdqu       $48(%r11), %xmm6
	LONG $0xfb6f0f66  // movdqa       %xmm3, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xdfd70f66  // pmovmskb     %xmm7, %ebx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xf5  // pmovmskb     %xmm5, %r14d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xe6  // pmovmskb     %xmm6, %r12d
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcf  // orq          %rcx, %rdi
	WORD $0x0948; BYTE $0xf7  // orq          %rsi, %rdi
	LONG $0x30e4c149  // shlq         $48, %r12
	LONG $0x20e6c149  // shlq         $32, %r14
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x094c; BYTE $0xe2  // orq          %r12, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_132, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_141, $47(%rip)
LBB0_132:
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_142, $61(%rip)
LBB0_133:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0086850f; WORD $0x0000  // jne          LBB0_143, $134(%rip)
LBB0_134:
	LONG $0xc0c58349  // addq         $-64, %r13
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffd8349  // cmpq         $63, %r13
	LONG $0xff33870f; WORD $0xffff  // ja           LBB0_130, $-205(%rip)
	LONG $0x000e7fe9; BYTE $0x00  // jmp          LBB0_135, $3711(%rip)
LBB0_141:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0xffc3840f; WORD $0xffff  // je           LBB0_133, $-61(%rip)
LBB0_142:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xd0  // andq         %rdx, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xd1  // orq          %r10, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	QUAD $0xaaaaaaaaaaaaba48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xc2920f41  // setb         %r10b
	WORD $0x0148; BYTE $0xf6  // addq         %rsi, %rsi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc6  // xorq         %rax, %rsi
	WORD $0x2148; BYTE $0xce  // andq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff7a840f; WORD $0xffff  // je           LBB0_134, $-134(%rip)
LBB0_143:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
LBB0_144:
	LONG $0x985d034c  // addq         $-104(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0x000375e9; BYTE $0x00  // jmp          LBB0_196, $885(%rip)
LBB0_146:
	LONG $0xc3bc0f48  // bsfq         %rbx, %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x02f1840f; WORD $0x0000  // je           LBB0_187, $753(%rip)
	LONG $0xcabc0f48  // bsfq         %rdx, %rcx
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x02f2830f; WORD $0x0000  // jae          LBB0_188, $754(%rip)
	LONG $0x001adee9; BYTE $0x00  // jmp          LBB0_148, $6878(%rip)
LBB0_151:
	WORD $0x0149; BYTE $0xce  // addq         %rcx, %r14
	LONG $0xb075894c  // movq         %r14, $-80(%rbp)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x0019850f; WORD $0x0000  // jne          LBB0_154, $25(%rip)
	LONG $0x001920e9; BYTE $0x00  // jmp          LBB0_430, $6432(%rip)
LBB0_152:
	LONG $0xb05d8948  // movq         %rbx, $-80(%rbp)
LBB0_153:
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x190c840f; WORD $0x0000  // je           LBB0_430, $6412(%rip)
LBB0_154:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x1903840f; WORD $0x0000  // je           LBB0_430, $6403(%rip)
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x18fa840f; WORD $0x0000  // je           LBB0_430, $6394(%rip)
	LONG $0xb0458b48  // movq         $-80(%rbp), %rax
	WORD $0x294c; BYTE $0xc8  // subq         %r9, %rax
	WORD $0x8948; BYTE $0xc1  // movq         %rax, %rcx
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	WORD $0x3949; BYTE $0xc5  // cmpq         %rax, %r13
	LONG $0x0033840f; WORD $0x0000  // je           LBB0_162, $51(%rip)
	WORD $0x3949; BYTE $0xc3  // cmpq         %rax, %r11
	LONG $0x002a840f; WORD $0x0000  // je           LBB0_162, $42(%rip)
	WORD $0x3949; BYTE $0xc2  // cmpq         %rax, %r10
	LONG $0x0021840f; WORD $0x0000  // je           LBB0_162, $33(%rip)
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x02a28e0f; WORD $0x0000  // jle          LBB0_191, $674(%rip)
	LONG $0xff428d49  // leaq         $-1(%r10), %rax
	WORD $0x3949; BYTE $0xc5  // cmpq         %rax, %r13
	LONG $0x0295840f; WORD $0x0000  // je           LBB0_191, $661(%rip)
	WORD $0xf749; BYTE $0xd2  // notq         %r10
	WORD $0x894d; BYTE $0xd3  // movq         %r10, %r11
	LONG $0x000831e9; BYTE $0x00  // jmp          LBB0_271, $2097(%rip)
LBB0_162:
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0xf749; BYTE $0xdb  // negq         %r11
	LONG $0x000826e9; BYTE $0x00  // jmp          LBB0_271, $2086(%rip)
LBB0_163:
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0x294c; BYTE $0xd8  // subq         %r11, %rax
	LONG $0x1a1d840f; WORD $0x0000  // je           LBB0_456, $6685(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	WORD $0x014d; BYTE $0xd3  // addq         %r10, %r11
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0xc04d894c  // movq         %r9, $-64(%rbp)
	LONG $0x1314820f; WORD $0x0000  // jb           LBB0_370, $4884(%rip)
	WORD $0xc289  // movl         %eax, %edx
	WORD $0xe283; BYTE $0x3f  // andl         $63, %edx
	LONG $0xb8558948  // movq         %rdx, $-72(%rbp)
	WORD $0x894d; BYTE $0xcc  // movq         %r9, %r12
	WORD $0x294d; BYTE $0xfc  // subq         %r15, %r12
	LONG $0xbfc48349  // addq         $-65, %r12
	LONG $0xc0e48349  // andq         $-64, %r12
	WORD $0x0149; BYTE $0xcc  // addq         %rcx, %r12
	LONG $0x8865034c  // addq         $-120(%rbp), %r12
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_166:
	LONG $0x6f0f41f3; BYTE $0x2b  // movdqu       (%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x1073  // movdqu       $16(%r11), %xmm6
	LONG $0x6f0f41f3; WORD $0x2063  // movdqu       $32(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x307b  // movdqu       $48(%r11), %xmm7
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfb  // orq          %rdi, %rbx
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x20e1c148  // shlq         $32, %rcx
	WORD $0x0948; BYTE $0xcb  // orq          %rcx, %rbx
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdd640f66  // pcmpgtb      %xmm5, %xmm3
	LONG $0x640f4166; BYTE $0xee  // pcmpgtb      %xmm14, %xmm5
	LONG $0xebdb0f66  // pand         %xmm3, %xmm5
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0949; BYTE $0xd5  // orq          %rdx, %r13
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xde640f66  // pcmpgtb      %xmm6, %xmm3
	LONG $0x640f4166; BYTE $0xf6  // pcmpgtb      %xmm14, %xmm6
	LONG $0xf3db0f66  // pand         %xmm3, %xmm6
	LONG $0x20e7c148  // shlq         $32, %rdi
	WORD $0x0949; BYTE $0xfd  // orq          %rdi, %r13
	LONG $0xfed70f66  // pmovmskb     %xmm6, %edi
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0x30e1c148  // shlq         $48, %rcx
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdf640f66  // pcmpgtb      %xmm7, %xmm3
	LONG $0x640f4166; BYTE $0xfe  // pcmpgtb      %xmm14, %xmm7
	LONG $0xfbdb0f66  // pand         %xmm3, %xmm7
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0x30e6c149  // shlq         $48, %r14
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_168, $9(%rip)
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x00a4850f; WORD $0x0000  // jne          LBB0_183, $164(%rip)
LBB0_168:
	LONG $0x30e7c148  // shlq         $48, %rdi
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	WORD $0x094c; BYTE $0xf3  // orq          %r14, %rbx
	WORD $0x894c; BYTE $0xe9  // movq         %r13, %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	LONG $0x002c850f; WORD $0x0000  // jne          LBB0_184, $44(%rip)
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x009d850f; WORD $0x0000  // jne          LBB0_185, $157(%rip)
LBB0_170:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x1737850f; WORD $0x0000  // jne          LBB0_431, $5943(%rip)
	LONG $0xc0c08348  // addq         $-64, %rax
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ff88348  // cmpq         $63, %rax
	LONG $0xfeb1870f; WORD $0xffff  // ja           LBB0_166, $-335(%rip)
	LONG $0x000c21e9; BYTE $0x00  // jmp          LBB0_172, $3105(%rip)
LBB0_184:
	WORD $0x894d; BYTE $0xce  // movq         %r9, %r14
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x214d; BYTE $0xee  // andq         %r13, %r14
	LONG $0x36148d4f  // leaq         (%r14,%r14), %r10
	WORD $0x094d; BYTE $0xca  // orq          %r9, %r10
	WORD $0x894c; BYTE $0xd1  // movq         %r10, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x214c; BYTE $0xe9  // andq         %r13, %rcx
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x2148; BYTE $0xf1  // andq         %rsi, %rcx
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x014c; BYTE $0xf1  // addq         %r14, %rcx
	LONG $0xc1920f41  // setb         %r9b
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	QUAD $0x555555555555be48; WORD $0x5555  // movabsq      $6148914691236517205, %rsi
	WORD $0x3148; BYTE $0xf1  // xorq         %rsi, %rcx
	WORD $0x214c; BYTE $0xd1  // andq         %r10, %rcx
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xcb  // andq         %rcx, %rbx
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xff83840f; WORD $0xffff  // je           LBB0_170, $-125(%rip)
	LONG $0x00001be9; BYTE $0x00  // jmp          LBB0_185, $27(%rip)
LBB0_183:
	WORD $0x894d; BYTE $0xda  // movq         %r11, %r10
	LONG $0xd0552b4c  // subq         $-48(%rbp), %r10
	LONG $0xc5bc0f4d  // bsfq         %r13, %r8
	WORD $0x014d; BYTE $0xd0  // addq         %r10, %r8
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xffff41e9; BYTE $0xff  // jmp          LBB0_168, $-191(%rip)
LBB0_185:
	LONG $0xc3bc0f48  // bsfq         %rbx, %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0076840f; WORD $0x0000  // je           LBB0_194, $118(%rip)
	LONG $0xcabc0f48  // bsfq         %rdx, %rcx
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0077830f; WORD $0x0000  // jae          LBB0_195, $119(%rip)
	LONG $0x001806e9; BYTE $0x00  // jmp          LBB0_148, $6150(%rip)
LBB0_187:
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x17f1820f; WORD $0x0000  // jb           LBB0_148, $6129(%rip)
LBB0_188:
	LONG $0x035c8d4d; BYTE $0x01  // leaq         $1(%r11,%rax), %r11
LBB0_189:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x1619880f; WORD $0x0000  // js           LBB0_427, $5657(%rip)
LBB0_190:
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xb07d8348; BYTE $0x00  // cmpq         $0, $-80(%rbp)
	LONG $0xa0458b4c  // movq         $-96(%rbp), %r8
	LONG $0xf1f18f0f; WORD $0xffff  // jg           LBB0_3, $-3599(%rip)
	LONG $0x0017dce9; BYTE $0x00  // jmp          LBB0_150, $6108(%rip)
LBB0_191:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	WORD $0x094c; BYTE $0xe8  // orq          %r13, %rax
	WORD $0x394d; BYTE $0xeb  // cmpq         %r13, %r11
	LONG $0x05808c0f; WORD $0x0000  // jl           LBB0_270, $1408(%rip)
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0577880f; WORD $0x0000  // js           LBB0_270, $1399(%rip)
	WORD $0xf749; BYTE $0xd3  // notq         %r11
	LONG $0x000587e9; BYTE $0x00  // jmp          LBB0_271, $1415(%rip)
LBB0_194:
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x1794820f; WORD $0x0000  // jb           LBB0_148, $6036(%rip)
LBB0_195:
	LONG $0x035c8d4d; BYTE $0x01  // leaq         $1(%r11,%rax), %r11
LBB0_196:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x15bc880f; WORD $0x0000  // js           LBB0_427, $5564(%rip)
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xb07d8348; BYTE $0x00  // cmpq         $0, $-80(%rbp)
	LONG $0xa0458b4c  // movq         $-96(%rbp), %r8
	LONG $0x17848e0f; WORD $0x0000  // jle          LBB0_150, $6020(%rip)
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x158c8f0f; WORD $0x0000  // jg           LBB0_442, $5516(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8949; BYTE $0x08  // movq         %rcx, (%r8)
	QUAD $0x00000408c044c749; BYTE $0x00  // movq         $4, $8(%r8,%rax,8)
	LONG $0xfff170e9; BYTE $0xff  // jmp          LBB0_3, $-3728(%rip)
LBB0_200:
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x15688f0f; WORD $0x0000  // jg           LBB0_442, $5480(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8949; BYTE $0x08  // movq         %rcx, (%r8)
	QUAD $0x00000508c044c749; BYTE $0x00  // movq         $5, $8(%r8,%rax,8)
	LONG $0xfff14ce9; BYTE $0xff  // jmp          LBB0_3, $-3764(%rip)
LBB0_202:
	LONG $0x90458b48  // movq         $-112(%rbp), %rax
	LONG $0x08608b4c  // movq         $8(%rax), %r12
	LONG $0xff7885f6; WORD $0xffff; BYTE $0x20  // testb        $32, $-136(%rbp)
	LONG $0xb05d894c  // movq         %r11, $-80(%rbp)
	LONG $0xc065894c  // movq         %r12, $-64(%rbp)
	WORD $0x894d; BYTE $0xe2  // movq         %r12, %r10
	LONG $0x04fd850f; WORD $0x0000  // jne          LBB0_274, $1277(%rip)
	WORD $0x294d; BYTE $0xda  // subq         %r11, %r10
	LONG $0x1722840f; WORD $0x0000  // je           LBB0_457, $5922(%rip)
	LONG $0xd0458b48  // movq         $-48(%rbp), %rax
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0x105c820f; WORD $0x0000  // jb           LBB0_375, $4188(%rip)
	WORD $0x8944; BYTE $0xd0  // movl         %r10d, %eax
	WORD $0xe083; BYTE $0x3f  // andl         $63, %eax
	LONG $0xb8458948  // movq         %rax, $-72(%rbp)
	WORD $0x294d; BYTE $0xfc  // subq         %r15, %r12
	LONG $0xbfc48349  // addq         $-65, %r12
	LONG $0xc0e48349  // andq         $-64, %r12
	WORD $0x0149; BYTE $0xcc  // addq         %rcx, %r12
	LONG $0x8865034c  // addq         $-120(%rbp), %r12
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_206:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x206b  // movdqu       $32(%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x3073  // movdqu       $48(%r11), %xmm6
	LONG $0xfb6f0f66  // movdqa       %xmm3, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xd70f4466; BYTE $0xef  // pmovmskb     %xmm7, %r13d
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xf6  // pmovmskb     %xmm6, %r14d
	LONG $0x30e5c149  // shlq         $48, %r13
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcf  // orq          %rcx, %rdi
	WORD $0x0948; BYTE $0xf7  // orq          %rsi, %rdi
	LONG $0x30e6c149  // shlq         $48, %r14
	LONG $0x20e3c148  // shlq         $32, %rbx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_208, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_217, $47(%rip)
LBB0_208:
	WORD $0x094c; BYTE $0xef  // orq          %r13, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_218, $61(%rip)
LBB0_209:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0086850f; WORD $0x0000  // jne          LBB0_219, $134(%rip)
LBB0_210:
	LONG $0xc0c28349  // addq         $-64, %r10
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffa8349  // cmpq         $63, %r10
	LONG $0xff33870f; WORD $0xffff  // ja           LBB0_206, $-205(%rip)
	LONG $0x000be8e9; BYTE $0x00  // jmp          LBB0_211, $3048(%rip)
LBB0_217:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x094c; BYTE $0xef  // orq          %r13, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0xffc3840f; WORD $0xffff  // je           LBB0_209, $-61(%rip)
LBB0_218:
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xd0  // andq         %rdx, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	QUAD $0xaaaaaaaaaaaaba48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xc1920f41  // setb         %r9b
	WORD $0x0148; BYTE $0xf6  // addq         %rsi, %rsi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc6  // xorq         %rax, %rsi
	WORD $0x2148; BYTE $0xce  // andq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff7a840f; WORD $0xffff  // je           LBB0_210, $-134(%rip)
LBB0_219:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
LBB0_220:
	LONG $0x985d034c  // addq         $-104(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0x000649e9; BYTE $0x00  // jmp          LBB0_314, $1609(%rip)
LBB0_221:
	LONG $0x90458b48  // movq         $-112(%rbp), %rax
	LONG $0x08488b4c  // movq         $8(%rax), %r9
	WORD $0x294d; BYTE $0xd9  // subq         %r11, %r9
	LONG $0x1401840f; WORD $0x0000  // je           LBB0_438, $5121(%rip)
	LONG $0xb05d894c  // movq         %r11, $-80(%rbp)
	LONG $0x1a248d4f  // leaq         (%r10,%r11), %r12
	LONG $0x243c8041; BYTE $0x30  // cmpb         $48, (%r12)
	LONG $0x0036850f; WORD $0x0000  // jne          LBB0_226, $54(%rip)
	LONG $0x0001bb41; WORD $0x0000  // movl         $1, %r11d
	LONG $0x01f98349  // cmpq         $1, %r9
	LONG $0x05e0840f; WORD $0x0000  // je           LBB0_310, $1504(%rip)
	LONG $0x24448a41; BYTE $0x01  // movb         $1(%r12), %al
	WORD $0xd204  // addb         $-46, %al
	WORD $0x373c  // cmpb         $55, %al
	LONG $0x05d1870f; WORD $0x0000  // ja           LBB0_310, $1489(%rip)
	WORD $0xb60f; BYTE $0xc0  // movzbl       %al, %eax
	QUAD $0x000000800001b948; WORD $0x0080  // movabsq      $36028797027352577, %rcx
	LONG $0xc1a30f48  // btq          %rax, %rcx
	LONG $0x05ba830f; WORD $0x0000  // jae          LBB0_310, $1466(%rip)
LBB0_226:
	LONG $0x10f98349  // cmpq         $16, %r9
	LONG $0x0e49820f; WORD $0x0000  // jb           LBB0_374, $3657(%rip)
	LONG $0xf0518d4d  // leaq         $-16(%r9), %r10
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xf0e08348  // andq         $-16, %rax
	LONG $0x20448d4e; BYTE $0x10  // leaq         $16(%rax,%r12), %r8
	LONG $0x0fe28341  // andl         $15, %r10d
	QUAD $0xffffffffb845c748  // movq         $-1, $-72(%rbp)
	QUAD $0xffffffffc045c748  // movq         $-1, $-64(%rbp)
	LONG $0xffc6c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r14
	WORD $0x894d; BYTE $0xe5  // movq         %r12, %r13
	LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_228:
	LONG $0x6f0f41f3; WORD $0x005d  // movdqu       (%r13), %xmm3
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x640f4166; BYTE $0xe0  // pcmpgtb      %xmm8, %xmm4
	LONG $0x6f0f4166; BYTE $0xed  // movdqa       %xmm13, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0xecdb0f66  // pand         %xmm4, %xmm5
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x740f4166; BYTE $0xe1  // pcmpeqb      %xmm9, %xmm4
	LONG $0xf36f0f66  // movdqa       %xmm3, %xmm6
	LONG $0x740f4166; BYTE $0xf2  // pcmpeqb      %xmm10, %xmm6
	LONG $0xf4eb0f66  // por          %xmm4, %xmm6
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0xe2eb0f66  // por          %xmm2, %xmm4
	LONG $0x740f4166; BYTE $0xdb  // pcmpeqb      %xmm11, %xmm3
	LONG $0x740f4166; BYTE $0xe4  // pcmpeqb      %xmm12, %xmm4
	LONG $0xdcd70f66  // pmovmskb     %xmm4, %ebx
	LONG $0xe3eb0f66  // por          %xmm3, %xmm4
	LONG $0xeeeb0f66  // por          %xmm6, %xmm5
	LONG $0xeceb0f66  // por          %xmm4, %xmm5
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xd6d70f66  // pmovmskb     %xmm6, %edx
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xaaaaaabe; BYTE $0xaa  // movl         $2863311530, %esi
	LONG $0x55be8d48; WORD $0x5555; BYTE $0x55  // leaq         $1431655765(%rsi), %rdi
	WORD $0x3148; BYTE $0xcf  // xorq         %rcx, %rdi
	LONG $0xcfbc0f48  // bsfq         %rdi, %rcx
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0011840f; WORD $0x0000  // je           LBB0_230, $17(%rip)
	LONG $0xffffffbf; BYTE $0xff  // movl         $-1, %edi
	WORD $0xe7d3  // shll         %cl, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xf821  // andl         %edi, %eax
	WORD $0xfb21  // andl         %edi, %ebx
	WORD $0xd721  // andl         %edx, %edi
	WORD $0xfa89  // movl         %edi, %edx
LBB0_230:
	WORD $0x788d; BYTE $0xff  // leal         $-1(%rax), %edi
	WORD $0xc721  // andl         %eax, %edi
	LONG $0x0a0f850f; WORD $0x0000  // jne          LBB0_346, $2575(%rip)
	WORD $0x7b8d; BYTE $0xff  // leal         $-1(%rbx), %edi
	WORD $0xdf21  // andl         %ebx, %edi
	LONG $0x0a04850f; WORD $0x0000  // jne          LBB0_346, $2564(%rip)
	WORD $0x7a8d; BYTE $0xff  // leal         $-1(%rdx), %edi
	WORD $0xd721  // andl         %edx, %edi
	LONG $0x09f9850f; WORD $0x0000  // jne          LBB0_346, $2553(%rip)
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_236, $26(%rip)
	WORD $0x894c; BYTE $0xef  // movq         %r13, %rdi
	WORD $0x294c; BYTE $0xe7  // subq         %r12, %rdi
	LONG $0xd8bc0f44  // bsfl         %eax, %r11d
	WORD $0x0149; BYTE $0xfb  // addq         %rdi, %r11
	LONG $0xfffe8349  // cmpq         $-1, %r14
	LONG $0x09e4850f; WORD $0x0000  // jne          LBB0_347, $2532(%rip)
	WORD $0x894d; BYTE $0xde  // movq         %r11, %r14
LBB0_236:
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0x001c840f; WORD $0x0000  // je           LBB0_239, $28(%rip)
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xdbbc0f44  // bsfl         %ebx, %r11d
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc07d8348; BYTE $0xff  // cmpq         $-1, $-64(%rbp)
	LONG $0x09c1850f; WORD $0x0000  // jne          LBB0_347, $2497(%rip)
	LONG $0xc05d894c  // movq         %r11, $-64(%rbp)
LBB0_239:
	WORD $0xd285  // testl        %edx, %edx
	LONG $0x001c840f; WORD $0x0000  // je           LBB0_242, $28(%rip)
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xdabc0f44  // bsfl         %edx, %r11d
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xb87d8348; BYTE $0xff  // cmpq         $-1, $-72(%rbp)
	LONG $0x099d850f; WORD $0x0000  // jne          LBB0_347, $2461(%rip)
	LONG $0xb85d894c  // movq         %r11, $-72(%rbp)
LBB0_242:
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x03d2850f; WORD $0x0000  // jne          LBB0_298, $978(%rip)
	LONG $0x10c58349  // addq         $16, %r13
	LONG $0xf0c18349  // addq         $-16, %r9
	LONG $0x0ff98349  // cmpq         $15, %r9
	LONG $0xfecd870f; WORD $0xffff  // ja           LBB0_228, $-307(%rip)
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x13358d48; WORD $0x0016; BYTE $0x00  // leaq         $5651(%rip), %rsi  /* LJTI0_2+0(%rip) */
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	LONG $0xb85d8b48  // movq         $-72(%rbp), %rbx
	LONG $0x03b6840f; WORD $0x0000  // je           LBB0_299, $950(%rip)
LBB0_245:
	LONG $0x100c8d4b  // leaq         (%r8,%r10), %rcx
	LONG $0x000018e9; BYTE $0x00  // jmp          LBB0_247, $24(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090  // .p2align 4, 0x90
LBB0_246:
	WORD $0x8949; BYTE $0xc0  // movq         %rax, %r8
	WORD $0xff49; BYTE $0xca  // decq         %r10
	LONG $0x0ad3840f; WORD $0x0000  // je           LBB0_350, $2771(%rip)
LBB0_247:
	LONG $0x10be0f41  // movsbl       (%r8), %edx
	WORD $0xc283; BYTE $0xd5  // addl         $-43, %edx
	WORD $0xfa83; BYTE $0x3a  // cmpl         $58, %edx
	LONG $0x0385870f; WORD $0x0000  // ja           LBB0_299, $901(%rip)
	LONG $0x01408d49  // leaq         $1(%r8), %rax
	LONG $0x96146348  // movslq       (%rsi,%rdx,4), %rdx
	WORD $0x0148; BYTE $0xf2  // addq         %rsi, %rdx
	JMP DX
LBB0_249:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	WORD $0x294d; BYTE $0xe3  // subq         %r12, %r11
	LONG $0xfffb8348  // cmpq         $-1, %rbx
	LONG $0x0bff850f; WORD $0x0000  // jne          LBB0_368, $3071(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894c; BYTE $0xdb  // movq         %r11, %rbx
	LONG $0xffffbce9; BYTE $0xff  // jmp          LBB0_246, $-68(%rip)
LBB0_251:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	WORD $0x294d; BYTE $0xe3  // subq         %r12, %r11
	LONG $0xffff8348  // cmpq         $-1, %rdi
	LONG $0x0be4850f; WORD $0x0000  // jne          LBB0_368, $3044(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894c; BYTE $0xdf  // movq         %r11, %rdi
	LONG $0xffffa1e9; BYTE $0xff  // jmp          LBB0_246, $-95(%rip)
LBB0_253:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	WORD $0x294d; BYTE $0xe3  // subq         %r12, %r11
	LONG $0xfffe8349  // cmpq         $-1, %r14
	LONG $0x0bc9850f; WORD $0x0000  // jne          LBB0_368, $3017(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894d; BYTE $0xde  // movq         %r11, %r14
	LONG $0xffff86e9; BYTE $0xff  // jmp          LBB0_246, $-122(%rip)
LBB0_255:
	LONG $0x904d8b48  // movq         $-112(%rbp), %rcx
	LONG $0x08498b48  // movq         $8(%rcx), %rcx
	LONG $0xfc518d48  // leaq         $-4(%rcx), %rdx
	WORD $0x3949; BYTE $0xd7  // cmpq         %rdx, %r15
	LONG $0x116b830f; WORD $0x0000  // jae          LBB0_441, $4459(%rip)
	LONG $0x1a0c8b43  // movl         (%r10,%r11), %ecx
	LONG $0x6c61f981; WORD $0x6573  // cmpl         $1702063201, %ecx
	LONG $0x11af850f; WORD $0x0000  // jne          LBB0_443, $4527(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0x055f8d4d  // leaq         $5(%r15), %r11
	LONG $0x000050e9; BYTE $0x00  // jmp          LBB0_267, $80(%rip)
LBB0_258:
	LONG $0x904d8b48  // movq         $-112(%rbp), %rcx
	LONG $0x08498b48  // movq         $8(%rcx), %rcx
	LONG $0xfd518d48  // leaq         $-3(%rcx), %rdx
	WORD $0x3949; BYTE $0xd7  // cmpq         %rdx, %r15
	LONG $0x113a830f; WORD $0x0000  // jae          LBB0_441, $4410(%rip)
	LONG $0x6e398141; WORD $0x6c75; BYTE $0x6c  // cmpl         $1819047278, (%r9)
	LONG $0x0027840f; WORD $0x0000  // je           LBB0_266, $39(%rip)
	LONG $0x0011d1e9; BYTE $0x00  // jmp          LBB0_260, $4561(%rip)
LBB0_264:
	LONG $0x904d8b48  // movq         $-112(%rbp), %rcx
	LONG $0x08498b48  // movq         $8(%rcx), %rcx
	LONG $0xfd518d48  // leaq         $-3(%rcx), %rdx
	WORD $0x3949; BYTE $0xd7  // cmpq         %rdx, %r15
	LONG $0x1113830f; WORD $0x0000  // jae          LBB0_441, $4371(%rip)
	LONG $0x74398141; WORD $0x7572; BYTE $0x65  // cmpl         $1702195828, (%r9)
	LONG $0x1201850f; WORD $0x0000  // jne          LBB0_448, $4609(%rip)
LBB0_266:
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0x045f8d4d  // leaq         $4(%r15), %r11
LBB0_267:
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xec868f0f; WORD $0xffff  // jg           LBB0_3, $-4986(%rip)
	LONG $0x001271e9; BYTE $0x00  // jmp          LBB0_150, $4721(%rip)
LBB0_268:
	WORD $0x8b49; BYTE $0x00  // movq         (%r8), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x10798f0f; WORD $0x0000  // jg           LBB0_442, $4217(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8949; BYTE $0x08  // movq         %rcx, (%r8)
	QUAD $0x00000608c044c749; BYTE $0x00  // movq         $6, $8(%r8,%rax,8)
	LONG $0xffec5de9; BYTE $0xff  // jmp          LBB0_3, $-5027(%rip)
LBB0_270:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xff458d49  // leaq         $-1(%r13), %rax
	WORD $0xf749; BYTE $0xd5  // notq         %r13
	LONG $0xe9480f4c  // cmovsq       %rcx, %r13
	WORD $0x3949; BYTE $0xc3  // cmpq         %rax, %r11
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	LONG $0xdd440f4d  // cmoveq       %r13, %r11
LBB0_271:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
LBB0_272:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0xec20890f; WORD $0xffff  // jns          LBB0_1, $-5088(%rip)
	LONG $0x001067e9; BYTE $0x00  // jmp          LBB0_273, $4199(%rip)
LBB0_274:
	WORD $0x294d; BYTE $0xda  // subq         %r11, %r10
	LONG $0x1232840f; WORD $0x0000  // je           LBB0_458, $4658(%rip)
	LONG $0xd0458b48  // movq         $-48(%rbp), %rax
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0x0b78820f; WORD $0x0000  // jb           LBB0_376, $2936(%rip)
	WORD $0x8945; BYTE $0xd1  // movl         %r10d, %r9d
	LONG $0x3fe18341  // andl         $63, %r9d
	WORD $0x294d; BYTE $0xfc  // subq         %r15, %r12
	LONG $0xbfc48349  // addq         $-65, %r12
	LONG $0xc0e48349  // andq         $-64, %r12
	WORD $0x0149; BYTE $0xcc  // addq         %rcx, %r12
	LONG $0x8865034c  // addq         $-120(%rbp), %r12
	LONG $0xb865894c  // movq         %r12, $-72(%rbp)
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xe4  // xorl         %r12d, %r12d
	QUAD $0x9090909090909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_277:
	LONG $0x6f0f41f3; BYTE $0x2b  // movdqu       (%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x1073  // movdqu       $16(%r11), %xmm6
	LONG $0x6f0f41f3; WORD $0x2063  // movdqu       $32(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x307b  // movdqu       $48(%r11), %xmm7
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x20e3c148  // shlq         $32, %rbx
	WORD $0x0948; BYTE $0xd8  // orq          %rbx, %rax
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdd640f66  // pcmpgtb      %xmm5, %xmm3
	LONG $0x640f4166; BYTE $0xee  // pcmpgtb      %xmm14, %xmm5
	LONG $0xebdb0f66  // pand         %xmm3, %xmm5
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0949; BYTE $0xfd  // orq          %rdi, %r13
	LONG $0xd70f4466; BYTE $0xf5  // pmovmskb     %xmm5, %r14d
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xde640f66  // pcmpgtb      %xmm6, %xmm3
	LONG $0x640f4166; BYTE $0xf6  // pcmpgtb      %xmm14, %xmm6
	LONG $0xf3db0f66  // pand         %xmm3, %xmm6
	LONG $0x20e1c148  // shlq         $32, %rcx
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	LONG $0xfed70f66  // pmovmskb     %xmm6, %edi
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0x30e3c148  // shlq         $48, %rbx
	WORD $0x0949; BYTE $0xdd  // orq          %rbx, %r13
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdf640f66  // pcmpgtb      %xmm7, %xmm3
	LONG $0x640f4166; BYTE $0xfe  // pcmpgtb      %xmm14, %xmm7
	LONG $0xfbdb0f66  // pand         %xmm3, %xmm7
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0949; BYTE $0xfe  // orq          %rdi, %r14
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0x30e2c148  // shlq         $48, %rdx
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_279, $9(%rip)
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x00a4850f; WORD $0x0000  // jne          LBB0_294, $164(%rip)
LBB0_279:
	LONG $0x30e7c148  // shlq         $48, %rdi
	WORD $0x0949; BYTE $0xce  // orq          %rcx, %r14
	WORD $0x0948; BYTE $0xd0  // orq          %rdx, %rax
	WORD $0x894c; BYTE $0xe9  // movq         %r13, %rcx
	WORD $0x094c; BYTE $0xe1  // orq          %r12, %rcx
	LONG $0x002c850f; WORD $0x0000  // jne          LBB0_295, $44(%rip)
	WORD $0x0949; BYTE $0xfe  // orq          %rdi, %r14
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0095850f; WORD $0x0000  // jne          LBB0_296, $149(%rip)
LBB0_281:
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0x1069850f; WORD $0x0000  // jne          LBB0_453, $4201(%rip)
	LONG $0xc0c28349  // addq         $-64, %r10
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffa8349  // cmpq         $63, %r10
	LONG $0xfeb1870f; WORD $0xffff  // ja           LBB0_277, $-335(%rip)
	LONG $0x0006e9e9; BYTE $0x00  // jmp          LBB0_283, $1769(%rip)
LBB0_295:
	WORD $0x894c; BYTE $0xe1  // movq         %r12, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x214c; BYTE $0xe9  // andq         %r13, %rcx
	LONG $0x804d894c  // movq         %r9, $-128(%rbp)
	LONG $0x090c8d4c  // leaq         (%rcx,%rcx), %r9
	WORD $0x094d; BYTE $0xe1  // orq          %r12, %r9
	WORD $0x894c; BYTE $0xca  // movq         %r9, %rdx
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x214c; BYTE $0xea  // andq         %r13, %rdx
	QUAD $0xaaaaaaaaaaaabb48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rbx
	WORD $0x2148; BYTE $0xda  // andq         %rbx, %rdx
	WORD $0x3145; BYTE $0xe4  // xorl         %r12d, %r12d
	WORD $0x0148; BYTE $0xca  // addq         %rcx, %rdx
	LONG $0xc4920f41  // setb         %r12b
	WORD $0x0148; BYTE $0xd2  // addq         %rdx, %rdx
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x3148; BYTE $0xca  // xorq         %rcx, %rdx
	WORD $0x214c; BYTE $0xca  // andq         %r9, %rdx
	LONG $0x804d8b4c  // movq         $-128(%rbp), %r9
	WORD $0xf748; BYTE $0xd2  // notq         %rdx
	WORD $0x2148; BYTE $0xd0  // andq         %rdx, %rax
	WORD $0x0949; BYTE $0xfe  // orq          %rdi, %r14
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xff83840f; WORD $0xffff  // je           LBB0_281, $-125(%rip)
	LONG $0x000013e9; BYTE $0x00  // jmp          LBB0_296, $19(%rip)
LBB0_294:
	WORD $0x894c; BYTE $0xdb  // movq         %r11, %rbx
	LONG $0xd05d2b48  // subq         $-48(%rbp), %rbx
	LONG $0xc5bc0f4d  // bsfq         %r13, %r8
	WORD $0x0149; BYTE $0xd8  // addq         %rbx, %r8
	LONG $0xffff49e9; BYTE $0xff  // jmp          LBB0_279, $-183(%rip)
LBB0_296:
	LONG $0xc0bc0f48  // bsfq         %rax, %rax
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0x00b2840f; WORD $0x0000  // je           LBB0_311, $178(%rip)
	LONG $0xcebc0f49  // bsfq         %r14, %rcx
	LONG $0x0000aee9; BYTE $0x00  // jmp          LBB0_312, $174(%rip)
LBB0_298:
	WORD $0x0149; BYTE $0xcd  // addq         %rcx, %r13
	WORD $0x894d; BYTE $0xe8  // movq         %r13, %r8
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	LONG $0xb85d8b48  // movq         $-72(%rbp), %rbx
LBB0_299:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0x0e6d840f; WORD $0x0000  // je           LBB0_439, $3693(%rip)
LBB0_300:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0e64840f; WORD $0x0000  // je           LBB0_439, $3684(%rip)
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0x0e57840f; WORD $0x0000  // je           LBB0_439, $3671(%rip)
	WORD $0x294d; BYTE $0xe0  // subq         %r12, %r8
	LONG $0xff408d49  // leaq         $-1(%r8), %rax
	WORD $0x3948; BYTE $0xc7  // cmpq         %rax, %rdi
	LONG $0x0033840f; WORD $0x0000  // je           LBB0_308, $51(%rip)
	WORD $0x3949; BYTE $0xc6  // cmpq         %rax, %r14
	LONG $0x002a840f; WORD $0x0000  // je           LBB0_308, $42(%rip)
	WORD $0x3948; BYTE $0xc3  // cmpq         %rax, %rbx
	LONG $0x0021840f; WORD $0x0000  // je           LBB0_308, $33(%rip)
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x00888e0f; WORD $0x0000  // jle          LBB0_319, $136(%rip)
	LONG $0xff438d48  // leaq         $-1(%rbx), %rax
	WORD $0x3948; BYTE $0xc7  // cmpq         %rax, %rdi
	LONG $0x007b840f; WORD $0x0000  // je           LBB0_319, $123(%rip)
	WORD $0xf748; BYTE $0xd3  // notq         %rbx
	WORD $0x8949; BYTE $0xdb  // movq         %rbx, %r11
	LONG $0x000006e9; BYTE $0x00  // jmp          LBB0_309, $6(%rip)
LBB0_308:
	WORD $0xf749; BYTE $0xd8  // negq         %r8
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
LBB0_309:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x0e05880f; WORD $0x0000  // js           LBB0_439, $3589(%rip)
LBB0_310:
	LONG $0xb04d8b48  // movq         $-80(%rbp), %rcx
	WORD $0x0149; BYTE $0xcb  // addq         %rcx, %r11
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xa0458b4c  // movq         $-96(%rbp), %r8
	LONG $0xe9598f0f; WORD $0xffff  // jg           LBB0_3, $-5799(%rip)
	LONG $0x000f44e9; BYTE $0x00  // jmp          LBB0_150, $3908(%rip)
LBB0_311:
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
LBB0_312:
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0f20820f; WORD $0x0000  // jb           LBB0_148, $3872(%rip)
	LONG $0x035c8d4d; BYTE $0x01  // leaq         $1(%r11,%rax), %r11
LBB0_314:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0xf72f890f; WORD $0xffff  // jns          LBB0_190, $-2257(%rip)
	LONG $0x000dd4e9; BYTE $0x00  // jmp          LBB0_315, $3540(%rip)
LBB0_317:
	WORD $0x294d; BYTE $0xce  // subq         %r9, %r14
	LONG $0xd8bc0f44  // bsfl         %eax, %r11d
	WORD $0x014d; BYTE $0xf3  // addq         %r14, %r11
	WORD $0xf749; BYTE $0xd3  // notq         %r11
LBB0_318:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xa0458b4c  // movq         $-96(%rbp), %r8
	LONG $0xfffcd5e9; BYTE $0xff  // jmp          LBB0_272, $-811(%rip)
LBB0_319:
	WORD $0x894c; BYTE $0xf0  // movq         %r14, %rax
	WORD $0x0948; BYTE $0xf8  // orq          %rdi, %rax
	WORD $0x3949; BYTE $0xfe  // cmpq         %rdi, %r14
	LONG $0x01938c0f; WORD $0x0000  // jl           LBB0_322, $403(%rip)
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x018a880f; WORD $0x0000  // js           LBB0_322, $394(%rip)
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x894d; BYTE $0xf3  // movq         %r14, %r11
	LONG $0xffff73e9; BYTE $0xff  // jmp          LBB0_309, $-141(%rip)
LBB0_50:
	LONG $0x805d8b4c  // movq         $-128(%rbp), %r11
	LONG $0xb86d8b4c  // movq         $-72(%rbp), %r13
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0x08fb820f; WORD $0x0000  // jb           LBB0_381, $2299(%rip)
LBB0_51:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xfdd70f66  // pmovmskb     %xmm5, %edi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e2c148  // shlq         $16, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_53, $9(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0849850f; WORD $0x0000  // jne          LBB0_378, $2121(%rip)
LBB0_53:
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0x0857850f; WORD $0x0000  // jne          LBB0_379, $2135(%rip)
LBB0_54:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x088a840f; WORD $0x0000  // je           LBB0_380, $2186(%rip)
LBB0_55:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
	LONG $0xffec40e9; BYTE $0xff  // jmp          LBB0_59, $-5056(%rip)
LBB0_110:
	WORD $0x894d; BYTE $0xe3  // movq         %r12, %r11
	LONG $0xb8458b48  // movq         $-72(%rbp), %rax
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0x06ac820f; WORD $0x0000  // jb           LBB0_364, $1708(%rip)
LBB0_111:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd70f4466; BYTE $0xd5  // pmovmskb     %xmm5, %r10d
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0x640f4166; BYTE $0xde  // pcmpgtb      %xmm14, %xmm3
	LONG $0xdddb0f66  // pand         %xmm5, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0xfcd70f66  // pmovmskb     %xmm4, %edi
	LONG $0x10e3c148  // shlq         $16, %rbx
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_113, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0880850f; WORD $0x0000  // jne          LBB0_389, $2176(%rip)
LBB0_113:
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x094c; BYTE $0xd3  // orq          %r10, %rbx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	LONG $0x0741850f; WORD $0x0000  // jne          LBB0_377, $1857(%rip)
LBB0_114:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x094c; BYTE $0xf7  // orq          %r14, %rdi
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0x000040ba; BYTE $0x00  // movl         $64, %edx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_116, $4(%rip)
	LONG $0xd3bc0f48  // bsfq         %rbx, %rdx
LBB0_116:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_118, $4(%rip)
	LONG $0xcfbc0f48  // bsfq         %rdi, %rcx
LBB0_118:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x01da840f; WORD $0x0000  // je           LBB0_325, $474(%rip)
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0d5b820f; WORD $0x0000  // jb           LBB0_148, $3419(%rip)
	LONG $0x135c8d4d; BYTE $0x01  // leaq         $1(%r11,%rdx), %r11
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	LONG $0xfff561e9; BYTE $0xff  // jmp          LBB0_189, $-2719(%rip)
LBB0_322:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xff478d48  // leaq         $-1(%rdi), %rax
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	LONG $0xf8480f49  // cmovsq       %r8, %rdi
	WORD $0x3949; BYTE $0xc6  // cmpq         %rax, %r14
	LONG $0xf8450f49  // cmovneq      %r8, %rdi
	WORD $0x8949; BYTE $0xfb  // movq         %rdi, %r11
	LONG $0xfffdd7e9; BYTE $0xff  // jmp          LBB0_309, $-553(%rip)
LBB0_323:
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0xfffb03e9; BYTE $0xff  // jmp          LBB0_271, $-1277(%rip)
LBB0_324:
	LONG $0xb04d8948  // movq         %rcx, $-80(%rbp)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xf263850f; WORD $0xffff  // jne          LBB0_154, $-3485(%rip)
	LONG $0x000b6ae9; BYTE $0x00  // jmp          LBB0_430, $2922(%rip)
LBB0_135:
	LONG $0x805d8b4c  // movq         $-128(%rbp), %r11
	LONG $0xb86d8b4c  // movq         $-72(%rbp), %r13
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0x08ae820f; WORD $0x0000  // jb           LBB0_396, $2222(%rip)
LBB0_136:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xfdd70f66  // pmovmskb     %xmm5, %edi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e2c148  // shlq         $16, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_138, $9(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x07fc850f; WORD $0x0000  // jne          LBB0_393, $2044(%rip)
LBB0_138:
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0x080a850f; WORD $0x0000  // jne          LBB0_394, $2058(%rip)
LBB0_139:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x083d840f; WORD $0x0000  // je           LBB0_395, $2109(%rip)
LBB0_140:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
	LONG $0xfff170e9; BYTE $0xff  // jmp          LBB0_144, $-3728(%rip)
LBB0_172:
	WORD $0x894d; BYTE $0xe3  // movq         %r12, %r11
	LONG $0xb8458b48  // movq         $-72(%rbp), %rax
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0x0577820f; WORD $0x0000  // jb           LBB0_371, $1399(%rip)
LBB0_173:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd70f4466; BYTE $0xd5  // pmovmskb     %xmm5, %r10d
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0x640f4166; BYTE $0xde  // pcmpgtb      %xmm14, %xmm3
	LONG $0xdddb0f66  // pand         %xmm5, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0xfcd70f66  // pmovmskb     %xmm4, %edi
	LONG $0x10e3c148  // shlq         $16, %rbx
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_175, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0833850f; WORD $0x0000  // jne          LBB0_404, $2099(%rip)
LBB0_175:
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x094c; BYTE $0xd3  // orq          %r10, %rbx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	LONG $0x06c0850f; WORD $0x0000  // jne          LBB0_390, $1728(%rip)
LBB0_176:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x094c; BYTE $0xf7  // orq          %r14, %rdi
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0x000040ba; BYTE $0x00  // movl         $64, %edx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_178, $4(%rip)
	LONG $0xd3bc0f48  // bsfq         %rbx, %rdx
LBB0_178:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_180, $4(%rip)
	LONG $0xcfbc0f48  // bsfq         %rdi, %rcx
LBB0_180:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x00ce840f; WORD $0x0000  // je           LBB0_336, $206(%rip)
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0b9b820f; WORD $0x0000  // jb           LBB0_148, $2971(%rip)
	LONG $0x135c8d4d; BYTE $0x01  // leaq         $1(%r11,%rdx), %r11
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	LONG $0xfff3fee9; BYTE $0xff  // jmp          LBB0_196, $-3074(%rip)
LBB0_325:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0bc5850f; WORD $0x0000  // jne          LBB0_460, $3013(%rip)
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c08348  // addq         $-32, %rax
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0x03f9850f; WORD $0x0000  // jne          LBB0_365, $1017(%rip)
LBB0_327:
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x09a6840f; WORD $0x0000  // je           LBB0_428, $2470(%rip)
LBB0_328:
	LONG $0x0bb60f41  // movzbl       (%r11), %ecx
	WORD $0xf980; BYTE $0x22  // cmpb         $34, %cl
	LONG $0x0077840f; WORD $0x0000  // je           LBB0_335, $119(%rip)
	WORD $0xf980; BYTE $0x5c  // cmpb         $92, %cl
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_332, $38(%rip)
	WORD $0xf980; BYTE $0x1f  // cmpb         $31, %cl
	LONG $0x0b91860f; WORD $0x0000  // jbe          LBB0_459, $2961(%rip)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xffc9850f; WORD $0xffff  // jne          LBB0_328, $-55(%rip)
	LONG $0x00096ae9; BYTE $0x00  // jmp          LBB0_428, $2410(%rip)
LBB0_332:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x0b72840f; WORD $0x0000  // je           LBB0_464, $2930(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x294c; BYTE $0xd1  // subq         %r10, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x000002ba; BYTE $0x00  // movl         $2, %edx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xff8c850f; WORD $0xffff  // jne          LBB0_328, $-116(%rip)
	LONG $0x00092de9; BYTE $0x00  // jmp          LBB0_428, $2349(%rip)
LBB0_334:
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0xfffbe2e9; BYTE $0xff  // jmp          LBB0_318, $-1054(%rip)
LBB0_335:
	LONG $0x985d034c  // addq         $-104(%rbp), %r11
	LONG $0xfff2ede9; BYTE $0xff  // jmp          LBB0_189, $-3347(%rip)
LBB0_336:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0b11850f; WORD $0x0000  // jne          LBB0_460, $2833(%rip)
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c08348  // addq         $-32, %rax
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0x03d0850f; WORD $0x0000  // jne          LBB0_372, $976(%rip)
LBB0_338:
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x08f2840f; WORD $0x0000  // je           LBB0_428, $2290(%rip)
LBB0_339:
	LONG $0x0bb60f41  // movzbl       (%r11), %ecx
	WORD $0xf980; BYTE $0x22  // cmpb         $34, %cl
	LONG $0x0099840f; WORD $0x0000  // je           LBB0_349, $153(%rip)
	WORD $0xf980; BYTE $0x5c  // cmpb         $92, %cl
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_343, $38(%rip)
	WORD $0xf980; BYTE $0x1f  // cmpb         $31, %cl
	LONG $0x0add860f; WORD $0x0000  // jbe          LBB0_459, $2781(%rip)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xffc9850f; WORD $0xffff  // jne          LBB0_339, $-55(%rip)
	LONG $0x0008b6e9; BYTE $0x00  // jmp          LBB0_428, $2230(%rip)
LBB0_343:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x0abe840f; WORD $0x0000  // je           LBB0_464, $2750(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x294c; BYTE $0xd1  // subq         %r10, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x000002ba; BYTE $0x00  // movl         $2, %edx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xff8c850f; WORD $0xffff  // jne          LBB0_339, $-116(%rip)
	LONG $0x000879e9; BYTE $0x00  // jmp          LBB0_428, $2169(%rip)
LBB0_345:
	WORD $0xf748; BYTE $0xd8  // negq         %rax
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0xfff80ce9; BYTE $0xff  // jmp          LBB0_272, $-2036(%rip)
LBB0_346:
	WORD $0x294d; BYTE $0xe5  // subq         %r12, %r13
	LONG $0xdfbc0f44  // bsfl         %edi, %r11d
	WORD $0x014d; BYTE $0xeb  // addq         %r13, %r11
LBB0_347:
	WORD $0xf749; BYTE $0xd3  // notq         %r11
LBB0_348:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xfffab3e9; BYTE $0xff  // jmp          LBB0_309, $-1357(%rip)
LBB0_349:
	LONG $0x985d034c  // addq         $-104(%rbp), %r11
	LONG $0xfff274e9; BYTE $0xff  // jmp          LBB0_196, $-3468(%rip)
LBB0_211:
	WORD $0x894d; BYTE $0xe3  // movq         %r12, %r11
	LONG $0xb8558b4c  // movq         $-72(%rbp), %r10
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0x0718820f; WORD $0x0000  // jb           LBB0_411, $1816(%rip)
LBB0_212:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xfdd70f66  // pmovmskb     %xmm5, %edi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e2c148  // shlq         $16, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_214, $9(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0664850f; WORD $0x0000  // jne          LBB0_408, $1636(%rip)
LBB0_214:
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x0672850f; WORD $0x0000  // jne          LBB0_409, $1650(%rip)
LBB0_215:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x06a7840f; WORD $0x0000  // je           LBB0_410, $1703(%rip)
LBB0_216:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
	LONG $0xfff408e9; BYTE $0xff  // jmp          LBB0_220, $-3064(%rip)
LBB0_283:
	LONG $0xb85d8b4c  // movq         $-72(%rbp), %r11
	WORD $0x894d; BYTE $0xca  // movq         %r9, %r10
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0x012f820f; WORD $0x0000  // jb           LBB0_354, $303(%rip)
LBB0_284:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xc5d70f66  // pmovmskb     %xmm5, %eax
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0x640f4166; BYTE $0xde  // pcmpgtb      %xmm14, %xmm3
	LONG $0xdddb0f66  // pand         %xmm5, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0xfcd70f66  // pmovmskb     %xmm4, %edi
	LONG $0x10e0c148  // shlq         $16, %rax
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_286, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0696850f; WORD $0x0000  // jne          LBB0_419, $1686(%rip)
LBB0_286:
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xc8  // orq          %rcx, %rax
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x094c; BYTE $0xe1  // orq          %r12, %rcx
	LONG $0x0560850f; WORD $0x0000  // jne          LBB0_407, $1376(%rip)
LBB0_287:
	WORD $0x094c; BYTE $0xf7  // orq          %r14, %rdi
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0x000040ba; BYTE $0x00  // movl         $64, %edx
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_289, $4(%rip)
	LONG $0xd0bc0f48  // bsfq         %rax, %rdx
LBB0_289:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_291, $4(%rip)
	LONG $0xcfbc0f48  // bsfq         %rdi, %rcx
LBB0_291:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0057840f; WORD $0x0000  // je           LBB0_352, $87(%rip)
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0898820f; WORD $0x0000  // jb           LBB0_148, $2200(%rip)
	LONG $0x135c8d4d; BYTE $0x01  // leaq         $1(%r11,%rdx), %r11
	LONG $0xfff973e9; BYTE $0xff  // jmp          LBB0_314, $-1677(%rip)
LBB0_350:
	WORD $0x8949; BYTE $0xc8  // movq         %rcx, %r8
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xf8bf850f; WORD $0xffff  // jne          LBB0_300, $-1857(%rip)
	LONG $0x000727e9; BYTE $0x00  // jmp          LBB0_439, $1831(%rip)
LBB0_351:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	LONG $0xb04d894c  // movq         %r9, $-80(%rbp)
	WORD $0x8948; BYTE $0xfe  // movq         %rdi, %rsi
	LONG $0xffc5c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r13
	LONG $0xffc2c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r10
	LONG $0xffe889e9; BYTE $0xff  // jmp          LBB0_91, $-6007(%rip)
LBB0_352:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x08a3850f; WORD $0x0000  // jne          LBB0_461, $2211(%rip)
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c28349  // addq         $-32, %r10
LBB0_354:
	WORD $0x854d; BYTE $0xe4  // testq        %r12, %r12
	LONG $0x0621850f; WORD $0x0000  // jne          LBB0_423, $1569(%rip)
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x06ff840f; WORD $0x0000  // je           LBB0_316, $1791(%rip)
LBB0_356:
	LONG $0x0bb60f41  // movzbl       (%r11), %ecx
	WORD $0xf980; BYTE $0x22  // cmpb         $34, %cl
	LONG $0x00df840f; WORD $0x0000  // je           LBB0_367, $223(%rip)
	WORD $0xf980; BYTE $0x5c  // cmpb         $92, %cl
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_360, $38(%rip)
	WORD $0xf980; BYTE $0x1f  // cmpb         $31, %cl
	LONG $0x0873860f; WORD $0x0000  // jbe          LBB0_462, $2163(%rip)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0149; BYTE $0xca  // addq         %rcx, %r10
	LONG $0xffc9850f; WORD $0xffff  // jne          LBB0_356, $-55(%rip)
	LONG $0x0006c3e9; BYTE $0x00  // jmp          LBB0_316, $1731(%rip)
LBB0_360:
	LONG $0x01fa8349  // cmpq         $1, %r10
	LONG $0x0820840f; WORD $0x0000  // je           LBB0_422, $2080(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd04d2b48  // subq         $-48(%rbp), %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x000002ba; BYTE $0x00  // movl         $2, %edx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0149; BYTE $0xca  // addq         %rcx, %r10
	LONG $0xff8f850f; WORD $0xffff  // jne          LBB0_356, $-113(%rip)
	LONG $0x000689e9; BYTE $0x00  // jmp          LBB0_316, $1673(%rip)
LBB0_362:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xf8ea830f; WORD $0xffff  // jae          LBB0_51, $-1814(%rip)
	LONG $0x0001e0e9; BYTE $0x00  // jmp          LBB0_381, $480(%rip)
LBB0_363:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0xf954830f; WORD $0xffff  // jae          LBB0_111, $-1708(%rip)
LBB0_364:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0xfc07840f; WORD $0xffff  // je           LBB0_327, $-1017(%rip)
LBB0_365:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x07de840f; WORD $0x0000  // je           LBB0_463, $2014(%rip)
	LONG $0xa84d8b48  // movq         $-88(%rbp), %rcx
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xfbe1850f; WORD $0xffff  // jne          LBB0_328, $-1055(%rip)
	LONG $0x000582e9; BYTE $0x00  // jmp          LBB0_428, $1410(%rip)
LBB0_367:
	LONG $0x985d034c  // addq         $-104(%rbp), %r11
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xfff81ae9; BYTE $0xff  // jmp          LBB0_314, $-2022(%rip)
LBB0_368:
	WORD $0xf749; BYTE $0xdb  // negq         %r11
	LONG $0xfffd14e9; BYTE $0xff  // jmp          LBB0_348, $-748(%rip)
LBB0_369:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xfa1f830f; WORD $0xffff  // jae          LBB0_136, $-1505(%rip)
	LONG $0x0002c8e9; BYTE $0x00  // jmp          LBB0_396, $712(%rip)
LBB0_370:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0xfa89830f; WORD $0xffff  // jae          LBB0_173, $-1399(%rip)
LBB0_371:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0xfc30840f; WORD $0xffff  // je           LBB0_338, $-976(%rip)
LBB0_372:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0753840f; WORD $0x0000  // je           LBB0_463, $1875(%rip)
	LONG $0xa84d8b48  // movq         $-88(%rbp), %rcx
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xfc0a850f; WORD $0xffff  // jne          LBB0_339, $-1014(%rip)
	LONG $0x0004f7e9; BYTE $0x00  // jmp          LBB0_428, $1271(%rip)
LBB0_374:
	LONG $0xffc6c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r14
	WORD $0x894d; BYTE $0xe0  // movq         %r12, %r8
	WORD $0x894d; BYTE $0xca  // movq         %r9, %r10
	LONG $0xffc7c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rdi
	LONG $0xffc3c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rbx
	LONG $0x18358d48; WORD $0x0009; BYTE $0x00  // leaq         $2328(%rip), %rsi  /* LJTI0_2+0(%rip) */
	LONG $0xfff30ee9; BYTE $0xff  // jmp          LBB0_245, $-3314(%rip)
LBB0_375:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0xfc8a830f; WORD $0xffff  // jae          LBB0_212, $-886(%rip)
	LONG $0x00039de9; BYTE $0x00  // jmp          LBB0_411, $925(%rip)
LBB0_376:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xe4  // xorl         %r12d, %r12d
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0xfcf4830f; WORD $0xffff  // jae          LBB0_284, $-780(%rip)
	LONG $0xfffe1ee9; BYTE $0xff  // jmp          LBB0_354, $-482(%rip)
LBB0_377:
	WORD $0x8945; BYTE $0xcc  // movl         %r9d, %r12d
	WORD $0xf741; BYTE $0xd4  // notl         %r12d
	WORD $0x2141; BYTE $0xd4  // andl         %edx, %r12d
	LONG $0x24148d47  // leal         (%r12,%r12), %r10d
	WORD $0x0945; BYTE $0xca  // orl          %r9d, %r10d
	LONG $0xaaaaaab9; BYTE $0xaa  // movl         $2863311530, %ecx
	WORD $0x3144; BYTE $0xd1  // xorl         %r10d, %ecx
	WORD $0xd121  // andl         %edx, %ecx
	LONG $0xaaaae181; WORD $0xaaaa  // andl         $-1431655766, %ecx
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x0144; BYTE $0xe1  // addl         %r12d, %ecx
	LONG $0xc1920f41  // setb         %r9b
	WORD $0xc901  // addl         %ecx, %ecx
	LONG $0x5555f181; WORD $0x5555  // xorl         $1431655765, %ecx
	WORD $0x2144; BYTE $0xd1  // andl         %r10d, %ecx
	WORD $0xd1f7  // notl         %ecx
	WORD $0xcb21  // andl         %ecx, %ebx
	LONG $0xfff881e9; BYTE $0xff  // jmp          LBB0_114, $-1919(%rip)
LBB0_378:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc1bc0f4c  // bsfq         %rcx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0xf7a9840f; WORD $0xffff  // je           LBB0_54, $-2135(%rip)
LBB0_379:
	WORD $0x8944; BYTE $0xd0  // movl         %r10d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	WORD $0x348d; BYTE $0x00  // leal         (%rax,%rax), %esi
	WORD $0x0944; BYTE $0xd6  // orl          %r10d, %esi
	LONG $0xaaaaaabf; BYTE $0xaa  // movl         $2863311530, %edi
	WORD $0xf731  // xorl         %esi, %edi
	WORD $0xcf21  // andl         %ecx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0xc701  // addl         %eax, %edi
	LONG $0xc2920f41  // setb         %r10b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xf721  // andl         %esi, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xfa21  // andl         %edi, %edx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xf776850f; WORD $0xffff  // jne          LBB0_55, $-2186(%rip)
LBB0_380:
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c58349  // addq         $-32, %r13
LBB0_381:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x00d5850f; WORD $0x0000  // jne          LBB0_391, $213(%rip)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x03e5840f; WORD $0x0000  // je           LBB0_428, $997(%rip)
LBB0_383:
	LONG $0x014b8d49  // leaq         $1(%r11), %rcx
	LONG $0x1bb60f41  // movzbl       (%r11), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x0057840f; WORD $0x0000  // je           LBB0_388, $87(%rip)
	LONG $0xff558d49  // leaq         $-1(%r13), %rdx
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_386, $20(%rip)
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_383, $-45(%rip)
	LONG $0x0003b3e9; BYTE $0x00  // jmp          LBB0_428, $947(%rip)
LBB0_386:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x05bc840f; WORD $0x0000  // je           LBB0_464, $1468(%rip)
	LONG $0xa84d0348  // addq         $-88(%rbp), %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0x02c38349  // addq         $2, %r11
	LONG $0xfec58349  // addq         $-2, %r13
	WORD $0x894c; BYTE $0xea  // movq         %r13, %rdx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xff9d850f; WORD $0xffff  // jne          LBB0_383, $-99(%rip)
	LONG $0x00037de9; BYTE $0x00  // jmp          LBB0_428, $893(%rip)
LBB0_388:
	WORD $0x294c; BYTE $0xd1  // subq         %r10, %rcx
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	LONG $0xffed46e9; BYTE $0xff  // jmp          LBB0_189, $-4794(%rip)
LBB0_389:
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd04d2b48  // subq         $-48(%rbp), %rcx
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc8  // addq         %rcx, %r8
	LONG $0xfff76de9; BYTE $0xff  // jmp          LBB0_113, $-2195(%rip)
LBB0_390:
	WORD $0x8945; BYTE $0xcc  // movl         %r9d, %r12d
	WORD $0xf741; BYTE $0xd4  // notl         %r12d
	WORD $0x2141; BYTE $0xd4  // andl         %edx, %r12d
	LONG $0x24148d47  // leal         (%r12,%r12), %r10d
	WORD $0x0945; BYTE $0xca  // orl          %r9d, %r10d
	LONG $0xaaaaaab9; BYTE $0xaa  // movl         $2863311530, %ecx
	WORD $0x3144; BYTE $0xd1  // xorl         %r10d, %ecx
	WORD $0xd121  // andl         %edx, %ecx
	LONG $0xaaaae181; WORD $0xaaaa  // andl         $-1431655766, %ecx
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x0144; BYTE $0xe1  // addl         %r12d, %ecx
	LONG $0xc1920f41  // setb         %r9b
	WORD $0xc901  // addl         %ecx, %ecx
	LONG $0x5555f181; WORD $0x5555  // xorl         $1431655765, %ecx
	WORD $0x2144; BYTE $0xd1  // andl         %r10d, %ecx
	WORD $0xd1f7  // notl         %ecx
	WORD $0xcb21  // andl         %ecx, %ebx
	LONG $0xfff902e9; BYTE $0xff  // jmp          LBB0_176, $-1790(%rip)
LBB0_391:
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x052a840f; WORD $0x0000  // je           LBB0_464, $1322(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xcd  // decq         %r13
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xff0d850f; WORD $0xffff  // jne          LBB0_383, $-243(%rip)
	LONG $0x0002ede9; BYTE $0x00  // jmp          LBB0_428, $749(%rip)
LBB0_393:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc1bc0f4c  // bsfq         %rcx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xd0  // orq          %r10, %rax
	LONG $0xf7f6840f; WORD $0xffff  // je           LBB0_139, $-2058(%rip)
LBB0_394:
	WORD $0x8944; BYTE $0xd0  // movl         %r10d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	WORD $0x348d; BYTE $0x00  // leal         (%rax,%rax), %esi
	WORD $0x0944; BYTE $0xd6  // orl          %r10d, %esi
	LONG $0xaaaaaabf; BYTE $0xaa  // movl         $2863311530, %edi
	WORD $0xf731  // xorl         %esi, %edi
	WORD $0xcf21  // andl         %ecx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0xc701  // addl         %eax, %edi
	LONG $0xc2920f41  // setb         %r10b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xf721  // andl         %esi, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xfa21  // andl         %edi, %edx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xf7c3850f; WORD $0xffff  // jne          LBB0_140, $-2109(%rip)
LBB0_395:
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c58349  // addq         $-32, %r13
LBB0_396:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0097850f; WORD $0x0000  // jne          LBB0_405, $151(%rip)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x0272840f; WORD $0x0000  // je           LBB0_428, $626(%rip)
LBB0_398:
	LONG $0x014b8d49  // leaq         $1(%r11), %rcx
	LONG $0x1bb60f41  // movzbl       (%r11), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x0057840f; WORD $0x0000  // je           LBB0_403, $87(%rip)
	LONG $0xff558d49  // leaq         $-1(%r13), %rdx
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_401, $20(%rip)
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_398, $-45(%rip)
	LONG $0x000240e9; BYTE $0x00  // jmp          LBB0_428, $576(%rip)
LBB0_401:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0449840f; WORD $0x0000  // je           LBB0_464, $1097(%rip)
	LONG $0xa84d0348  // addq         $-88(%rbp), %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0x02c38349  // addq         $2, %r11
	LONG $0xfec58349  // addq         $-2, %r13
	WORD $0x894c; BYTE $0xea  // movq         %r13, %rdx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xff9d850f; WORD $0xffff  // jne          LBB0_398, $-99(%rip)
	LONG $0x00020ae9; BYTE $0x00  // jmp          LBB0_428, $522(%rip)
LBB0_403:
	WORD $0x294c; BYTE $0xd1  // subq         %r10, %rcx
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	LONG $0xffec30e9; BYTE $0xff  // jmp          LBB0_196, $-5072(%rip)
LBB0_404:
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd04d2b48  // subq         $-48(%rbp), %rcx
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc8  // addq         %rcx, %r8
	LONG $0xfff7bae9; BYTE $0xff  // jmp          LBB0_175, $-2118(%rip)
LBB0_405:
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x03f5840f; WORD $0x0000  // je           LBB0_464, $1013(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xcd  // decq         %r13
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xff4b850f; WORD $0xffff  // jne          LBB0_398, $-181(%rip)
	LONG $0x0001b8e9; BYTE $0x00  // jmp          LBB0_428, $440(%rip)
LBB0_407:
	WORD $0x8944; BYTE $0xe1  // movl         %r12d, %ecx
	WORD $0xd1f7  // notl         %ecx
	WORD $0xd121  // andl         %edx, %ecx
	LONG $0x090c8d44  // leal         (%rcx,%rcx), %r9d
	WORD $0x0945; BYTE $0xe1  // orl          %r12d, %r9d
	LONG $0xaaaaaabb; BYTE $0xaa  // movl         $2863311530, %ebx
	WORD $0x3144; BYTE $0xcb  // xorl         %r9d, %ebx
	WORD $0xd321  // andl         %edx, %ebx
	LONG $0xaaaae381; WORD $0xaaaa  // andl         $-1431655766, %ebx
	WORD $0x3145; BYTE $0xe4  // xorl         %r12d, %r12d
	WORD $0xcb01  // addl         %ecx, %ebx
	LONG $0xc4920f41  // setb         %r12b
	WORD $0xdb01  // addl         %ebx, %ebx
	LONG $0x5555f381; WORD $0x5555  // xorl         $1431655765, %ebx
	WORD $0x2144; BYTE $0xcb  // andl         %r9d, %ebx
	WORD $0xd3f7  // notl         %ebx
	WORD $0xd821  // andl         %ebx, %eax
	LONG $0xfffa65e9; BYTE $0xff  // jmp          LBB0_287, $-1435(%rip)
LBB0_408:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc1bc0f4c  // bsfq         %rcx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0xf98e840f; WORD $0xffff  // je           LBB0_215, $-1650(%rip)
LBB0_409:
	WORD $0x8944; BYTE $0xc8  // movl         %r9d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	WORD $0x348d; BYTE $0x00  // leal         (%rax,%rax), %esi
	WORD $0x0944; BYTE $0xce  // orl          %r9d, %esi
	WORD $0xf789  // movl         %esi, %edi
	LONG $0xaaaaaabb; BYTE $0xaa  // movl         $2863311530, %ebx
	WORD $0xdf31  // xorl         %ebx, %edi
	WORD $0xcf21  // andl         %ecx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0xc701  // addl         %eax, %edi
	LONG $0xc1920f41  // setb         %r9b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xf721  // andl         %esi, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xfa21  // andl         %edi, %edx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xf959850f; WORD $0xffff  // jne          LBB0_216, $-1703(%rip)
LBB0_410:
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c28349  // addq         $-32, %r10
LBB0_411:
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0x008f850f; WORD $0x0000  // jne          LBB0_420, $143(%rip)
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0300840f; WORD $0x0000  // je           LBB0_422, $768(%rip)
LBB0_413:
	LONG $0x014b8d49  // leaq         $1(%r11), %rcx
	LONG $0x1bb60f41  // movzbl       (%r11), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x004f840f; WORD $0x0000  // je           LBB0_418, $79(%rip)
	LONG $0xff528d49  // leaq         $-1(%r10), %rdx
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_416, $20(%rip)
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_413, $-45(%rip)
	LONG $0x0002cee9; BYTE $0x00  // jmp          LBB0_422, $718(%rip)
LBB0_416:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x02c5840f; WORD $0x0000  // je           LBB0_422, $709(%rip)
	LONG $0xa84d0348  // addq         $-88(%rbp), %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0x02c38349  // addq         $2, %r11
	LONG $0xfec28349  // addq         $-2, %r10
	WORD $0x894c; BYTE $0xd2  // movq         %r10, %rdx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffa5850f; WORD $0xffff  // jne          LBB0_413, $-91(%rip)
	LONG $0x0002a0e9; BYTE $0x00  // jmp          LBB0_422, $672(%rip)
LBB0_418:
	LONG $0xd0558b4c  // movq         $-48(%rbp), %r10
	WORD $0x294c; BYTE $0xd1  // subq         %r10, %rcx
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xfff33ae9; BYTE $0xff  // jmp          LBB0_314, $-3270(%rip)
LBB0_419:
	WORD $0x894c; BYTE $0xdb  // movq         %r11, %rbx
	LONG $0xd05d2b48  // subq         $-48(%rbp), %rbx
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xd8  // addq         %rbx, %r8
	LONG $0xfff957e9; BYTE $0xff  // jmp          LBB0_286, $-1705(%rip)
LBB0_420:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0271840f; WORD $0x0000  // je           LBB0_422, $625(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xca  // decq         %r10
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xff53850f; WORD $0xffff  // jne          LBB0_413, $-173(%rip)
	LONG $0x00024ee9; BYTE $0x00  // jmp          LBB0_422, $590(%rip)
LBB0_423:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0245840f; WORD $0x0000  // je           LBB0_422, $581(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	LONG $0x030c8d49  // leaq         (%r11,%rax), %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xca  // decq         %r10
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xf9bc850f; WORD $0xffff  // jne          LBB0_356, $-1604(%rip)
	LONG $0x0000b6e9; BYTE $0x00  // jmp          LBB0_316, $182(%rip)
LBB0_425:
	WORD $0x8948; BYTE $0x16  // movq         %rdx, (%rsi)
LBB0_426:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	LONG $0x0001e9e9; BYTE $0x00  // jmp          LBB0_150, $489(%rip)
LBB0_442:
	LONG $0xf9c0c748; WORD $0xffff; BYTE $0xff  // movq         $-7, %rax
	LONG $0x0001dde9; BYTE $0x00  // jmp          LBB0_150, $477(%rip)
LBB0_427:
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x01cd850f; WORD $0x0000  // jne          LBB0_149, $461(%rip)
LBB0_428:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x894d; BYTE $0xc8  // movq         %r9, %r8
	LONG $0x0001bee9; BYTE $0x00  // jmp          LBB0_149, $446(%rip)
LBB0_429:
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x000003e9; BYTE $0x00  // jmp          LBB0_430, $3(%rip)
LBB0_273:
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
LBB0_430:
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x0149; BYTE $0xcf  // addq         %rcx, %r15
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	WORD $0x894c; BYTE $0x38  // movq         %r15, (%rax)
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	LONG $0x00019ce9; BYTE $0x00  // jmp          LBB0_150, $412(%rip)
LBB0_431:
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_434, $20(%rip)
LBB0_432:
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	LONG $0x000180e9; BYTE $0x00  // jmp          LBB0_149, $384(%rip)
LBB0_441:
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x00017ee9; BYTE $0x00  // jmp          LBB0_150, $382(%rip)
LBB0_434:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
LBB0_435:
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
LBB0_436:
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
LBB0_437:
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	LONG $0x00015fe9; BYTE $0x00  // jmp          LBB0_149, $351(%rip)
LBB0_438:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
LBB0_439:
	WORD $0x294d; BYTE $0xdf  // subq         %r11, %r15
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
LBB0_440:
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	LONG $0x00014ce9; BYTE $0x00  // jmp          LBB0_150, $332(%rip)
LBB0_315:
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x013c850f; WORD $0x0000  // jne          LBB0_149, $316(%rip)
LBB0_316:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	LONG $0xc0458b4c  // movq         $-64(%rbp), %r8
	LONG $0x00012ce9; BYTE $0x00  // jmp          LBB0_149, $300(%rip)
LBB0_443:
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	WORD $0xf980; BYTE $0x61  // cmpb         $97, %cl
	LONG $0x0122850f; WORD $0x0000  // jne          LBB0_150, $290(%rip)
	LONG $0x024f8d49  // leaq         $2(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x6c02  // cmpb         $108, $2(%r10,%r15)
	LONG $0x010f850f; WORD $0x0000  // jne          LBB0_150, $271(%rip)
	LONG $0x034f8d49  // leaq         $3(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x7303  // cmpb         $115, $3(%r10,%r15)
	LONG $0x00fc850f; WORD $0x0000  // jne          LBB0_150, $252(%rip)
	LONG $0x044f8d49  // leaq         $4(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x6504  // cmpb         $101, $4(%r10,%r15)
	LONG $0x00e9850f; WORD $0x0000  // jne          LBB0_150, $233(%rip)
	LONG $0x05c78349  // addq         $5, %r15
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0x0000dde9; BYTE $0x00  // jmp          LBB0_150, $221(%rip)
LBB0_260:
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	LONG $0x6e398041  // cmpb         $110, (%r9)
	LONG $0x00c9850f; WORD $0x0000  // jne          LBB0_150, $201(%rip)
	LONG $0x014f8d49  // leaq         $1(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x7501  // cmpb         $117, $1(%r10,%r15)
	LONG $0x00b6850f; WORD $0x0000  // jne          LBB0_150, $182(%rip)
	LONG $0x024f8d49  // leaq         $2(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x6c02  // cmpb         $108, $2(%r10,%r15)
	LONG $0x00a3850f; WORD $0x0000  // jne          LBB0_150, $163(%rip)
	LONG $0x034f8d49  // leaq         $3(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x6c03  // cmpb         $108, $3(%r10,%r15)
	LONG $0x0090850f; WORD $0x0000  // jne          LBB0_150, $144(%rip)
	LONG $0x00004de9; BYTE $0x00  // jmp          LBB0_452, $77(%rip)
LBB0_448:
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	LONG $0x74398041  // cmpb         $116, (%r9)
	LONG $0x0077850f; WORD $0x0000  // jne          LBB0_150, $119(%rip)
	LONG $0x014f8d49  // leaq         $1(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x7201  // cmpb         $114, $1(%r10,%r15)
	LONG $0x0064850f; WORD $0x0000  // jne          LBB0_150, $100(%rip)
	LONG $0x024f8d49  // leaq         $2(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x7502  // cmpb         $117, $2(%r10,%r15)
	LONG $0x0051850f; WORD $0x0000  // jne          LBB0_150, $81(%rip)
	LONG $0x034f8d49  // leaq         $3(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3a7c8043; WORD $0x6503  // cmpb         $101, $3(%r10,%r15)
	LONG $0x003e850f; WORD $0x0000  // jne          LBB0_150, $62(%rip)
LBB0_452:
	LONG $0x04c78349  // addq         $4, %r15
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0x000032e9; BYTE $0x00  // jmp          LBB0_150, $50(%rip)
LBB0_456:
	WORD $0x894d; BYTE $0xd9  // movq         %r11, %r9
	LONG $0xfffe57e9; BYTE $0xff  // jmp          LBB0_428, $-425(%rip)
LBB0_453:
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xfe8e850f; WORD $0xffff  // jne          LBB0_432, $-370(%rip)
	LONG $0xc6bc0f49  // bsfq         %r14, %rax
LBB0_455:
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	LONG $0xfffe9ce9; BYTE $0xff  // jmp          LBB0_436, $-356(%rip)
LBB0_148:
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	WORD $0x8949; BYTE $0xc8  // movq         %rcx, %r8
LBB0_149:
	WORD $0x894c; BYTE $0x06  // movq         %r8, (%rsi)
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
LBB0_150:
	LONG $0x70c48348  // addq         $112, %rsp
	BYTE $0x5b  // popq         %rbx
	WORD $0x5c41  // popq         %r12
	WORD $0x5d41  // popq         %r13
	WORD $0x5e41  // popq         %r14
	WORD $0x5f41  // popq         %r15
	BYTE $0x5d  // popq         %rbp
	BYTE $0xc3  // retq         
LBB0_457:
	LONG $0xc05d894c  // movq         %r11, $-64(%rbp)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xfffea2e9; BYTE $0xff  // jmp          LBB0_316, $-350(%rip)
LBB0_458:
	LONG $0xc05d894c  // movq         %r11, $-64(%rbp)
	LONG $0xfffe99e9; BYTE $0xff  // jmp          LBB0_316, $-359(%rip)
LBB0_422:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xfffe90e9; BYTE $0xff  // jmp          LBB0_316, $-368(%rip)
LBB0_460:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
	LONG $0xfffe4fe9; BYTE $0xff  // jmp          LBB0_435, $-433(%rip)
LBB0_459:
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	LONG $0xfffe4de9; BYTE $0xff  // jmp          LBB0_437, $-435(%rip)
LBB0_464:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xfffde5e9; BYTE $0xff  // jmp          LBB0_428, $-539(%rip)
LBB0_461:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
	LONG $0xffff93e9; BYTE $0xff  // jmp          LBB0_455, $-109(%rip)
LBB0_462:
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	LONG $0xfffe32e9; BYTE $0xff  // jmp          LBB0_437, $-462(%rip)
LBB0_463:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xc04d8b4c  // movq         $-64(%rbp), %r9
	LONG $0xfffdc6e9; BYTE $0xff  // jmp          LBB0_428, $-570(%rip)
	BYTE $0x90  // .p2align 2, 0x90
	// .set L0_0_set_34, LBB0_34-LJTI0_0
	// .set L0_0_set_60, LBB0_60-LJTI0_0
	// .set L0_0_set_40, LBB0_40-LJTI0_0
	// .set L0_0_set_62, LBB0_62-LJTI0_0
	// .set L0_0_set_37, LBB0_37-LJTI0_0
	// .set L0_0_set_65, LBB0_65-LJTI0_0
LJTI0_0:
	LONG $0xffffdb89  // .long L0_0_set_34
	LONG $0xffffdd91  // .long L0_0_set_60
	LONG $0xffffdbbf  // .long L0_0_set_40
	LONG $0xffffddbc  // .long L0_0_set_62
	LONG $0xffffdba0  // .long L0_0_set_37
	LONG $0xffffe04d  // .long L0_0_set_65
	// .set L0_1_set_150, LBB0_150-LJTI0_1
	// .set L0_1_set_440, LBB0_440-LJTI0_1
	// .set L0_1_set_202, LBB0_202-LJTI0_1
	// .set L0_1_set_221, LBB0_221-LJTI0_1
	// .set L0_1_set_67, LBB0_67-LJTI0_1
	// .set L0_1_set_200, LBB0_200-LJTI0_1
	// .set L0_1_set_255, LBB0_255-LJTI0_1
	// .set L0_1_set_258, LBB0_258-LJTI0_1
	// .set L0_1_set_264, LBB0_264-LJTI0_1
	// .set L0_1_set_268, LBB0_268-LJTI0_1
LJTI0_1:
	LONG $0xffffff80  // .long L0_1_set_150
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffe844  // .long L0_1_set_202
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffea09  // .long L0_1_set_221
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xffffdddc  // .long L0_1_set_67
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffe820  // .long L0_1_set_200
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffec7a  // .long L0_1_set_255
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffecab  // .long L0_1_set_258
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffecd2  // .long L0_1_set_264
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xfffffe28  // .long L0_1_set_440
	LONG $0xffffed0f  // .long L0_1_set_268
	// .set L0_2_set_249, LBB0_249-LJTI0_2
	// .set L0_2_set_299, LBB0_299-LJTI0_2
	// .set L0_2_set_253, LBB0_253-LJTI0_2
	// .set L0_2_set_246, LBB0_246-LJTI0_2
	// .set L0_2_set_251, LBB0_251-LJTI0_2
LJTI0_2:
	LONG $0xffffea39  // .long L0_2_set_249
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffea39  // .long L0_2_set_249
	LONG $0xffffea6f  // .long L0_2_set_253
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffea10  // .long L0_2_set_246
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffea54  // .long L0_2_set_251
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffedb1  // .long L0_2_set_299
	LONG $0xffffea54  // .long L0_2_set_251
	// .set L0_3_set_97, LBB0_97-LJTI0_3
	// .set L0_3_set_152, LBB0_152-LJTI0_3
	// .set L0_3_set_99, LBB0_99-LJTI0_3
	// .set L0_3_set_94, LBB0_94-LJTI0_3
	// .set L0_3_set_92, LBB0_92-LJTI0_3
LJTI0_3:
	LONG $0xffffdd23  // .long L0_3_set_97
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffdd23  // .long L0_3_set_97
	LONG $0xffffdd3e  // .long L0_3_set_99
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffdcf4  // .long L0_3_set_94
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffdcd6  // .long L0_3_set_92
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffe1cf  // .long L0_3_set_152
	LONG $0xffffdcd6  // .long L0_3_set_92
	  // .p2align 2, 0x00
_MASK_USE_NUMBER:
	LONG $0x00000002  // .long 2

TEXT Â·__skip_one(SB), NOSPLIT | NOFRAME, $0 - 40
	NO_LOCAL_POINTERS

_entry:
	MOVQ (TLS), R14
	LEAQ -160(SP), R12
	CMPQ R12, 16(R14)
	JBE  _stack_grow

_skip_one:
	MOVQ s+0(FP), DI
	MOVQ p+8(FP), SI
	MOVQ m+16(FP), DX
	MOVQ flags+24(FP), CX
	CALL Â·__skip_one_entry+192(SB)  // _skip_one
	MOVQ AX, ret+32(FP)
	RET

_stack_grow:
	CALL runtimeÂ·morestack_noctxt<>(SB)
	JMP  _entry
