// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

#include "go_asm.h"
#include "funcdata.h"
#include "textflag.h"

TEXT Â·__skip_array_entry(SB), NOSPLIT, $152
	NO_LOCAL_POINTERS
	LONG $0xe20d8d4c; WORD $0xffff; BYTE $0xff  // leaq         $-30(%rip), %r9
	QUAD $0x000000a8248c894c  // movq         %r9, $168(%rsp)
	LONG $0xa0c48148; WORD $0x0000; BYTE $0x00  // addq         $160, %rsp
	BYTE $0xc3  // retq         
	BYTE $0x00
	BYTE $0x00
	  // .p2align 4, 0x00
LCPI0_0:
	QUAD $0x0000000000000001  // .quad 1
	QUAD $0x0000000000000005  // .quad 5
LCPI0_1:
	QUAD $0x2222222222222222; QUAD $0x2222222222222222  // .space 16, '""""""""""""""""'
LCPI0_2:
	QUAD $0x5c5c5c5c5c5c5c5c; QUAD $0x5c5c5c5c5c5c5c5c  // .space 16, '\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
LCPI0_3:
	QUAD $0x2020202020202020; QUAD $0x2020202020202020  // .space 16, '                '
LCPI0_4:
	QUAD $0x2f2f2f2f2f2f2f2f; QUAD $0x2f2f2f2f2f2f2f2f  // .space 16, '////////////////'
LCPI0_5:
	QUAD $0x3a3a3a3a3a3a3a3a; QUAD $0x3a3a3a3a3a3a3a3a  // .space 16, '::::::::::::::::'
LCPI0_6:
	QUAD $0x2b2b2b2b2b2b2b2b; QUAD $0x2b2b2b2b2b2b2b2b  // .space 16, '++++++++++++++++'
LCPI0_7:
	QUAD $0x2d2d2d2d2d2d2d2d; QUAD $0x2d2d2d2d2d2d2d2d  // .space 16, '----------------'
LCPI0_8:
	QUAD $0x2e2e2e2e2e2e2e2e; QUAD $0x2e2e2e2e2e2e2e2e  // .space 16, '................'
LCPI0_9:
	QUAD $0x6565656565656565; QUAD $0x6565656565656565  // .space 16, 'eeeeeeeeeeeeeeee'
	  // .p2align 4, 0x90
_skip_array:
	BYTE $0x55  // pushq        %rbp
	WORD $0x8948; BYTE $0xe5  // movq         %rsp, %rbp
	WORD $0x5741  // pushq        %r15
	WORD $0x5641  // pushq        %r14
	WORD $0x5541  // pushq        %r13
	WORD $0x5441  // pushq        %r12
	BYTE $0x53  // pushq        %rbx
	LONG $0x70ec8348  // subq         $112, %rsp
	LONG $0x804d8948  // movq         %rcx, $-128(%rbp)
	LONG $0x4405100f; WORD $0xffff; BYTE $0xff  // movups       $-188(%rip), %xmm0  /* LCPI0_0+0(%rip) */
	LONG $0x88558948  // movq         %rdx, $-120(%rbp)
	WORD $0x110f; BYTE $0x02  // movups       %xmm0, (%rdx)
	LONG $0x987d8948  // movq         %rdi, $-104(%rbp)
	WORD $0x8b4c; BYTE $0x0f  // movq         (%rdi), %r9
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	LONG $0xa8458948  // movq         %rax, $-88(%rbp)
	LONG $0x0001bb41; WORD $0x0000  // movl         $1, %r11d
	LONG $0x000001b8; BYTE $0x00  // movl         $1, %eax
	WORD $0x294c; BYTE $0xc8  // subq         %r9, %rax
	LONG $0xa0458948  // movq         %rax, $-96(%rbp)
	LONG $0x40418d49  // leaq         $64(%r9), %rax
	LONG $0x90458948  // movq         %rax, $-112(%rbp)
	WORD $0x8b48; BYTE $0x06  // movq         (%rsi), %rax
	LONG $0xc0458948  // movq         %rax, $-64(%rbp)
	LONG $0x05418d49  // leaq         $5(%r9), %rax
	LONG $0x68858948; WORD $0xffff; BYTE $0xff  // movq         %rax, $-152(%rbp)
	QUAD $0xffffffff7885c748; WORD $0xffff; BYTE $0xff  // movq         $-1, $-136(%rbp)
	QUAD $0xfffffefd056f0ff3  // movdqu       $-259(%rip), %xmm0  /* LCPI0_1+0(%rip) */
	QUAD $0xffffff050d6f0ff3  // movdqu       $-251(%rip), %xmm1  /* LCPI0_2+0(%rip) */
	QUAD $0xffffff0d156f0ff3  // movdqu       $-243(%rip), %xmm2  /* LCPI0_3+0(%rip) */
	LONG $0x760f4566; BYTE $0xf6  // pcmpeqd      %xmm14, %xmm14
	QUAD $0xffff0f056f0f44f3; BYTE $0xff  // movdqu       $-241(%rip), %xmm8  /* LCPI0_4+0(%rip) */
	QUAD $0xffff162d6f0f44f3; BYTE $0xff  // movdqu       $-234(%rip), %xmm13  /* LCPI0_5+0(%rip) */
	QUAD $0xffff1d0d6f0f44f3; BYTE $0xff  // movdqu       $-227(%rip), %xmm9  /* LCPI0_6+0(%rip) */
	QUAD $0xffff24156f0f44f3; BYTE $0xff  // movdqu       $-220(%rip), %xmm10  /* LCPI0_7+0(%rip) */
	QUAD $0xffff2b1d6f0f44f3; BYTE $0xff  // movdqu       $-213(%rip), %xmm11  /* LCPI0_8+0(%rip) */
	QUAD $0xffff32256f0f44f3; BYTE $0xff  // movdqu       $-206(%rip), %xmm12  /* LCPI0_9+0(%rip) */
	LONG $0xc8758948  // movq         %rsi, $-56(%rbp)
	LONG $0xd04d894c  // movq         %r9, $-48(%rbp)
	LONG $0x000047e9; BYTE $0x00  // jmp          LBB0_6, $71(%rip)
LBB0_1:
	LONG $0x88558b48  // movq         $-120(%rbp), %rdx
	WORD $0x8b48; BYTE $0x02  // movq         (%rdx), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x24328f0f; WORD $0x0000  // jg           LBB0_439, $9266(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8948; BYTE $0x0a  // movq         %rcx, (%rdx)
	QUAD $0x00000608c244c748; BYTE $0x00  // movq         $6, $8(%rdx,%rax,8)
	WORD $0x9090  // .p2align 4, 0x90
LBB0_3:
	LONG $0xc05d8b4c  // movq         $-64(%rbp), %r11
LBB0_4:
	LONG $0x88458b48  // movq         $-120(%rbp), %rax
	WORD $0x8b48; BYTE $0x10  // movq         (%rax), %rdx
	LONG $0xc05d894c  // movq         %r11, $-64(%rbp)
	WORD $0x8949; BYTE $0xd3  // movq         %rdx, %r11
	LONG $0x78858b48; WORD $0xffff; BYTE $0xff  // movq         $-136(%rbp), %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x2442840f; WORD $0x0000  // je           LBB0_427, $9282(%rip)
LBB0_6:
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x08408b48  // movq         $8(%rax), %rax
	LONG $0xc04d8b48  // movq         $-64(%rbp), %rcx
	WORD $0x8948; BYTE $0xcb  // movq         %rcx, %rbx
	WORD $0x2948; BYTE $0xc3  // subq         %rax, %rbx
	LONG $0x0036830f; WORD $0x0000  // jae          LBB0_11, $54(%rip)
	LONG $0x09148a41  // movb         (%r9,%rcx), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0029840f; WORD $0x0000  // je           LBB0_11, $41(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x0020840f; WORD $0x0000  // je           LBB0_11, $32(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x0014860f; WORD $0x0000  // jbe          LBB0_11, $20(%rip)
	WORD $0x8949; BYTE $0xcf  // movq         %rcx, %r15
	LONG $0x88558b4c  // movq         $-120(%rbp), %r10
	LONG $0x000145e9; BYTE $0x00  // jmp          LBB0_32, $325(%rip)
	QUAD $0x9090909090909090  // .p2align 4, 0x90
LBB0_11:
	LONG $0x01798d4c  // leaq         $1(%rcx), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x88558b4c  // movq         $-120(%rbp), %r10
	LONG $0x002f830f; WORD $0x0000  // jae          LBB0_15, $47(%rip)
	LONG $0x39148a43  // movb         (%r9,%r15), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0022840f; WORD $0x0000  // je           LBB0_15, $34(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x0019840f; WORD $0x0000  // je           LBB0_15, $25(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x010a870f; WORD $0x0000  // ja           LBB0_32, $266(%rip)
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_15:
	LONG $0x02798d4c  // leaq         $2(%rcx), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_19, $35(%rip)
	LONG $0x39148a43  // movb         (%r9,%r15), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_19, $22(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_19, $13(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x00ce870f; WORD $0x0000  // ja           LBB0_32, $206(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_19:
	LONG $0x03798d4c  // leaq         $3(%rcx), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x0023830f; WORD $0x0000  // jae          LBB0_23, $35(%rip)
	LONG $0x39148a43  // movb         (%r9,%r15), %dl
	WORD $0xfa80; BYTE $0x0d  // cmpb         $13, %dl
	LONG $0x0016840f; WORD $0x0000  // je           LBB0_23, $22(%rip)
	WORD $0xfa80; BYTE $0x20  // cmpb         $32, %dl
	LONG $0x000d840f; WORD $0x0000  // je           LBB0_23, $13(%rip)
	WORD $0xc280; BYTE $0xf7  // addb         $-9, %dl
	WORD $0xfa80; BYTE $0x01  // cmpb         $1, %dl
	LONG $0x009e870f; WORD $0x0000  // ja           LBB0_32, $158(%rip)
	BYTE $0x90  // .p2align 4, 0x90
LBB0_23:
	LONG $0x04518d48  // leaq         $4(%rcx), %rdx
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x22f4860f; WORD $0x0000  // jbe          LBB0_417, $8948(%rip)
	WORD $0x3948; BYTE $0xd0  // cmpq         %rdx, %rax
	LONG $0x005a840f; WORD $0x0000  // je           LBB0_29, $90(%rip)
	LONG $0x01148d49  // leaq         (%r9,%rax), %rdx
	LONG $0x04c38348  // addq         $4, %rbx
	LONG $0x688d0348; WORD $0xffff; BYTE $0xff  // addq         $-152(%rbp), %rcx
	WORD $0x8949; BYTE $0xcf  // movq         %rcx, %r15
	QUAD $0x000100002600b948; WORD $0x0000  // movabsq      $4294977024, %rcx
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_26:
	LONG $0x7fbe0f41; BYTE $0xff  // movsbl       $-1(%r15), %edi
	WORD $0xff83; BYTE $0x20  // cmpl         $32, %edi
	LONG $0x0042870f; WORD $0x0000  // ja           LBB0_31, $66(%rip)
	LONG $0xf9a30f48  // btq          %rdi, %rcx
	LONG $0x0038830f; WORD $0x0000  // jae          LBB0_31, $56(%rip)
	WORD $0xff49; BYTE $0xc7  // incq         %r15
	WORD $0xff48; BYTE $0xc3  // incq         %rbx
	LONG $0xffdc850f; WORD $0xffff  // jne          LBB0_26, $-36(%rip)
	LONG $0x00000ae9; BYTE $0x00  // jmp          LBB0_30, $10(%rip)
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_29:
	WORD $0x014c; BYTE $0xca  // addq         %r9, %rdx
LBB0_30:
	WORD $0x294c; BYTE $0xca  // subq         %r9, %rdx
	WORD $0x8949; BYTE $0xd7  // movq         %rdx, %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x001b820f; WORD $0x0000  // jb           LBB0_32, $27(%rip)
	LONG $0x00227de9; BYTE $0x00  // jmp          LBB0_418, $8829(%rip)
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_31:
	LONG $0xa87d034c  // addq         $-88(%rbp), %r15
	WORD $0x3949; BYTE $0xc7  // cmpq         %rax, %r15
	LONG $0x2267830f; WORD $0x0000  // jae          LBB0_418, $8807(%rip)
LBB0_32:
	LONG $0x014f8d49  // leaq         $1(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x3cbe0f43; BYTE $0x39  // movsbl       (%r9,%r15), %edi
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0xff85  // testl        %edi, %edi
	LONG $0x229c840f; WORD $0x0000  // je           LBB0_427, $8860(%rip)
	LONG $0xc04d8948  // movq         %rcx, $-64(%rbp)
	WORD $0x894d; BYTE $0xf8  // movq         %r15, %r8
	WORD $0xf749; BYTE $0xd0  // notq         %r8
	LONG $0xff538d49  // leaq         $-1(%r11), %rdx
	LONG $0xda1c8b43  // movl         (%r10,%r11,8), %ebx
	LONG $0x788d8b48; WORD $0xffff; BYTE $0xff  // movq         $-136(%rbp), %rcx
	LONG $0xfff98348  // cmpq         $-1, %rcx
	LONG $0xcf440f49  // cmoveq       %r15, %rcx
	LONG $0x788d8948; WORD $0xffff; BYTE $0xff  // movq         %rcx, $-136(%rbp)
	WORD $0xcbff  // decl         %ebx
	WORD $0xfb83; BYTE $0x05  // cmpl         $5, %ebx
	LONG $0x0279870f; WORD $0x0000  // ja           LBB0_66, $633(%rip)
	LONG $0xf60d8d48; WORD $0x0024; BYTE $0x00  // leaq         $9462(%rip), %rcx  /* LJTI0_0+0(%rip) */
	LONG $0x991c6348  // movslq       (%rcx,%rbx,4), %rbx
	WORD $0x0148; BYTE $0xcb  // addq         %rcx, %rbx
	JMP BX
LBB0_35:
	WORD $0xff83; BYTE $0x2c  // cmpl         $44, %edi
	LONG $0x04db840f; WORD $0x0000  // je           LBB0_102, $1243(%rip)
	WORD $0xff83; BYTE $0x5d  // cmpl         $93, %edi
	LONG $0x023c840f; WORD $0x0000  // je           LBB0_37, $572(%rip)
	LONG $0x00223be9; BYTE $0x00  // jmp          LBB0_426, $8763(%rip)
LBB0_38:
	LONG $0x5dff8040  // cmpb         $93, %dil
	LONG $0x022d840f; WORD $0x0000  // je           LBB0_37, $557(%rip)
	QUAD $0x00000001da04c74b  // movq         $1, (%r10,%r11,8)
	WORD $0xff83; BYTE $0x7b  // cmpl         $123, %edi
	LONG $0x0243860f; WORD $0x0000  // jbe          LBB0_67, $579(%rip)
	LONG $0x00221be9; BYTE $0x00  // jmp          LBB0_426, $8731(%rip)
LBB0_40:
	LONG $0x22ff8040  // cmpb         $34, %dil
	LONG $0x2211850f; WORD $0x0000  // jne          LBB0_426, $8721(%rip)
	QUAD $0x00000004da04c74b  // movq         $4, (%r10,%r11,8)
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x08508b4c  // movq         $8(%rax), %r10
	LONG $0x208045f6  // testb        $32, $-128(%rbp)
	LONG $0x04ab850f; WORD $0x0000  // jne          LBB0_104, $1195(%rip)
	WORD $0x894d; BYTE $0xd5  // movq         %r10, %r13
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	WORD $0x2949; BYTE $0xc5  // subq         %rax, %r13
	LONG $0x23d1840f; WORD $0x0000  // je           LBB0_462, $9169(%rip)
	LONG $0x011c8d4d  // leaq         (%r9,%rax), %r11
	LONG $0x40fd8349  // cmpq         $64, %r13
	LONG $0x1bb4820f; WORD $0x0000  // jb           LBB0_355, $7092(%rip)
	WORD $0x8944; BYTE $0xe9  // movl         %r13d, %ecx
	WORD $0xe183; BYTE $0x3f  // andl         $63, %ecx
	LONG $0xb84d8948  // movq         %rcx, $-72(%rbp)
	LONG $0x024c8d4b; BYTE $0xc0  // leaq         $-64(%r10,%r8), %rcx
	LONG $0xc0e18348  // andq         $-64, %rcx
	WORD $0x0148; BYTE $0xc1  // addq         %rax, %rcx
	LONG $0x904d0348  // addq         $-112(%rbp), %rcx
	LONG $0xb04d8948  // movq         %rcx, $-80(%rbp)
	LONG $0xffc1c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r9
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	LONG $0x90909090  // .p2align 4, 0x90
LBB0_45:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x206b  // movdqu       $32(%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x3073  // movdqu       $48(%r11), %xmm6
	LONG $0xfb6f0f66  // movdqa       %xmm3, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xdfd70f66  // pmovmskb     %xmm7, %ebx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xf5  // pmovmskb     %xmm5, %r14d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xe6  // pmovmskb     %xmm6, %r12d
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcf  // orq          %rcx, %rdi
	WORD $0x0948; BYTE $0xf7  // orq          %rsi, %rdi
	LONG $0x30e4c149  // shlq         $48, %r12
	LONG $0x20e6c149  // shlq         $32, %r14
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x094c; BYTE $0xe2  // orq          %r12, %rdx
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_47, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_56, $47(%rip)
LBB0_47:
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc0  // orq          %r8, %rax
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_57, $61(%rip)
LBB0_48:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0086850f; WORD $0x0000  // jne          LBB0_58, $134(%rip)
LBB0_49:
	LONG $0xc0c58349  // addq         $-64, %r13
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffd8349  // cmpq         $63, %r13
	LONG $0xff33870f; WORD $0xffff  // ja           LBB0_45, $-205(%rip)
	LONG $0x001341e9; BYTE $0x00  // jmp          LBB0_50, $4929(%rip)
LBB0_56:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xcabc0f4c  // bsfq         %rdx, %r9
	WORD $0x0149; BYTE $0xc1  // addq         %rax, %r9
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc0  // orq          %r8, %rax
	LONG $0xffc3840f; WORD $0xffff  // je           LBB0_48, $-61(%rip)
LBB0_57:
	WORD $0x894c; BYTE $0xc0  // movq         %r8, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xd0  // andq         %rdx, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xc1  // orq          %r8, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	QUAD $0xaaaaaaaaaaaaba48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xc0920f41  // setb         %r8b
	WORD $0x0148; BYTE $0xf6  // addq         %rsi, %rsi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc6  // xorq         %rax, %rsi
	WORD $0x2148; BYTE $0xce  // andq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff7a840f; WORD $0xffff  // je           LBB0_49, $-134(%rip)
LBB0_58:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
LBB0_59:
	LONG $0xa05d034c  // addq         $-96(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	LONG $0x0009fde9; BYTE $0x00  // jmp          LBB0_188, $2557(%rip)
LBB0_60:
	LONG $0x3aff8040  // cmpb         $58, %dil
	LONG $0x204e850f; WORD $0x0000  // jne          LBB0_426, $8270(%rip)
	QUAD $0x00000000da04c74b  // movq         $0, (%r10,%r11,8)
	LONG $0xfffbe4e9; BYTE $0xff  // jmp          LBB0_3, $-1052(%rip)
LBB0_62:
	WORD $0xff83; BYTE $0x2c  // cmpl         $44, %edi
	LONG $0x002b850f; WORD $0x0000  // jne          LBB0_63, $43(%rip)
	LONG $0xfffb8149; WORD $0x000f; BYTE $0x00  // cmpq         $4095, %r11
	LONG $0x1fee8f0f; WORD $0x0000  // jg           LBB0_439, $8174(%rip)
	LONG $0x01438d49  // leaq         $1(%r11), %rax
	WORD $0x8949; BYTE $0x02  // movq         %rax, (%r10)
	QUAD $0x00000308da44c74b; BYTE $0x00  // movq         $3, $8(%r10,%r11,8)
	LONG $0xfffbb9e9; BYTE $0xff  // jmp          LBB0_3, $-1095(%rip)
LBB0_64:
	WORD $0xff83; BYTE $0x22  // cmpl         $34, %edi
	LONG $0x04d0840f; WORD $0x0000  // je           LBB0_127, $1232(%rip)
LBB0_63:
	WORD $0xff83; BYTE $0x7d  // cmpl         $125, %edi
	LONG $0x2004850f; WORD $0x0000  // jne          LBB0_426, $8196(%rip)
LBB0_37:
	WORD $0x8949; BYTE $0x12  // movq         %rdx, (%r10)
	WORD $0x8949; BYTE $0xd3  // movq         %rdx, %r11
	LONG $0x78858b48; WORD $0xffff; BYTE $0xff  // movq         $-136(%rbp), %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xfbb3850f; WORD $0xffff  // jne          LBB0_6, $-1101(%rip)
	LONG $0x001ff0e9; BYTE $0x00  // jmp          LBB0_427, $8176(%rip)
LBB0_66:
	WORD $0x8949; BYTE $0x12  // movq         %rdx, (%r10)
	WORD $0xff83; BYTE $0x7b  // cmpl         $123, %edi
	LONG $0x1fdd870f; WORD $0x0000  // ja           LBB0_426, $8157(%rip)
LBB0_67:
	LONG $0x39148d4f  // leaq         (%r9,%r15), %r10
	WORD $0xf989  // movl         %edi, %ecx
	LONG $0x83158d48; WORD $0x0022; BYTE $0x00  // leaq         $8835(%rip), %rdx  /* LJTI0_1+0(%rip) */
	LONG $0x8a0c6348  // movslq       (%rdx,%rcx,4), %rcx
	WORD $0x0148; BYTE $0xd1  // addq         %rdx, %rcx
	JMP CX
LBB0_68:
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x08788b48  // movq         $8(%rax), %rdi
	WORD $0x294c; BYTE $0xff  // subq         %r15, %rdi
	LONG $0x1f9e840f; WORD $0x0000  // je           LBB0_421, $8094(%rip)
	LONG $0x303a8041  // cmpb         $48, (%r10)
	LONG $0xc05d8b4c  // movq         $-64(%rbp), %r11
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_73, $47(%rip)
	LONG $0x01ff8348  // cmpq         $1, %rdi
	LONG $0x16b3840f; WORD $0x0000  // je           LBB0_336, $5811(%rip)
	LONG $0x19048a43  // movb         (%r9,%r11), %al
	WORD $0xd204  // addb         $-46, %al
	WORD $0x373c  // cmpb         $55, %al
	LONG $0x16a5870f; WORD $0x0000  // ja           LBB0_336, $5797(%rip)
	WORD $0xb60f; BYTE $0xc0  // movzbl       %al, %eax
	QUAD $0x000000800001b948; WORD $0x0080  // movabsq      $36028797027352577, %rcx
	LONG $0xc1a30f48  // btq          %rax, %rcx
	LONG $0x168e830f; WORD $0x0000  // jae          LBB0_336, $5774(%rip)
LBB0_73:
	LONG $0x10ff8348  // cmpq         $16, %rdi
	LONG $0x1886820f; WORD $0x0000  // jb           LBB0_344, $6278(%rip)
	LONG $0xf04f8d4c  // leaq         $-16(%rdi), %r9
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	LONG $0xf0e08348  // andq         $-16, %rax
	LONG $0x105c8d4e; BYTE $0x10  // leaq         $16(%rax,%r10), %r11
	LONG $0x0fe18341  // andl         $15, %r9d
	QUAD $0xffffffffc045c748  // movq         $-1, $-64(%rbp)
	LONG $0xffc4c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r12
	LONG $0xffc5c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r13
	WORD $0x894d; BYTE $0xd6  // movq         %r10, %r14
	LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_75:
	LONG $0x6f0f41f3; BYTE $0x1e  // movdqu       (%r14), %xmm3
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x640f4166; BYTE $0xe0  // pcmpgtb      %xmm8, %xmm4
	LONG $0x6f0f4166; BYTE $0xed  // movdqa       %xmm13, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0xecdb0f66  // pand         %xmm4, %xmm5
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x740f4166; BYTE $0xe1  // pcmpeqb      %xmm9, %xmm4
	LONG $0xf36f0f66  // movdqa       %xmm3, %xmm6
	LONG $0x740f4166; BYTE $0xf2  // pcmpeqb      %xmm10, %xmm6
	LONG $0xf4eb0f66  // por          %xmm4, %xmm6
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0xe2eb0f66  // por          %xmm2, %xmm4
	LONG $0x740f4166; BYTE $0xdb  // pcmpeqb      %xmm11, %xmm3
	LONG $0x740f4166; BYTE $0xe4  // pcmpeqb      %xmm12, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe3eb0f66  // por          %xmm3, %xmm4
	LONG $0xeeeb0f66  // por          %xmm6, %xmm5
	LONG $0xeceb0f66  // por          %xmm4, %xmm5
	LONG $0xd70f4466; BYTE $0xc3  // pmovmskb     %xmm3, %r8d
	LONG $0xd6d70f66  // pmovmskb     %xmm6, %edx
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xaaaaaabe; BYTE $0xaa  // movl         $2863311530, %esi
	LONG $0x55c68148; WORD $0x5555; BYTE $0x55  // addq         $1431655765, %rsi
	WORD $0x3148; BYTE $0xce  // xorq         %rcx, %rsi
	LONG $0xcebc0f48  // bsfq         %rsi, %rcx
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0012840f; WORD $0x0000  // je           LBB0_77, $18(%rip)
	LONG $0xffffffbe; BYTE $0xff  // movl         $-1, %esi
	WORD $0xe6d3  // shll         %cl, %esi
	WORD $0xd6f7  // notl         %esi
	WORD $0x2141; BYTE $0xf0  // andl         %esi, %r8d
	WORD $0xf021  // andl         %esi, %eax
	WORD $0xd621  // andl         %edx, %esi
	WORD $0xf289  // movl         %esi, %edx
LBB0_77:
	LONG $0xff708d41  // leal         $-1(%r8), %esi
	WORD $0x2144; BYTE $0xc6  // andl         %r8d, %esi
	LONG $0x10d3850f; WORD $0x0000  // jne          LBB0_306, $4307(%rip)
	WORD $0x708d; BYTE $0xff  // leal         $-1(%rax), %esi
	WORD $0xc621  // andl         %eax, %esi
	LONG $0x10c8850f; WORD $0x0000  // jne          LBB0_306, $4296(%rip)
	WORD $0x728d; BYTE $0xff  // leal         $-1(%rdx), %esi
	WORD $0xd621  // andl         %edx, %esi
	LONG $0x10bd850f; WORD $0x0000  // jne          LBB0_306, $4285(%rip)
	WORD $0x8545; BYTE $0xc0  // testl        %r8d, %r8d
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_83, $26(%rip)
	WORD $0x894c; BYTE $0xf3  // movq         %r14, %rbx
	WORD $0x294c; BYTE $0xd3  // subq         %r10, %rbx
	LONG $0xf0bc0f41  // bsfl         %r8d, %esi
	WORD $0x0148; BYTE $0xde  // addq         %rbx, %rsi
	LONG $0xfffd8349  // cmpq         $-1, %r13
	LONG $0x14b6850f; WORD $0x0000  // jne          LBB0_322, $5302(%rip)
	WORD $0x8949; BYTE $0xf5  // movq         %rsi, %r13
LBB0_83:
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x0019840f; WORD $0x0000  // je           LBB0_86, $25(%rip)
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x294c; BYTE $0xd6  // subq         %r10, %rsi
	WORD $0xbc0f; BYTE $0xc0  // bsfl         %eax, %eax
	WORD $0x0148; BYTE $0xf0  // addq         %rsi, %rax
	LONG $0xfffc8349  // cmpq         $-1, %r12
	LONG $0x124d850f; WORD $0x0000  // jne          LBB0_311, $4685(%rip)
	WORD $0x8949; BYTE $0xc4  // movq         %rax, %r12
LBB0_86:
	WORD $0xd285  // testl        %edx, %edx
	LONG $0x001b840f; WORD $0x0000  // je           LBB0_89, $27(%rip)
	WORD $0x894c; BYTE $0xf6  // movq         %r14, %rsi
	WORD $0x294c; BYTE $0xd6  // subq         %r10, %rsi
	WORD $0xbc0f; BYTE $0xc2  // bsfl         %edx, %eax
	WORD $0x0148; BYTE $0xf0  // addq         %rsi, %rax
	LONG $0xc07d8348; BYTE $0xff  // cmpq         $-1, $-64(%rbp)
	LONG $0x122b850f; WORD $0x0000  // jne          LBB0_311, $4651(%rip)
	LONG $0xc0458948  // movq         %rax, $-64(%rbp)
LBB0_89:
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x04cf850f; WORD $0x0000  // jne          LBB0_151, $1231(%rip)
	LONG $0x10c68349  // addq         $16, %r14
	LONG $0xf0c78348  // addq         $-16, %rdi
	LONG $0x0fff8348  // cmpq         $15, %rdi
	LONG $0xfecd870f; WORD $0xffff  // ja           LBB0_75, $-307(%rip)
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	LONG $0x04ba840f; WORD $0x0000  // je           LBB0_152, $1210(%rip)
LBB0_92:
	LONG $0x0b048d4b  // leaq         (%r11,%r9), %rax
	LONG $0x81358d48; WORD $0x0023; BYTE $0x00  // leaq         $9089(%rip), %rsi  /* LJTI0_3+0(%rip) */
	LONG $0x00002ce9; BYTE $0x00  // jmp          LBB0_96, $44(%rip)
LBB0_93:
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	LONG $0xfffc8349  // cmpq         $-1, %r12
	LONG $0x14db850f; WORD $0x0000  // jne          LBB0_333, $5339(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894d; BYTE $0xdc  // movq         %r11, %r12
	QUAD $0x9090909090909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_95:
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0xff49; BYTE $0xc9  // decq         %r9
	LONG $0x11ce840f; WORD $0x0000  // je           LBB0_312, $4558(%rip)
LBB0_96:
	LONG $0x13be0f41  // movsbl       (%r11), %edx
	WORD $0xc283; BYTE $0xd5  // addl         $-43, %edx
	WORD $0xfa83; BYTE $0x3a  // cmpl         $58, %edx
	LONG $0x046e870f; WORD $0x0000  // ja           LBB0_152, $1134(%rip)
	LONG $0x014b8d49  // leaq         $1(%r11), %rcx
	LONG $0x96146348  // movslq       (%rsi,%rdx,4), %rdx
	WORD $0x0148; BYTE $0xf2  // addq         %rsi, %rdx
	JMP DX
LBB0_98:
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	LONG $0xffff8348  // cmpq         $-1, %rdi
	LONG $0x1492850f; WORD $0x0000  // jne          LBB0_333, $5266(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894c; BYTE $0xdf  // movq         %r11, %rdi
	LONG $0xffffbce9; BYTE $0xff  // jmp          LBB0_95, $-68(%rip)
LBB0_100:
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	LONG $0xfffd8349  // cmpq         $-1, %r13
	LONG $0x1477850f; WORD $0x0000  // jne          LBB0_333, $5239(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894d; BYTE $0xdd  // movq         %r11, %r13
	LONG $0xffffa1e9; BYTE $0xff  // jmp          LBB0_95, $-95(%rip)
LBB0_102:
	LONG $0xfffb8149; WORD $0x000f; BYTE $0x00  // cmpq         $4095, %r11
	LONG $0x1d248f0f; WORD $0x0000  // jg           LBB0_439, $7460(%rip)
	LONG $0x01438d49  // leaq         $1(%r11), %rax
	WORD $0x8949; BYTE $0x02  // movq         %rax, (%r10)
	QUAD $0x00000008da44c74b; BYTE $0x00  // movq         $0, $8(%r10,%r11,8)
	LONG $0xfff8efe9; BYTE $0xff  // jmp          LBB0_3, $-1809(%rip)
LBB0_104:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xc04d8b48  // movq         $-64(%rbp), %rcx
	WORD $0x2948; BYTE $0xc8  // subq         %rcx, %rax
	LONG $0x1f2e840f; WORD $0x0000  // je           LBB0_463, $7982(%rip)
	LONG $0x091c8d4d  // leaq         (%r9,%rcx), %r11
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0x1722820f; WORD $0x0000  // jb           LBB0_356, $5922(%rip)
	WORD $0xc289  // movl         %eax, %edx
	WORD $0xe283; BYTE $0x3f  // andl         $63, %edx
	LONG $0xb8558948  // movq         %rdx, $-72(%rbp)
	LONG $0x02448d4f; BYTE $0xc0  // leaq         $-64(%r10,%r8), %r8
	LONG $0xc0e08349  // andq         $-64, %r8
	WORD $0x0149; BYTE $0xc8  // addq         %rcx, %r8
	LONG $0x9045034c  // addq         $-112(%rbp), %r8
	LONG $0xffc1c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r9
	WORD $0xdb31  // xorl         %ebx, %ebx
	QUAD $0x9090909090909090; LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_107:
	LONG $0x6f0f41f3; BYTE $0x2b  // movdqu       (%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x1073  // movdqu       $16(%r11), %xmm6
	LONG $0x6f0f41f3; WORD $0x2063  // movdqu       $32(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x307b  // movdqu       $48(%r11), %xmm7
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xf3d70f66  // pmovmskb     %xmm3, %esi
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xe3  // pmovmskb     %xmm3, %r12d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfe  // orq          %rdi, %rsi
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x20e1c148  // shlq         $32, %rcx
	WORD $0x0948; BYTE $0xce  // orq          %rcx, %rsi
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdd640f66  // pcmpgtb      %xmm5, %xmm3
	LONG $0x640f4166; BYTE $0xee  // pcmpgtb      %xmm14, %xmm5
	LONG $0xebdb0f66  // pand         %xmm3, %xmm5
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0949; BYTE $0xd5  // orq          %rdx, %r13
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xde640f66  // pcmpgtb      %xmm6, %xmm3
	LONG $0x640f4166; BYTE $0xf6  // pcmpgtb      %xmm14, %xmm6
	LONG $0xf3db0f66  // pand         %xmm3, %xmm6
	LONG $0x20e7c148  // shlq         $32, %rdi
	WORD $0x0949; BYTE $0xfd  // orq          %rdi, %r13
	LONG $0xfed70f66  // pmovmskb     %xmm6, %edi
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0x30e1c148  // shlq         $48, %rcx
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdf640f66  // pcmpgtb      %xmm7, %xmm3
	LONG $0x640f4166; BYTE $0xfe  // pcmpgtb      %xmm14, %xmm7
	LONG $0xfbdb0f66  // pand         %xmm3, %xmm7
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	LONG $0xd70f4466; BYTE $0xf7  // pmovmskb     %xmm7, %r14d
	LONG $0x30e4c149  // shlq         $48, %r12
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_109, $9(%rip)
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x009a850f; WORD $0x0000  // jne          LBB0_124, $154(%rip)
LBB0_109:
	LONG $0x30e6c149  // shlq         $48, %r14
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	WORD $0x094c; BYTE $0xe6  // orq          %r12, %rsi
	WORD $0x894c; BYTE $0xe9  // movq         %r13, %rcx
	WORD $0x0948; BYTE $0xd9  // orq          %rbx, %rcx
	LONG $0x002c850f; WORD $0x0000  // jne          LBB0_146, $44(%rip)
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0254850f; WORD $0x0000  // jne          LBB0_147, $596(%rip)
LBB0_111:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x1bf6850f; WORD $0x0000  // jne          LBB0_430, $7158(%rip)
	LONG $0xc0c08348  // addq         $-64, %rax
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ff88348  // cmpq         $63, %rax
	LONG $0xfeb0870f; WORD $0xffff  // ja           LBB0_107, $-336(%rip)
	LONG $0x000e92e9; BYTE $0x00  // jmp          LBB0_113, $3730(%rip)
LBB0_146:
	WORD $0x8948; BYTE $0xd9  // movq         %rbx, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x214c; BYTE $0xe9  // andq         %r13, %rcx
	LONG $0x09248d4c  // leaq         (%rcx,%rcx), %r12
	WORD $0x0949; BYTE $0xdc  // orq          %rbx, %r12
	WORD $0x894c; BYTE $0xe7  // movq         %r12, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	WORD $0x214c; BYTE $0xef  // andq         %r13, %rdi
	QUAD $0xaaaaaaaaaaaabb48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rbx
	WORD $0x2148; BYTE $0xdf  // andq         %rbx, %rdi
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0x0148; BYTE $0xcf  // addq         %rcx, %rdi
	WORD $0x920f; BYTE $0xc3  // setb         %bl
	WORD $0x0148; BYTE $0xff  // addq         %rdi, %rdi
	QUAD $0x555555555555b948; WORD $0x5555  // movabsq      $6148914691236517205, %rcx
	WORD $0x3148; BYTE $0xcf  // xorq         %rcx, %rdi
	WORD $0x214c; BYTE $0xe7  // andq         %r12, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	WORD $0x2148; BYTE $0xfe  // andq         %rdi, %rsi
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xff8d840f; WORD $0xffff  // je           LBB0_111, $-115(%rip)
	LONG $0x0001dce9; BYTE $0x00  // jmp          LBB0_147, $476(%rip)
LBB0_124:
	WORD $0x894c; BYTE $0xdf  // movq         %r11, %rdi
	LONG $0xd07d2b48  // subq         $-48(%rbp), %rdi
	LONG $0xcdbc0f4d  // bsfq         %r13, %r9
	WORD $0x0149; BYTE $0xf9  // addq         %rdi, %r9
	LONG $0xffff53e9; BYTE $0xff  // jmp          LBB0_109, $-173(%rip)
LBB0_127:
	QUAD $0x00000002da04c74b  // movq         $2, (%r10,%r11,8)
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x08508b4c  // movq         $8(%rax), %r10
	LONG $0x208045f6  // testb        $32, $-128(%rbp)
	LONG $0x026b850f; WORD $0x0000  // jne          LBB0_161, $619(%rip)
	WORD $0x894d; BYTE $0xd5  // movq         %r10, %r13
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	WORD $0x2949; BYTE $0xc5  // subq         %rax, %r13
	LONG $0x1d31840f; WORD $0x0000  // je           LBB0_464, $7473(%rip)
	LONG $0x011c8d4d  // leaq         (%r9,%rax), %r11
	LONG $0x40fd8349  // cmpq         $64, %r13
	LONG $0x1560820f; WORD $0x0000  // jb           LBB0_362, $5472(%rip)
	WORD $0x8944; BYTE $0xe9  // movl         %r13d, %ecx
	WORD $0xe183; BYTE $0x3f  // andl         $63, %ecx
	LONG $0xb04d8948  // movq         %rcx, $-80(%rbp)
	LONG $0x024c8d4b; BYTE $0xc0  // leaq         $-64(%r10,%r8), %rcx
	LONG $0xc0e18348  // andq         $-64, %rcx
	WORD $0x0148; BYTE $0xc1  // addq         %rax, %rcx
	LONG $0x904d0348  // addq         $-112(%rbp), %rcx
	LONG $0x708d8948; WORD $0xffff; BYTE $0xff  // movq         %rcx, $-144(%rbp)
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	QUAD $0x9090909090909090; LONG $0x90909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_131:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x206b  // movdqu       $32(%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x3073  // movdqu       $48(%r11), %xmm6
	LONG $0xfb6f0f66  // movdqa       %xmm3, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xdfd70f66  // pmovmskb     %xmm7, %ebx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd70f4466; BYTE $0xf5  // pmovmskb     %xmm5, %r14d
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xe6  // pmovmskb     %xmm6, %r12d
	LONG $0x30e3c148  // shlq         $48, %rbx
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcf  // orq          %rcx, %rdi
	WORD $0x0948; BYTE $0xf7  // orq          %rsi, %rdi
	LONG $0x30e4c149  // shlq         $48, %r12
	LONG $0x20e6c149  // shlq         $32, %r14
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x094c; BYTE $0xe2  // orq          %r12, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_133, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_142, $47(%rip)
LBB0_133:
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_143, $61(%rip)
LBB0_134:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0086850f; WORD $0x0000  // jne          LBB0_144, $134(%rip)
LBB0_135:
	LONG $0xc0c58349  // addq         $-64, %r13
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffd8349  // cmpq         $63, %r13
	LONG $0xff33870f; WORD $0xffff  // ja           LBB0_131, $-205(%rip)
	LONG $0x000e24e9; BYTE $0x00  // jmp          LBB0_136, $3620(%rip)
LBB0_142:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xdf  // orq          %rbx, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0xffc3840f; WORD $0xffff  // je           LBB0_134, $-61(%rip)
LBB0_143:
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xd0  // andq         %rdx, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	QUAD $0xaaaaaaaaaaaaba48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xc1920f41  // setb         %r9b
	WORD $0x0148; BYTE $0xf6  // addq         %rsi, %rsi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc6  // xorq         %rax, %rsi
	WORD $0x2148; BYTE $0xce  // andq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff7a840f; WORD $0xffff  // je           LBB0_135, $-134(%rip)
LBB0_144:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
LBB0_145:
	LONG $0xa05d034c  // addq         $-96(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0x000384e9; BYTE $0x00  // jmp          LBB0_195, $900(%rip)
LBB0_147:
	LONG $0xc6bc0f48  // bsfq         %rsi, %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x02f1840f; WORD $0x0000  // je           LBB0_186, $753(%rip)
	LONG $0xcabc0f48  // bsfq         %rdx, %rcx
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x02f2830f; WORD $0x0000  // jae          LBB0_187, $754(%rip)
	LONG $0x001b47e9; BYTE $0x00  // jmp          LBB0_149, $6983(%rip)
LBB0_151:
	WORD $0x0149; BYTE $0xce  // addq         %rcx, %r14
	WORD $0x894d; BYTE $0xf3  // movq         %r14, %r11
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
LBB0_152:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0x854d; BYTE $0xe4  // testq        %r12, %r12
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0x1926840f; WORD $0x0000  // je           LBB0_424, $6438(%rip)
LBB0_153:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x191d840f; WORD $0x0000  // je           LBB0_424, $6429(%rip)
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x1914840f; WORD $0x0000  // je           LBB0_424, $6420(%rip)
	WORD $0x294d; BYTE $0xd3  // subq         %r10, %r11
	LONG $0xff438d49  // leaq         $-1(%r11), %rax
	WORD $0x3949; BYTE $0xc4  // cmpq         %rax, %r12
	LONG $0x0040840f; WORD $0x0000  // je           LBB0_422, $64(%rip)
	WORD $0x3949; BYTE $0xc5  // cmpq         %rax, %r13
	LONG $0x0037840f; WORD $0x0000  // je           LBB0_422, $55(%rip)
	WORD $0x3948; BYTE $0xc7  // cmpq         %rax, %rdi
	LONG $0x002e840f; WORD $0x0000  // je           LBB0_422, $46(%rip)
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0x02b88e0f; WORD $0x0000  // jle          LBB0_190, $696(%rip)
	LONG $0xff478d48  // leaq         $-1(%rdi), %rax
	WORD $0x3949; BYTE $0xc4  // cmpq         %rax, %r12
	LONG $0x02ab840f; WORD $0x0000  // je           LBB0_190, $683(%rip)
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	WORD $0x8949; BYTE $0xfb  // movq         %rdi, %r11
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x0fe4890f; WORD $0x0000  // jns          LBB0_335, $4068(%rip)
	LONG $0x0018c1e9; BYTE $0x00  // jmp          LBB0_423, $6337(%rip)
LBB0_422:
	WORD $0xf749; BYTE $0xdb  // negq         %r11
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x0fcf890f; WORD $0x0000  // jns          LBB0_335, $4047(%rip)
	LONG $0x0018ace9; BYTE $0x00  // jmp          LBB0_423, $6316(%rip)
LBB0_161:
	WORD $0x894c; BYTE $0xd0  // movq         %r10, %rax
	LONG $0xc04d8b48  // movq         $-64(%rbp), %rcx
	WORD $0x2948; BYTE $0xc8  // subq         %rcx, %rax
	LONG $0x1ace840f; WORD $0x0000  // je           LBB0_465, $6862(%rip)
	LONG $0x091c8d4d  // leaq         (%r9,%rcx), %r11
	LONG $0x40f88348  // cmpq         $64, %rax
	LONG $0xb855894c  // movq         %r10, $-72(%rbp)
	LONG $0x130a820f; WORD $0x0000  // jb           LBB0_363, $4874(%rip)
	WORD $0xc289  // movl         %eax, %edx
	WORD $0xe283; BYTE $0x3f  // andl         $63, %edx
	LONG $0xb0558948  // movq         %rdx, $-80(%rbp)
	LONG $0x02648d4f; BYTE $0xc0  // leaq         $-64(%r10,%r8), %r12
	LONG $0xc0e48349  // andq         $-64, %r12
	WORD $0x0149; BYTE $0xcc  // addq         %rcx, %r12
	LONG $0x9065034c  // addq         $-112(%rbp), %r12
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x90909090; WORD $0x9090  // .p2align 4, 0x90
LBB0_164:
	LONG $0x6f0f41f3; BYTE $0x2b  // movdqu       (%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x1073  // movdqu       $16(%r11), %xmm6
	LONG $0x6f0f41f3; WORD $0x2063  // movdqu       $32(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x307b  // movdqu       $48(%r11), %xmm7
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfb  // orq          %rdi, %rbx
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x20e1c148  // shlq         $32, %rcx
	WORD $0x0948; BYTE $0xcb  // orq          %rcx, %rbx
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdd640f66  // pcmpgtb      %xmm5, %xmm3
	LONG $0x640f4166; BYTE $0xee  // pcmpgtb      %xmm14, %xmm5
	LONG $0xebdb0f66  // pand         %xmm3, %xmm5
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0949; BYTE $0xd5  // orq          %rdx, %r13
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xde640f66  // pcmpgtb      %xmm6, %xmm3
	LONG $0x640f4166; BYTE $0xf6  // pcmpgtb      %xmm14, %xmm6
	LONG $0xf3db0f66  // pand         %xmm3, %xmm6
	LONG $0x20e7c148  // shlq         $32, %rdi
	WORD $0x0949; BYTE $0xfd  // orq          %rdi, %r13
	LONG $0xfed70f66  // pmovmskb     %xmm6, %edi
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0x30e1c148  // shlq         $48, %rcx
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdf640f66  // pcmpgtb      %xmm7, %xmm3
	LONG $0x640f4166; BYTE $0xfe  // pcmpgtb      %xmm14, %xmm7
	LONG $0xfbdb0f66  // pand         %xmm3, %xmm7
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0x30e6c149  // shlq         $48, %r14
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_166, $9(%rip)
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x00a4850f; WORD $0x0000  // jne          LBB0_181, $164(%rip)
LBB0_166:
	LONG $0x30e7c148  // shlq         $48, %rdi
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	WORD $0x094c; BYTE $0xf3  // orq          %r14, %rbx
	WORD $0x894c; BYTE $0xe9  // movq         %r13, %rcx
	WORD $0x094c; BYTE $0xd1  // orq          %r10, %rcx
	LONG $0x002c850f; WORD $0x0000  // jne          LBB0_182, $44(%rip)
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x009d850f; WORD $0x0000  // jne          LBB0_183, $157(%rip)
LBB0_168:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x1795850f; WORD $0x0000  // jne          LBB0_435, $6037(%rip)
	LONG $0xc0c08348  // addq         $-64, %rax
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ff88348  // cmpq         $63, %rax
	LONG $0xfeb1870f; WORD $0xffff  // ja           LBB0_164, $-335(%rip)
	LONG $0x000bc9e9; BYTE $0x00  // jmp          LBB0_170, $3017(%rip)
LBB0_182:
	WORD $0x894d; BYTE $0xd6  // movq         %r10, %r14
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x214d; BYTE $0xee  // andq         %r13, %r14
	LONG $0x360c8d4f  // leaq         (%r14,%r14), %r9
	WORD $0x094d; BYTE $0xd1  // orq          %r10, %r9
	WORD $0x894c; BYTE $0xc9  // movq         %r9, %rcx
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x214c; BYTE $0xe9  // andq         %r13, %rcx
	QUAD $0xaaaaaaaaaaaabe48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rsi
	WORD $0x2148; BYTE $0xf1  // andq         %rsi, %rcx
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0x014c; BYTE $0xf1  // addq         %r14, %rcx
	LONG $0xc2920f41  // setb         %r10b
	WORD $0x0148; BYTE $0xc9  // addq         %rcx, %rcx
	QUAD $0x555555555555be48; WORD $0x5555  // movabsq      $6148914691236517205, %rsi
	WORD $0x3148; BYTE $0xf1  // xorq         %rsi, %rcx
	WORD $0x214c; BYTE $0xc9  // andq         %r9, %rcx
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0xf748; BYTE $0xd1  // notq         %rcx
	WORD $0x2148; BYTE $0xcb  // andq         %rcx, %rbx
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xff83840f; WORD $0xffff  // je           LBB0_168, $-125(%rip)
	LONG $0x00001be9; BYTE $0x00  // jmp          LBB0_183, $27(%rip)
LBB0_181:
	WORD $0x894d; BYTE $0xd9  // movq         %r11, %r9
	LONG $0xd04d2b4c  // subq         $-48(%rbp), %r9
	LONG $0xc5bc0f4d  // bsfq         %r13, %r8
	WORD $0x014d; BYTE $0xc8  // addq         %r9, %r8
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xffff41e9; BYTE $0xff  // jmp          LBB0_166, $-191(%rip)
LBB0_183:
	LONG $0xc3bc0f48  // bsfq         %rbx, %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0085840f; WORD $0x0000  // je           LBB0_193, $133(%rip)
	LONG $0xcabc0f48  // bsfq         %rdx, %rcx
	LONG $0xb8558b4c  // movq         $-72(%rbp), %r10
	WORD $0x294d; BYTE $0xcb  // subq         %r9, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0086830f; WORD $0x0000  // jae          LBB0_194, $134(%rip)
	LONG $0x001882e9; BYTE $0x00  // jmp          LBB0_185, $6274(%rip)
LBB0_186:
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x185a820f; WORD $0x0000  // jb           LBB0_149, $6234(%rip)
LBB0_187:
	LONG $0x035c8d4d; BYTE $0x01  // leaq         $1(%r11,%rax), %r11
LBB0_188:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x1621880f; WORD $0x0000  // js           LBB0_419, $5665(%rip)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0xf1e28f0f; WORD $0xffff  // jg           LBB0_4, $-3614(%rip)
	LONG $0x00163de9; BYTE $0x00  // jmp          LBB0_427, $5693(%rip)
LBB0_190:
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x094c; BYTE $0xe0  // orq          %r12, %rax
	WORD $0x394d; BYTE $0xe5  // cmpq         %r12, %r13
	LONG $0x04d98c0f; WORD $0x0000  // jl           LBB0_256, $1241(%rip)
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x04d0880f; WORD $0x0000  // js           LBB0_256, $1232(%rip)
	WORD $0xf749; BYTE $0xd5  // notq         %r13
	WORD $0x894d; BYTE $0xeb  // movq         %r13, %r11
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x0d21890f; WORD $0x0000  // jns          LBB0_335, $3361(%rip)
	LONG $0x0015fee9; BYTE $0x00  // jmp          LBB0_423, $5630(%rip)
LBB0_193:
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0xb8558b4c  // movq         $-72(%rbp), %r10
	WORD $0x294d; BYTE $0xcb  // subq         %r9, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x1801820f; WORD $0x0000  // jb           LBB0_185, $6145(%rip)
LBB0_194:
	LONG $0x035c8d4d; BYTE $0x01  // leaq         $1(%r11,%rax), %r11
LBB0_195:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x15fd880f; WORD $0x0000  // js           LBB0_428, $5629(%rip)
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xc07d8348; BYTE $0x00  // cmpq         $0, $-64(%rbp)
	LONG $0x15dd8e0f; WORD $0x0000  // jle          LBB0_427, $5597(%rip)
	LONG $0x88558b48  // movq         $-120(%rbp), %rdx
	WORD $0x8b48; BYTE $0x02  // movq         (%rdx), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x15868f0f; WORD $0x0000  // jg           LBB0_439, $5510(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8948; BYTE $0x0a  // movq         %rcx, (%rdx)
	QUAD $0x00000408c244c748; BYTE $0x00  // movq         $4, $8(%rdx,%rax,8)
	LONG $0xfff155e9; BYTE $0xff  // jmp          LBB0_4, $-3755(%rip)
LBB0_199:
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x08488b48  // movq         $8(%rax), %rcx
	LONG $0x208045f6  // testb        $32, $-128(%rbp)
	LONG $0xb84d8948  // movq         %rcx, $-72(%rbp)
	WORD $0x8949; BYTE $0xca  // movq         %rcx, %r10
	LONG $0x04e7850f; WORD $0x0000  // jne          LBB0_266, $1255(%rip)
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	WORD $0x2949; BYTE $0xc2  // subq         %rax, %r10
	LONG $0x17b6840f; WORD $0x0000  // je           LBB0_466, $6070(%rip)
	LONG $0x011c8d4d  // leaq         (%r9,%rax), %r11
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0x1072820f; WORD $0x0000  // jb           LBB0_368, $4210(%rip)
	WORD $0x8944; BYTE $0xd2  // movl         %r10d, %edx
	WORD $0xe283; BYTE $0x3f  // andl         $63, %edx
	LONG $0xb0558948  // movq         %rdx, $-80(%rbp)
	LONG $0x01648d4e; BYTE $0xc0  // leaq         $-64(%rcx,%r8), %r12
	LONG $0xc0e48349  // andq         $-64, %r12
	WORD $0x0149; BYTE $0xc4  // addq         %rax, %r12
	LONG $0x9065034c  // addq         $-112(%rbp), %r12
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	QUAD $0x9090909090909090; BYTE $0x90  // .p2align 4, 0x90
LBB0_203:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x206b  // movdqu       $32(%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x3073  // movdqu       $48(%r11), %xmm6
	LONG $0xfb6f0f66  // movdqa       %xmm3, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xffd70f66  // pmovmskb     %xmm7, %edi
	LONG $0xfc6f0f66  // movdqa       %xmm4, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xcfd70f66  // pmovmskb     %xmm7, %ecx
	LONG $0xfd6f0f66  // movdqa       %xmm5, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xf7d70f66  // pmovmskb     %xmm7, %esi
	LONG $0xfe6f0f66  // movdqa       %xmm6, %xmm7
	LONG $0xf8740f66  // pcmpeqb      %xmm0, %xmm7
	LONG $0xd70f4466; BYTE $0xef  // pmovmskb     %xmm7, %r13d
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xf1740f66  // pcmpeqb      %xmm1, %xmm6
	LONG $0xd70f4466; BYTE $0xf6  // pmovmskb     %xmm6, %r14d
	LONG $0x30e5c149  // shlq         $48, %r13
	LONG $0x20e6c148  // shlq         $32, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xcf  // orq          %rcx, %rdi
	WORD $0x0948; BYTE $0xf7  // orq          %rsi, %rdi
	LONG $0x30e6c149  // shlq         $48, %r14
	LONG $0x20e3c148  // shlq         $32, %rbx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	WORD $0x0948; BYTE $0xda  // orq          %rbx, %rdx
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_205, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x002f850f; WORD $0x0000  // jne          LBB0_214, $47(%rip)
LBB0_205:
	WORD $0x094c; BYTE $0xef  // orq          %r13, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x003d850f; WORD $0x0000  // jne          LBB0_215, $61(%rip)
LBB0_206:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0086850f; WORD $0x0000  // jne          LBB0_216, $134(%rip)
LBB0_207:
	LONG $0xc0c28349  // addq         $-64, %r10
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffa8349  // cmpq         $63, %r10
	LONG $0xff33870f; WORD $0xffff  // ja           LBB0_203, $-205(%rip)
	LONG $0x000be6e9; BYTE $0x00  // jmp          LBB0_208, $3046(%rip)
LBB0_214:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x094c; BYTE $0xef  // orq          %r13, %rdi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0xffc3840f; WORD $0xffff  // je           LBB0_206, $-61(%rip)
LBB0_215:
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x2148; BYTE $0xd0  // andq         %rdx, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	WORD $0x8948; BYTE $0xce  // movq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	QUAD $0xaaaaaaaaaaaaba48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rdx
	WORD $0x2148; BYTE $0xd6  // andq         %rdx, %rsi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x0148; BYTE $0xc6  // addq         %rax, %rsi
	LONG $0xc1920f41  // setb         %r9b
	WORD $0x0148; BYTE $0xf6  // addq         %rsi, %rsi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc6  // xorq         %rax, %rsi
	WORD $0x2148; BYTE $0xce  // andq         %rcx, %rsi
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x2148; BYTE $0xf7  // andq         %rsi, %rdi
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xff7a840f; WORD $0xffff  // je           LBB0_207, $-134(%rip)
LBB0_216:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
	LONG $0xa05d034c  // addq         $-96(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	LONG $0x000602e9; BYTE $0x00  // jmp          LBB0_304, $1538(%rip)
LBB0_217:
	LONG $0x98458b48  // movq         $-104(%rbp), %rax
	LONG $0x08508b4c  // movq         $8(%rax), %r10
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	WORD $0x2949; BYTE $0xc2  // subq         %rax, %r10
	LONG $0x1456840f; WORD $0x0000  // je           LBB0_437, $5206(%rip)
	LONG $0x01248d4d  // leaq         (%r9,%rax), %r12
	LONG $0x243c8041; BYTE $0x30  // cmpb         $48, (%r12)
	LONG $0x0036850f; WORD $0x0000  // jne          LBB0_222, $54(%rip)
	LONG $0x0001bb41; WORD $0x0000  // movl         $1, %r11d
	LONG $0x01fa8349  // cmpq         $1, %r10
	LONG $0x0b03840f; WORD $0x0000  // je           LBB0_341, $2819(%rip)
	LONG $0x24448a41; BYTE $0x01  // movb         $1(%r12), %al
	WORD $0xd204  // addb         $-46, %al
	WORD $0x373c  // cmpb         $55, %al
	LONG $0x0af4870f; WORD $0x0000  // ja           LBB0_341, $2804(%rip)
	WORD $0xb60f; BYTE $0xc0  // movzbl       %al, %eax
	QUAD $0x000000800001b948; WORD $0x0080  // movabsq      $36028797027352577, %rcx
	LONG $0xc1a30f48  // btq          %rax, %rcx
	LONG $0x0add830f; WORD $0x0000  // jae          LBB0_341, $2781(%rip)
LBB0_222:
	LONG $0x10fa8349  // cmpq         $16, %r10
	LONG $0x0e5d820f; WORD $0x0000  // jb           LBB0_367, $3677(%rip)
	LONG $0xf04a8d4d  // leaq         $-16(%r10), %r9
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	LONG $0xf0e08348  // andq         $-16, %rax
	LONG $0x20448d4e; BYTE $0x10  // leaq         $16(%rax,%r12), %r8
	LONG $0x0fe18341  // andl         $15, %r9d
	QUAD $0xffffffffb045c748  // movq         $-1, $-80(%rbp)
	QUAD $0xffffffffb845c748  // movq         $-1, $-72(%rbp)
	LONG $0xffc6c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r14
	WORD $0x894d; BYTE $0xe5  // movq         %r12, %r13
	BYTE $0x90  // .p2align 4, 0x90
LBB0_224:
	LONG $0x6f0f41f3; WORD $0x005d  // movdqu       (%r13), %xmm3
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x640f4166; BYTE $0xe0  // pcmpgtb      %xmm8, %xmm4
	LONG $0x6f0f4166; BYTE $0xed  // movdqa       %xmm13, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0xecdb0f66  // pand         %xmm4, %xmm5
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0x740f4166; BYTE $0xe1  // pcmpeqb      %xmm9, %xmm4
	LONG $0xf36f0f66  // movdqa       %xmm3, %xmm6
	LONG $0x740f4166; BYTE $0xf2  // pcmpeqb      %xmm10, %xmm6
	LONG $0xf4eb0f66  // por          %xmm4, %xmm6
	LONG $0xe36f0f66  // movdqa       %xmm3, %xmm4
	LONG $0xe2eb0f66  // por          %xmm2, %xmm4
	LONG $0x740f4166; BYTE $0xdb  // pcmpeqb      %xmm11, %xmm3
	LONG $0x740f4166; BYTE $0xe4  // pcmpeqb      %xmm12, %xmm4
	LONG $0xdcd70f66  // pmovmskb     %xmm4, %ebx
	LONG $0xe3eb0f66  // por          %xmm3, %xmm4
	LONG $0xeeeb0f66  // por          %xmm6, %xmm5
	LONG $0xeceb0f66  // por          %xmm4, %xmm5
	LONG $0xc3d70f66  // pmovmskb     %xmm3, %eax
	LONG $0xd6d70f66  // pmovmskb     %xmm6, %edx
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xaaaaaabe; BYTE $0xaa  // movl         $2863311530, %esi
	LONG $0x55be8d48; WORD $0x5555; BYTE $0x55  // leaq         $1431655765(%rsi), %rdi
	WORD $0x3148; BYTE $0xcf  // xorq         %rcx, %rdi
	LONG $0xcfbc0f48  // bsfq         %rdi, %rcx
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x0011840f; WORD $0x0000  // je           LBB0_226, $17(%rip)
	LONG $0xffffffbf; BYTE $0xff  // movl         $-1, %edi
	WORD $0xe7d3  // shll         %cl, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xf821  // andl         %edi, %eax
	WORD $0xfb21  // andl         %edi, %ebx
	WORD $0xd721  // andl         %edx, %edi
	WORD $0xfa89  // movl         %edi, %edx
LBB0_226:
	WORD $0x788d; BYTE $0xff  // leal         $-1(%rax), %edi
	WORD $0xc721  // andl         %eax, %edi
	LONG $0x09ee850f; WORD $0x0000  // jne          LBB0_337, $2542(%rip)
	WORD $0x7b8d; BYTE $0xff  // leal         $-1(%rbx), %edi
	WORD $0xdf21  // andl         %ebx, %edi
	LONG $0x09e3850f; WORD $0x0000  // jne          LBB0_337, $2531(%rip)
	WORD $0x7a8d; BYTE $0xff  // leal         $-1(%rdx), %edi
	WORD $0xd721  // andl         %edx, %edi
	LONG $0x09d8850f; WORD $0x0000  // jne          LBB0_337, $2520(%rip)
	WORD $0xc085  // testl        %eax, %eax
	LONG $0x001a840f; WORD $0x0000  // je           LBB0_232, $26(%rip)
	WORD $0x894c; BYTE $0xef  // movq         %r13, %rdi
	WORD $0x294c; BYTE $0xe7  // subq         %r12, %rdi
	LONG $0xd8bc0f44  // bsfl         %eax, %r11d
	WORD $0x0149; BYTE $0xfb  // addq         %rdi, %r11
	LONG $0xfffe8349  // cmpq         $-1, %r14
	LONG $0x09c3850f; WORD $0x0000  // jne          LBB0_338, $2499(%rip)
	WORD $0x894d; BYTE $0xde  // movq         %r11, %r14
LBB0_232:
	WORD $0xdb85  // testl        %ebx, %ebx
	LONG $0x001c840f; WORD $0x0000  // je           LBB0_235, $28(%rip)
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xdbbc0f44  // bsfl         %ebx, %r11d
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xb87d8348; BYTE $0xff  // cmpq         $-1, $-72(%rbp)
	LONG $0x09a0850f; WORD $0x0000  // jne          LBB0_338, $2464(%rip)
	LONG $0xb85d894c  // movq         %r11, $-72(%rbp)
LBB0_235:
	WORD $0xd285  // testl        %edx, %edx
	LONG $0x001c840f; WORD $0x0000  // je           LBB0_238, $28(%rip)
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x294c; BYTE $0xe0  // subq         %r12, %rax
	LONG $0xdabc0f44  // bsfl         %edx, %r11d
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xb07d8348; BYTE $0xff  // cmpq         $-1, $-80(%rbp)
	LONG $0x097c850f; WORD $0x0000  // jne          LBB0_338, $2428(%rip)
	LONG $0xb05d894c  // movq         %r11, $-80(%rbp)
LBB0_238:
	WORD $0xf983; BYTE $0x10  // cmpl         $16, %ecx
	LONG $0x03aa850f; WORD $0x0000  // jne          LBB0_290, $938(%rip)
	LONG $0x10c58349  // addq         $16, %r13
	LONG $0xf0c28349  // addq         $-16, %r10
	LONG $0x0ffa8349  // cmpq         $15, %r10
	LONG $0xfecd870f; WORD $0xffff  // ja           LBB0_224, $-307(%rip)
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0xc3358d48; WORD $0x0016; BYTE $0x00  // leaq         $5827(%rip), %rsi  /* LJTI0_2+0(%rip) */
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	LONG $0xb05d8b48  // movq         $-80(%rbp), %rbx
	LONG $0x038e840f; WORD $0x0000  // je           LBB0_291, $910(%rip)
LBB0_241:
	LONG $0x080c8d4b  // leaq         (%r8,%r9), %rcx
	LONG $0x000108e9; BYTE $0x00  // jmp          LBB0_260, $264(%rip)
LBB0_242:
	LONG $0x88558b48  // movq         $-120(%rbp), %rdx
	WORD $0x8b48; BYTE $0x02  // movq         (%rdx), %rax
	LONG $0x0fff3d48; WORD $0x0000  // cmpq         $4095, %rax
	LONG $0x11b98f0f; WORD $0x0000  // jg           LBB0_439, $4537(%rip)
	LONG $0x01488d48  // leaq         $1(%rax), %rcx
	WORD $0x8948; BYTE $0x0a  // movq         %rcx, (%rdx)
	QUAD $0x00000508c244c748; BYTE $0x00  // movq         $5, $8(%rdx,%rax,8)
	LONG $0xffed84e9; BYTE $0xff  // jmp          LBB0_3, $-4732(%rip)
LBB0_244:
	LONG $0x984d8b48  // movq         $-104(%rbp), %rcx
	LONG $0x08498b48  // movq         $8(%rcx), %rcx
	LONG $0xfc518d48  // leaq         $-4(%rcx), %rdx
	WORD $0x3949; BYTE $0xd7  // cmpq         %rdx, %r15
	LONG $0x11fb830f; WORD $0x0000  // jae          LBB0_440, $4603(%rip)
	LONG $0xc0558b48  // movq         $-64(%rbp), %rdx
	LONG $0x110c8b41  // movl         (%r9,%rdx), %ecx
	LONG $0x6c61f981; WORD $0x6573  // cmpl         $1702063201, %ecx
	LONG $0x125b850f; WORD $0x0000  // jne          LBB0_443, $4699(%rip)
	LONG $0x055f8d4d  // leaq         $5(%r15), %r11
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xed4c8f0f; WORD $0xffff  // jg           LBB0_4, $-4788(%rip)
	LONG $0x0011a7e9; BYTE $0x00  // jmp          LBB0_427, $4519(%rip)
LBB0_247:
	LONG $0x984d8b48  // movq         $-104(%rbp), %rcx
	LONG $0x08498b48  // movq         $8(%rcx), %rcx
	LONG $0xfd518d48  // leaq         $-3(%rcx), %rdx
	WORD $0x3949; BYTE $0xd7  // cmpq         %rdx, %r15
	LONG $0x11ba830f; WORD $0x0000  // jae          LBB0_440, $4538(%rip)
	LONG $0x6e3a8141; WORD $0x6c75; BYTE $0x6c  // cmpl         $1819047278, (%r10)
	LONG $0x0027840f; WORD $0x0000  // je           LBB0_255, $39(%rip)
	LONG $0x001271e9; BYTE $0x00  // jmp          LBB0_249, $4721(%rip)
LBB0_253:
	LONG $0x984d8b48  // movq         $-104(%rbp), %rcx
	LONG $0x08498b48  // movq         $8(%rcx), %rcx
	LONG $0xfd518d48  // leaq         $-3(%rcx), %rdx
	WORD $0x3949; BYTE $0xd7  // cmpq         %rdx, %r15
	LONG $0x1193830f; WORD $0x0000  // jae          LBB0_440, $4499(%rip)
	LONG $0x743a8141; WORD $0x7572; BYTE $0x65  // cmpl         $1702195828, (%r10)
	LONG $0x12a1850f; WORD $0x0000  // jne          LBB0_448, $4769(%rip)
LBB0_255:
	LONG $0x045f8d4d  // leaq         $4(%r15), %r11
	LONG $0x000369e9; BYTE $0x00  // jmp          LBB0_305, $873(%rip)
LBB0_256:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x24448d49; BYTE $0xff  // leaq         $-1(%r12), %rax
	WORD $0xf749; BYTE $0xd4  // notq         %r12
	LONG $0xe3480f4d  // cmovsq       %r11, %r12
	WORD $0x3949; BYTE $0xc5  // cmpq         %rax, %r13
	LONG $0xdc440f4d  // cmoveq       %r12, %r11
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x0841890f; WORD $0x0000  // jns          LBB0_335, $2113(%rip)
	LONG $0x00111ee9; BYTE $0x00  // jmp          LBB0_423, $4382(%rip)
LBB0_257:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	WORD $0x294d; BYTE $0xe3  // subq         %r12, %r11
	LONG $0xfffe8349  // cmpq         $-1, %r14
	LONG $0x0b6d850f; WORD $0x0000  // jne          LBB0_361, $2925(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894d; BYTE $0xde  // movq         %r11, %r14
	LONG $0x90909090; WORD $0x9090; BYTE $0x90  // .p2align 4, 0x90
LBB0_259:
	WORD $0x8949; BYTE $0xc0  // movq         %rax, %r8
	WORD $0xff49; BYTE $0xc9  // decq         %r9
	LONG $0x09fc840f; WORD $0x0000  // je           LBB0_343, $2556(%rip)
LBB0_260:
	LONG $0x10be0f41  // movsbl       (%r8), %edx
	WORD $0xc283; BYTE $0xd5  // addl         $-43, %edx
	WORD $0xfa83; BYTE $0x3a  // cmpl         $58, %edx
	LONG $0x026d870f; WORD $0x0000  // ja           LBB0_291, $621(%rip)
	LONG $0x01408d49  // leaq         $1(%r8), %rax
	LONG $0x96146348  // movslq       (%rsi,%rdx,4), %rdx
	WORD $0x0148; BYTE $0xf2  // addq         %rsi, %rdx
	JMP DX
LBB0_262:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	WORD $0x294d; BYTE $0xe3  // subq         %r12, %r11
	LONG $0xfffb8348  // cmpq         $-1, %rbx
	LONG $0x0b27850f; WORD $0x0000  // jne          LBB0_361, $2855(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894c; BYTE $0xdb  // movq         %r11, %rbx
	LONG $0xffffbce9; BYTE $0xff  // jmp          LBB0_259, $-68(%rip)
LBB0_264:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	WORD $0x294d; BYTE $0xe3  // subq         %r12, %r11
	LONG $0xffff8348  // cmpq         $-1, %rdi
	LONG $0x0b0c850f; WORD $0x0000  // jne          LBB0_361, $2828(%rip)
	WORD $0xff49; BYTE $0xcb  // decq         %r11
	WORD $0x894c; BYTE $0xdf  // movq         %r11, %rdi
	LONG $0xffffa1e9; BYTE $0xff  // jmp          LBB0_259, $-95(%rip)
LBB0_266:
	LONG $0xc0458b48  // movq         $-64(%rbp), %rax
	WORD $0x2949; BYTE $0xc2  // subq         %rax, %r10
	LONG $0x12cf840f; WORD $0x0000  // je           LBB0_466, $4815(%rip)
	LONG $0x011c8d4d  // leaq         (%r9,%rax), %r11
	LONG $0x40fa8349  // cmpq         $64, %r10
	LONG $0x0ba8820f; WORD $0x0000  // jb           LBB0_369, $2984(%rip)
	WORD $0x8944; BYTE $0xd2  // movl         %r10d, %edx
	WORD $0xe283; BYTE $0x3f  // andl         $63, %edx
	LONG $0xb0558948  // movq         %rdx, $-80(%rbp)
	LONG $0x01648d4e; BYTE $0xc0  // leaq         $-64(%rcx,%r8), %r12
	LONG $0xc0e48349  // andq         $-64, %r12
	WORD $0x0149; BYTE $0xc4  // addq         %rax, %r12
	LONG $0x9065034c  // addq         $-112(%rbp), %r12
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x9090  // .p2align 4, 0x90
LBB0_269:
	LONG $0x6f0f41f3; BYTE $0x2b  // movdqu       (%r11), %xmm5
	LONG $0x6f0f41f3; WORD $0x1073  // movdqu       $16(%r11), %xmm6
	LONG $0x6f0f41f3; WORD $0x2063  // movdqu       $32(%r11), %xmm4
	LONG $0x6f0f41f3; WORD $0x307b  // movdqu       $48(%r11), %xmm7
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xf3d70f66  // pmovmskb     %xmm3, %esi
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd8740f66  // pcmpeqb      %xmm0, %xmm3
	LONG $0xfbd70f66  // pmovmskb     %xmm3, %edi
	LONG $0xdd6f0f66  // movdqa       %xmm5, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd70f4466; BYTE $0xeb  // pmovmskb     %xmm3, %r13d
	LONG $0xde6f0f66  // movdqa       %xmm6, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xd3d70f66  // pmovmskb     %xmm3, %edx
	LONG $0xdc6f0f66  // movdqa       %xmm4, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xce  // orq          %rcx, %rsi
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xdf6f0f66  // movdqa       %xmm7, %xmm3
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0x20e3c148  // shlq         $32, %rbx
	WORD $0x0948; BYTE $0xde  // orq          %rbx, %rsi
	LONG $0xdbd70f66  // pmovmskb     %xmm3, %ebx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdd640f66  // pcmpgtb      %xmm5, %xmm3
	LONG $0x640f4166; BYTE $0xee  // pcmpgtb      %xmm14, %xmm5
	LONG $0xebdb0f66  // pand         %xmm3, %xmm5
	LONG $0x10e2c148  // shlq         $16, %rdx
	WORD $0x0949; BYTE $0xd5  // orq          %rdx, %r13
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xde640f66  // pcmpgtb      %xmm6, %xmm3
	LONG $0x640f4166; BYTE $0xf6  // pcmpgtb      %xmm14, %xmm6
	LONG $0xf3db0f66  // pand         %xmm3, %xmm6
	LONG $0x20e1c148  // shlq         $32, %rcx
	WORD $0x0949; BYTE $0xcd  // orq          %rcx, %r13
	LONG $0xc6d70f66  // pmovmskb     %xmm6, %eax
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0x30e3c148  // shlq         $48, %rbx
	WORD $0x0949; BYTE $0xdd  // orq          %rbx, %r13
	LONG $0xccd70f66  // pmovmskb     %xmm4, %ecx
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdf640f66  // pcmpgtb      %xmm7, %xmm3
	LONG $0x640f4166; BYTE $0xfe  // pcmpgtb      %xmm14, %xmm7
	LONG $0xfbdb0f66  // pand         %xmm3, %xmm7
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	LONG $0xd70f4466; BYTE $0xf7  // pmovmskb     %xmm7, %r14d
	LONG $0x30e7c148  // shlq         $48, %rdi
	LONG $0x20e1c148  // shlq         $32, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_271, $9(%rip)
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x009c850f; WORD $0x0000  // jne          LBB0_286, $156(%rip)
LBB0_271:
	LONG $0x30e6c149  // shlq         $48, %r14
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	WORD $0x0948; BYTE $0xfe  // orq          %rdi, %rsi
	WORD $0x894c; BYTE $0xe8  // movq         %r13, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x002c850f; WORD $0x0000  // jne          LBB0_287, $44(%rip)
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x008d850f; WORD $0x0000  // jne          LBB0_288, $141(%rip)
LBB0_273:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x10ec850f; WORD $0x0000  // jne          LBB0_456, $4332(%rip)
	LONG $0xc0c28349  // addq         $-64, %r10
	LONG $0x40c38349  // addq         $64, %r11
	LONG $0x3ffa8349  // cmpq         $63, %r10
	LONG $0xfeb1870f; WORD $0xffff  // ja           LBB0_269, $-335(%rip)
	LONG $0x00071ae9; BYTE $0x00  // jmp          LBB0_275, $1818(%rip)
LBB0_287:
	WORD $0x894c; BYTE $0xc8  // movq         %r9, %rax
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x214c; BYTE $0xe8  // andq         %r13, %rax
	LONG $0x000c8d48  // leaq         (%rax,%rax), %rcx
	WORD $0x094c; BYTE $0xc9  // orq          %r9, %rcx
	WORD $0x8948; BYTE $0xcf  // movq         %rcx, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	WORD $0x214c; BYTE $0xef  // andq         %r13, %rdi
	QUAD $0xaaaaaaaaaaaabb48; WORD $0xaaaa  // movabsq      $-6148914691236517206, %rbx
	WORD $0x2148; BYTE $0xdf  // andq         %rbx, %rdi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0x0148; BYTE $0xc7  // addq         %rax, %rdi
	LONG $0xc1920f41  // setb         %r9b
	WORD $0x0148; BYTE $0xff  // addq         %rdi, %rdi
	QUAD $0x555555555555b848; WORD $0x5555  // movabsq      $6148914691236517205, %rax
	WORD $0x3148; BYTE $0xc7  // xorq         %rax, %rdi
	WORD $0x2148; BYTE $0xcf  // andq         %rcx, %rdi
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	WORD $0x2148; BYTE $0xfe  // andq         %rdi, %rsi
	WORD $0x094c; BYTE $0xf2  // orq          %r14, %rdx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0xff8b840f; WORD $0xffff  // je           LBB0_273, $-117(%rip)
	LONG $0x000013e9; BYTE $0x00  // jmp          LBB0_288, $19(%rip)
LBB0_286:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc5bc0f4d  // bsfq         %r13, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	LONG $0xffff51e9; BYTE $0xff  // jmp          LBB0_271, $-175(%rip)
LBB0_288:
	LONG $0xc6bc0f48  // bsfq         %rsi, %rax
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0x008f840f; WORD $0x0000  // je           LBB0_301, $143(%rip)
	LONG $0xcabc0f48  // bsfq         %rdx, %rcx
	LONG $0x00008be9; BYTE $0x00  // jmp          LBB0_302, $139(%rip)
LBB0_290:
	WORD $0x0149; BYTE $0xcd  // addq         %rcx, %r13
	WORD $0x894d; BYTE $0xe8  // movq         %r13, %r8
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	LONG $0xb05d8b48  // movq         $-80(%rbp), %rbx
LBB0_291:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0x0ef2840f; WORD $0x0000  // je           LBB0_438, $3826(%rip)
LBB0_292:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0ee9840f; WORD $0x0000  // je           LBB0_438, $3817(%rip)
	WORD $0x854d; BYTE $0xf6  // testq        %r14, %r14
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0x0edc840f; WORD $0x0000  // je           LBB0_438, $3804(%rip)
	WORD $0x294d; BYTE $0xe0  // subq         %r12, %r8
	LONG $0xff408d49  // leaq         $-1(%r8), %rax
	WORD $0x3948; BYTE $0xc7  // cmpq         %rax, %rdi
	LONG $0x0033840f; WORD $0x0000  // je           LBB0_300, $51(%rip)
	WORD $0x3949; BYTE $0xc6  // cmpq         %rax, %r14
	LONG $0x002a840f; WORD $0x0000  // je           LBB0_300, $42(%rip)
	WORD $0x3948; BYTE $0xc3  // cmpq         %rax, %rbx
	LONG $0x0021840f; WORD $0x0000  // je           LBB0_300, $33(%rip)
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x00728e0f; WORD $0x0000  // jle          LBB0_307, $114(%rip)
	LONG $0xff438d48  // leaq         $-1(%rbx), %rax
	WORD $0x3948; BYTE $0xc7  // cmpq         %rax, %rdi
	LONG $0x0065840f; WORD $0x0000  // je           LBB0_307, $101(%rip)
	WORD $0xf748; BYTE $0xd3  // notq         %rbx
	WORD $0x8949; BYTE $0xdb  // movq         %rbx, %r11
	LONG $0x000555e9; BYTE $0x00  // jmp          LBB0_340, $1365(%rip)
LBB0_300:
	WORD $0xf749; BYTE $0xd8  // negq         %r8
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
	LONG $0x00054ae9; BYTE $0x00  // jmp          LBB0_340, $1354(%rip)
LBB0_301:
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
LBB0_302:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	WORD $0x294d; BYTE $0xcb  // subq         %r9, %r11
	WORD $0x3948; BYTE $0xc1  // cmpq         %rax, %rcx
	LONG $0x0fff820f; WORD $0x0000  // jb           LBB0_185, $4095(%rip)
	LONG $0x035c8d4d; BYTE $0x01  // leaq         $1(%r11,%rax), %r11
LBB0_304:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x0e6f880f; WORD $0x0000  // js           LBB0_441, $3695(%rip)
LBB0_305:
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	LONG $0xc07d8348; BYTE $0x00  // cmpq         $0, $-64(%rbp)
	LONG $0xe97b8f0f; WORD $0xffff  // jg           LBB0_4, $-5765(%rip)
	LONG $0x000dd6e9; BYTE $0x00  // jmp          LBB0_427, $3542(%rip)
LBB0_306:
	WORD $0x294d; BYTE $0xd6  // subq         %r10, %r14
	LONG $0xdebc0f44  // bsfl         %esi, %r11d
	WORD $0x014d; BYTE $0xf3  // addq         %r14, %r11
	WORD $0xf749; BYTE $0xd3  // notq         %r11
	LONG $0x0004bee9; BYTE $0x00  // jmp          LBB0_334, $1214(%rip)
LBB0_307:
	WORD $0x894c; BYTE $0xf0  // movq         %r14, %rax
	WORD $0x0948; BYTE $0xf8  // orq          %rdi, %rax
	WORD $0x3949; BYTE $0xfe  // cmpq         %rdi, %r14
	LONG $0x01938c0f; WORD $0x0000  // jl           LBB0_310, $403(%rip)
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x018a880f; WORD $0x0000  // js           LBB0_310, $394(%rip)
	WORD $0xf749; BYTE $0xd6  // notq         %r14
	WORD $0x894d; BYTE $0xf3  // movq         %r14, %r11
	LONG $0x0004d8e9; BYTE $0x00  // jmp          LBB0_340, $1240(%rip)
LBB0_50:
	LONG $0xb05d8b4c  // movq         $-80(%rbp), %r11
	LONG $0xb86d8b4c  // movq         $-72(%rbp), %r13
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0x0957820f; WORD $0x0000  // jb           LBB0_374, $2391(%rip)
LBB0_51:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xfdd70f66  // pmovmskb     %xmm5, %edi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e2c148  // shlq         $16, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_53, $9(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x08a5850f; WORD $0x0000  // jne          LBB0_371, $2213(%rip)
LBB0_53:
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc0  // orq          %r8, %rax
	LONG $0x08b3850f; WORD $0x0000  // jne          LBB0_372, $2227(%rip)
LBB0_54:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x08e6840f; WORD $0x0000  // je           LBB0_373, $2278(%rip)
LBB0_55:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
	LONG $0xffecaee9; BYTE $0xff  // jmp          LBB0_59, $-4946(%rip)
LBB0_113:
	WORD $0x894d; BYTE $0xc3  // movq         %r8, %r11
	LONG $0xb8458b48  // movq         $-72(%rbp), %rax
	WORD $0x894d; BYTE $0xd5  // movq         %r10, %r13
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0x070c820f; WORD $0x0000  // jb           LBB0_357, $1804(%rip)
LBB0_114:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd70f4466; BYTE $0xc5  // pmovmskb     %xmm5, %r8d
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xf5d70f66  // pmovmskb     %xmm5, %esi
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0x640f4166; BYTE $0xde  // pcmpgtb      %xmm14, %xmm3
	LONG $0xdddb0f66  // pand         %xmm5, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0xd70f4466; BYTE $0xd4  // pmovmskb     %xmm4, %r10d
	LONG $0x10e6c148  // shlq         $16, %rsi
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_116, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x08d1850f; WORD $0x0000  // jne          LBB0_382, $2257(%rip)
LBB0_116:
	LONG $0x10e2c149  // shlq         $16, %r10
	WORD $0x094c; BYTE $0xc6  // orq          %r8, %rsi
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x0948; BYTE $0xd9  // orq          %rbx, %rcx
	LONG $0x079b850f; WORD $0x0000  // jne          LBB0_370, $1947(%rip)
LBB0_117:
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	WORD $0x094d; BYTE $0xf2  // orq          %r14, %r10
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0x000040ba; BYTE $0x00  // movl         $64, %edx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_119, $4(%rip)
	LONG $0xd6bc0f48  // bsfq         %rsi, %rdx
LBB0_119:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_121, $4(%rip)
	LONG $0xcabc0f49  // bsfq         %r10, %rcx
LBB0_121:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x01e0840f; WORD $0x0000  // je           LBB0_313, $480(%rip)
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0e22820f; WORD $0x0000  // jb           LBB0_149, $3618(%rip)
	LONG $0x135c8d4d; BYTE $0x01  // leaq         $1(%r11,%rdx), %r11
	WORD $0x894d; BYTE $0xea  // movq         %r13, %r10
	LONG $0xfff5c0e9; BYTE $0xff  // jmp          LBB0_188, $-2624(%rip)
LBB0_310:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xff478d48  // leaq         $-1(%rdi), %rax
	WORD $0xf748; BYTE $0xd7  // notq         %rdi
	LONG $0xf8480f49  // cmovsq       %r8, %rdi
	WORD $0x3949; BYTE $0xc6  // cmpq         %rax, %r14
	LONG $0xf8450f49  // cmovneq      %r8, %rdi
	WORD $0x8949; BYTE $0xfb  // movq         %rdi, %r11
	LONG $0x00033ce9; BYTE $0x00  // jmp          LBB0_340, $828(%rip)
LBB0_311:
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0x0002f4e9; BYTE $0x00  // jmp          LBB0_334, $756(%rip)
LBB0_312:
	WORD $0x8949; BYTE $0xc3  // movq         %rax, %r11
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	WORD $0x854d; BYTE $0xe4  // testq        %r12, %r12
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xf2ad850f; WORD $0xffff  // jne          LBB0_153, $-3411(%rip)
	LONG $0x000bcee9; BYTE $0x00  // jmp          LBB0_424, $3022(%rip)
LBB0_136:
	LONG $0x709d8b4c; WORD $0xffff; BYTE $0xff  // movq         $-144(%rbp), %r11
	LONG $0xb06d8b4c  // movq         $-80(%rbp), %r13
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0x08f9820f; WORD $0x0000  // jb           LBB0_389, $2297(%rip)
LBB0_137:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xfdd70f66  // pmovmskb     %xmm5, %edi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e2c148  // shlq         $16, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_139, $9(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0847850f; WORD $0x0000  // jne          LBB0_386, $2119(%rip)
LBB0_139:
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x0855850f; WORD $0x0000  // jne          LBB0_387, $2133(%rip)
LBB0_140:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0888840f; WORD $0x0000  // je           LBB0_388, $2184(%rip)
LBB0_141:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
	LONG $0xfff1c8e9; BYTE $0xff  // jmp          LBB0_145, $-3640(%rip)
LBB0_170:
	WORD $0x894d; BYTE $0xe3  // movq         %r12, %r11
	LONG $0xb0458b48  // movq         $-80(%rbp), %rax
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0x05c7820f; WORD $0x0000  // jb           LBB0_364, $1479(%rip)
LBB0_171:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd70f4466; BYTE $0xcd  // pmovmskb     %xmm5, %r9d
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xddd70f66  // pmovmskb     %xmm5, %ebx
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0x640f4166; BYTE $0xde  // pcmpgtb      %xmm14, %xmm3
	LONG $0xdddb0f66  // pand         %xmm5, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0xfcd70f66  // pmovmskb     %xmm4, %edi
	LONG $0x10e3c148  // shlq         $16, %rbx
	LONG $0x10e1c148  // shlq         $16, %rcx
	WORD $0x0948; BYTE $0xca  // orq          %rcx, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_173, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x087e850f; WORD $0x0000  // jne          LBB0_397, $2174(%rip)
LBB0_173:
	LONG $0x10e7c148  // shlq         $16, %rdi
	WORD $0x094c; BYTE $0xcb  // orq          %r9, %rbx
	WORD $0x8948; BYTE $0xd1  // movq         %rdx, %rcx
	WORD $0x094c; BYTE $0xd1  // orq          %r10, %rcx
	LONG $0x070f850f; WORD $0x0000  // jne          LBB0_383, $1807(%rip)
LBB0_174:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x094c; BYTE $0xf7  // orq          %r14, %rdi
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0x000040ba; BYTE $0x00  // movl         $64, %edx
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_176, $4(%rip)
	LONG $0xd3bc0f48  // bsfq         %rbx, %rdx
LBB0_176:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_178, $4(%rip)
	LONG $0xcfbc0f48  // bsfq         %rdi, %rcx
LBB0_178:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x00cd840f; WORD $0x0000  // je           LBB0_324, $205(%rip)
	WORD $0x294d; BYTE $0xcb  // subq         %r9, %r11
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x0c6f820f; WORD $0x0000  // jb           LBB0_185, $3183(%rip)
	LONG $0x135c8d4d; BYTE $0x01  // leaq         $1(%r11,%rdx), %r11
	LONG $0xb8558b4c  // movq         $-72(%rbp), %r10
	LONG $0xfff465e9; BYTE $0xff  // jmp          LBB0_195, $-2971(%rip)
LBB0_313:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0c82850f; WORD $0x0000  // jne          LBB0_467, $3202(%rip)
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c08348  // addq         $-32, %rax
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0452850f; WORD $0x0000  // jne          LBB0_358, $1106(%rip)
LBB0_315:
	WORD $0x894d; BYTE $0xea  // movq         %r13, %r10
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0a08840f; WORD $0x0000  // je           LBB0_420, $2568(%rip)
LBB0_316:
	LONG $0x0bb60f41  // movzbl       (%r11), %ecx
	WORD $0xf980; BYTE $0x22  // cmpb         $34, %cl
	LONG $0x0077840f; WORD $0x0000  // je           LBB0_323, $119(%rip)
	WORD $0xf980; BYTE $0x5c  // cmpb         $92, %cl
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_320, $38(%rip)
	WORD $0xf980; BYTE $0x1f  // cmpb         $31, %cl
	LONG $0x0c4f860f; WORD $0x0000  // jbe          LBB0_468, $3151(%rip)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xffc9850f; WORD $0xffff  // jne          LBB0_316, $-55(%rip)
	LONG $0x0009cce9; BYTE $0x00  // jmp          LBB0_420, $2508(%rip)
LBB0_320:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x0c5d840f; WORD $0x0000  // je           LBB0_473, $3165(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd04d2b48  // subq         $-48(%rbp), %rcx
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0xc9440f4c  // cmoveq       %rcx, %r9
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x000002ba; BYTE $0x00  // movl         $2, %edx
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	WORD $0x894d; BYTE $0xea  // movq         %r13, %r10
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xff8c850f; WORD $0xffff  // jne          LBB0_316, $-116(%rip)
	LONG $0x00098fe9; BYTE $0x00  // jmp          LBB0_420, $2447(%rip)
LBB0_322:
	WORD $0xf748; BYTE $0xd6  // notq         %rsi
	WORD $0x8949; BYTE $0xf3  // movq         %rsi, %r11
	LONG $0x0000ace9; BYTE $0x00  // jmp          LBB0_334, $172(%rip)
LBB0_323:
	LONG $0xa05d034c  // addq         $-96(%rbp), %r11
	LONG $0xfff347e9; BYTE $0xff  // jmp          LBB0_188, $-3257(%rip)
LBB0_324:
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0x0be9850f; WORD $0x0000  // jne          LBB0_470, $3049(%rip)
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c08348  // addq         $-32, %rax
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0421850f; WORD $0x0000  // jne          LBB0_365, $1057(%rip)
LBB0_326:
	LONG $0xb8558b4c  // movq         $-72(%rbp), %r10
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x099b840f; WORD $0x0000  // je           LBB0_429, $2459(%rip)
LBB0_327:
	LONG $0x0bb60f41  // movzbl       (%r11), %ecx
	WORD $0xf980; BYTE $0x22  // cmpb         $34, %cl
	LONG $0x00d0840f; WORD $0x0000  // je           LBB0_342, $208(%rip)
	WORD $0xf980; BYTE $0x5c  // cmpb         $92, %cl
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_331, $38(%rip)
	WORD $0xf980; BYTE $0x1f  // cmpb         $31, %cl
	LONG $0x0ba4860f; WORD $0x0000  // jbe          LBB0_469, $2980(%rip)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xffc9850f; WORD $0xffff  // jne          LBB0_327, $-55(%rip)
	LONG $0x00095fe9; BYTE $0x00  // jmp          LBB0_429, $2399(%rip)
LBB0_331:
	LONG $0x01f88348  // cmpq         $1, %rax
	LONG $0x0bb1840f; WORD $0x0000  // je           LBB0_475, $2993(%rip)
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x294c; BYTE $0xc9  // subq         %r9, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x000002ba; BYTE $0x00  // movl         $2, %edx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0148; BYTE $0xc8  // addq         %rcx, %rax
	LONG $0xff8c850f; WORD $0xffff  // jne          LBB0_327, $-116(%rip)
	LONG $0x000922e9; BYTE $0x00  // jmp          LBB0_429, $2338(%rip)
LBB0_333:
	WORD $0xf749; BYTE $0xdb  // negq         %r11
LBB0_334:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x08e2880f; WORD $0x0000  // js           LBB0_423, $2274(%rip)
LBB0_335:
	WORD $0x014d; BYTE $0xfb  // addq         %r15, %r11
LBB0_336:
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0x854d; BYTE $0xff  // testq        %r15, %r15
	LONG $0xe483890f; WORD $0xffff  // jns          LBB0_4, $-7037(%rip)
	LONG $0x0008dee9; BYTE $0x00  // jmp          LBB0_427, $2270(%rip)
LBB0_337:
	WORD $0x294d; BYTE $0xe5  // subq         %r12, %r13
	LONG $0xdfbc0f44  // bsfl         %edi, %r11d
	WORD $0x014d; BYTE $0xeb  // addq         %r13, %r11
LBB0_338:
	WORD $0xf749; BYTE $0xd3  // notq         %r11
LBB0_339:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
LBB0_340:
	WORD $0x854d; BYTE $0xdb  // testq        %r11, %r11
	LONG $0x093b880f; WORD $0x0000  // js           LBB0_438, $2363(%rip)
LBB0_341:
	LONG $0xc04d8b48  // movq         $-64(%rbp), %rcx
	WORD $0x0149; BYTE $0xcb  // addq         %rcx, %r11
	WORD $0x894c; BYTE $0x1e  // movq         %r11, (%rsi)
	WORD $0x894c; BYTE $0xf8  // movq         %r15, %rax
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0xe44a8f0f; WORD $0xffff  // jg           LBB0_4, $-7094(%rip)
	LONG $0x0008a5e9; BYTE $0x00  // jmp          LBB0_427, $2213(%rip)
LBB0_342:
	LONG $0xa05d034c  // addq         $-96(%rbp), %r11
	LONG $0xfff2a5e9; BYTE $0xff  // jmp          LBB0_195, $-3419(%rip)
LBB0_208:
	WORD $0x894d; BYTE $0xe3  // movq         %r12, %r11
	LONG $0xb0558b4c  // movq         $-80(%rbp), %r10
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	LONG $0x072c820f; WORD $0x0000  // jb           LBB0_404, $1836(%rip)
LBB0_209:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xf5d70f66  // pmovmskb     %xmm5, %esi
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xd9740f66  // pcmpeqb      %xmm1, %xmm3
	LONG $0xcbd70f66  // pmovmskb     %xmm3, %ecx
	LONG $0xe1740f66  // pcmpeqb      %xmm1, %xmm4
	LONG $0xc4d70f66  // pmovmskb     %xmm4, %eax
	LONG $0x10e2c148  // shlq         $16, %rdx
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc1  // orq          %rax, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_211, $9(%rip)
	WORD $0x8548; BYTE $0xc9  // testq        %rcx, %rcx
	LONG $0x0675850f; WORD $0x0000  // jne          LBB0_401, $1653(%rip)
LBB0_211:
	WORD $0x0948; BYTE $0xf2  // orq          %rsi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x0683850f; WORD $0x0000  // jne          LBB0_402, $1667(%rip)
LBB0_212:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x06bb840f; WORD $0x0000  // je           LBB0_403, $1723(%rip)
LBB0_213:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
	LONG $0xa05d034c  // addq         $-96(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0xfffa11e9; BYTE $0xff  // jmp          LBB0_304, $-1519(%rip)
LBB0_275:
	WORD $0x894d; BYTE $0xe3  // movq         %r12, %r11
	LONG $0xb0558b4c  // movq         $-80(%rbp), %r10
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	LONG $0x0132820f; WORD $0x0000  // jb           LBB0_347, $306(%rip)
LBB0_276:
	LONG $0x6f0f41f3; BYTE $0x1b  // movdqu       (%r11), %xmm3
	LONG $0x6f0f41f3; WORD $0x1063  // movdqu       $16(%r11), %xmm4
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xcdd70f66  // pmovmskb     %xmm5, %ecx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe8740f66  // pcmpeqb      %xmm0, %xmm5
	LONG $0xf5d70f66  // pmovmskb     %xmm5, %esi
	LONG $0xeb6f0f66  // movdqa       %xmm3, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xd5d70f66  // pmovmskb     %xmm5, %edx
	LONG $0xec6f0f66  // movdqa       %xmm4, %xmm5
	LONG $0xe9740f66  // pcmpeqb      %xmm1, %xmm5
	LONG $0xc5d70f66  // pmovmskb     %xmm5, %eax
	LONG $0xea6f0f66  // movdqa       %xmm2, %xmm5
	LONG $0xeb640f66  // pcmpgtb      %xmm3, %xmm5
	LONG $0x640f4166; BYTE $0xde  // pcmpgtb      %xmm14, %xmm3
	LONG $0xdddb0f66  // pand         %xmm5, %xmm3
	LONG $0xd70f4466; BYTE $0xf3  // pmovmskb     %xmm3, %r14d
	LONG $0xda6f0f66  // movdqa       %xmm2, %xmm3
	LONG $0xdc640f66  // pcmpgtb      %xmm4, %xmm3
	LONG $0x640f4166; BYTE $0xe6  // pcmpgtb      %xmm14, %xmm4
	LONG $0xe3db0f66  // pand         %xmm3, %xmm4
	LONG $0xdcd70f66  // pmovmskb     %xmm4, %ebx
	LONG $0x10e6c148  // shlq         $16, %rsi
	LONG $0x10e0c148  // shlq         $16, %rax
	WORD $0x0948; BYTE $0xc2  // orq          %rax, %rdx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0009850f; WORD $0x0000  // jne          LBB0_278, $9(%rip)
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x069f850f; WORD $0x0000  // jne          LBB0_412, $1695(%rip)
LBB0_278:
	LONG $0x10e3c148  // shlq         $16, %rbx
	WORD $0x0948; BYTE $0xce  // orq          %rcx, %rsi
	WORD $0x8948; BYTE $0xd0  // movq         %rdx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0x055e850f; WORD $0x0000  // jne          LBB0_400, $1374(%rip)
LBB0_279:
	WORD $0x094c; BYTE $0xf3  // orq          %r14, %rbx
	LONG $0x000040b9; BYTE $0x00  // movl         $64, %ecx
	LONG $0x000040ba; BYTE $0x00  // movl         $64, %edx
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_281, $4(%rip)
	LONG $0xd6bc0f48  // bsfq         %rsi, %rdx
LBB0_281:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x0004840f; WORD $0x0000  // je           LBB0_283, $4(%rip)
	LONG $0xcbbc0f48  // bsfq         %rbx, %rcx
LBB0_283:
	WORD $0x8548; BYTE $0xf6  // testq        %rsi, %rsi
	LONG $0x005a840f; WORD $0x0000  // je           LBB0_345, $90(%rip)
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x294d; BYTE $0xcb  // subq         %r9, %r11
	WORD $0x3948; BYTE $0xd1  // cmpq         %rdx, %rcx
	LONG $0x096c820f; WORD $0x0000  // jb           LBB0_471, $2412(%rip)
	LONG $0x135c8d4d; BYTE $0x01  // leaq         $1(%r11,%rdx), %r11
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xfff917e9; BYTE $0xff  // jmp          LBB0_304, $-1769(%rip)
LBB0_343:
	WORD $0x8949; BYTE $0xc8  // movq         %rcx, %r8
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x8548; BYTE $0xff  // testq        %rdi, %rdi
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xf87e850f; WORD $0xffff  // jne          LBB0_292, $-1922(%rip)
	LONG $0x00076be9; BYTE $0x00  // jmp          LBB0_438, $1899(%rip)
LBB0_344:
	LONG $0xffc5c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r13
	WORD $0x894d; BYTE $0xd3  // movq         %r10, %r11
	WORD $0x8949; BYTE $0xf9  // movq         %rdi, %r9
	LONG $0xffc4c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r12
	LONG $0xffc7c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rdi
	LONG $0xffe8cce9; BYTE $0xff  // jmp          LBB0_92, $-5940(%rip)
LBB0_345:
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0x092b850f; WORD $0x0000  // jne          LBB0_472, $2347(%rip)
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c28349  // addq         $-32, %r10
LBB0_347:
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0x062f850f; WORD $0x0000  // jne          LBB0_415, $1583(%rip)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0732840f; WORD $0x0000  // je           LBB0_442, $1842(%rip)
LBB0_349:
	LONG $0x0bb60f41  // movzbl       (%r11), %ecx
	WORD $0xf980; BYTE $0x22  // cmpb         $34, %cl
	LONG $0x00db840f; WORD $0x0000  // je           LBB0_360, $219(%rip)
	WORD $0xf980; BYTE $0x5c  // cmpb         $92, %cl
	LONG $0x0026840f; WORD $0x0000  // je           LBB0_353, $38(%rip)
	WORD $0xf980; BYTE $0x1f  // cmpb         $31, %cl
	LONG $0x08c7860f; WORD $0x0000  // jbe          LBB0_469, $2247(%rip)
	LONG $0xffc1c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rcx
	LONG $0x000001ba; BYTE $0x00  // movl         $1, %edx
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0149; BYTE $0xca  // addq         %rcx, %r10
	LONG $0xffc9850f; WORD $0xffff  // jne          LBB0_349, $-55(%rip)
	LONG $0x0006f6e9; BYTE $0x00  // jmp          LBB0_442, $1782(%rip)
LBB0_353:
	LONG $0x01fa8349  // cmpq         $1, %r10
	LONG $0x08ea840f; WORD $0x0000  // je           LBB0_476, $2282(%rip)
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x294c; BYTE $0xc8  // subq         %r9, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
	LONG $0xfec1c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rcx
	LONG $0x000002ba; BYTE $0x00  // movl         $2, %edx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	WORD $0x0149; BYTE $0xd3  // addq         %rdx, %r11
	WORD $0x0149; BYTE $0xca  // addq         %rcx, %r10
	LONG $0xff8c850f; WORD $0xffff  // jne          LBB0_349, $-116(%rip)
	LONG $0x0006b9e9; BYTE $0x00  // jmp          LBB0_442, $1721(%rip)
LBB0_355:
	LONG $0xffc1c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r9
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xf889830f; WORD $0xffff  // jae          LBB0_51, $-1911(%rip)
	LONG $0x0001dbe9; BYTE $0x00  // jmp          LBB0_374, $475(%rip)
LBB0_356:
	LONG $0xffc1c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r9
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0x894d; BYTE $0xd5  // movq         %r10, %r13
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0xf8f4830f; WORD $0xffff  // jae          LBB0_114, $-1804(%rip)
LBB0_357:
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	WORD $0x8548; BYTE $0xdb  // testq        %rbx, %rbx
	LONG $0xfbae840f; WORD $0xffff  // je           LBB0_315, $-1106(%rip)
LBB0_358:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x0854840f; WORD $0x0000  // je           LBB0_473, $2132(%rip)
	LONG $0xa84d8b48  // movq         $-88(%rbp), %rcx
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0xc9440f4c  // cmoveq       %rcx, %r9
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	WORD $0x894d; BYTE $0xea  // movq         %r13, %r10
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xfb8c850f; WORD $0xffff  // jne          LBB0_316, $-1140(%rip)
	LONG $0x00058fe9; BYTE $0x00  // jmp          LBB0_420, $1423(%rip)
LBB0_360:
	LONG $0xa05d034c  // addq         $-96(%rbp), %r11
	LONG $0xfff7bfe9; BYTE $0xff  // jmp          LBB0_304, $-2113(%rip)
LBB0_361:
	WORD $0xf749; BYTE $0xdb  // negq         %r11
	LONG $0xfffcdbe9; BYTE $0xff  // jmp          LBB0_339, $-805(%rip)
LBB0_362:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x20fd8349  // cmpq         $32, %r13
	LONG $0xf9cf830f; WORD $0xffff  // jae          LBB0_137, $-1585(%rip)
	LONG $0x0002c3e9; BYTE $0x00  // jmp          LBB0_389, $707(%rip)
LBB0_363:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	LONG $0x20f88348  // cmpq         $32, %rax
	LONG $0xfa39830f; WORD $0xffff  // jae          LBB0_171, $-1479(%rip)
LBB0_364:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xfbdf840f; WORD $0xffff  // je           LBB0_326, $-1057(%rip)
LBB0_365:
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0x07e3840f; WORD $0x0000  // je           LBB0_474, $2019(%rip)
	LONG $0xa84d8b48  // movq         $-88(%rbp), %rcx
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff48; BYTE $0xc8  // decq         %rax
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	LONG $0xb8558b4c  // movq         $-72(%rbp), %r10
	WORD $0x8548; BYTE $0xc0  // testq        %rax, %rax
	LONG $0xfbb9850f; WORD $0xffff  // jne          LBB0_327, $-1095(%rip)
	LONG $0x00054fe9; BYTE $0x00  // jmp          LBB0_429, $1359(%rip)
LBB0_367:
	LONG $0xffc6c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r14
	WORD $0x894d; BYTE $0xe0  // movq         %r12, %r8
	WORD $0x894d; BYTE $0xd1  // movq         %r10, %r9
	LONG $0xffc7c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rdi
	LONG $0xffc3c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rbx
	LONG $0xb0358d48; WORD $0x0009; BYTE $0x00  // leaq         $2480(%rip), %rsi  /* LJTI0_2+0(%rip) */
	LONG $0xfff2f6e9; BYTE $0xff  // jmp          LBB0_241, $-3338(%rip)
LBB0_368:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	LONG $0xfc70830f; WORD $0xffff  // jae          LBB0_209, $-912(%rip)
	LONG $0x000397e9; BYTE $0x00  // jmp          LBB0_404, $919(%rip)
LBB0_369:
	LONG $0xffc0c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r8
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	LONG $0x20fa8349  // cmpq         $32, %r10
	LONG $0xb87d8b48  // movq         $-72(%rbp), %rdi
	LONG $0xfce9830f; WORD $0xffff  // jae          LBB0_276, $-791(%rip)
	LONG $0xfffe16e9; BYTE $0xff  // jmp          LBB0_347, $-490(%rip)
LBB0_370:
	WORD $0x8941; BYTE $0xdc  // movl         %ebx, %r12d
	WORD $0xf741; BYTE $0xd4  // notl         %r12d
	WORD $0x2141; BYTE $0xd4  // andl         %edx, %r12d
	LONG $0x24048d47  // leal         (%r12,%r12), %r8d
	WORD $0x0941; BYTE $0xd8  // orl          %ebx, %r8d
	LONG $0xaaaaaab9; BYTE $0xaa  // movl         $2863311530, %ecx
	WORD $0x3144; BYTE $0xc1  // xorl         %r8d, %ecx
	WORD $0xd121  // andl         %edx, %ecx
	LONG $0xaaaae181; WORD $0xaaaa  // andl         $-1431655766, %ecx
	WORD $0xdb31  // xorl         %ebx, %ebx
	WORD $0x0144; BYTE $0xe1  // addl         %r12d, %ecx
	WORD $0x920f; BYTE $0xc3  // setb         %bl
	WORD $0xc901  // addl         %ecx, %ecx
	LONG $0x5555f181; WORD $0x5555  // xorl         $1431655765, %ecx
	WORD $0x2144; BYTE $0xc1  // andl         %r8d, %ecx
	WORD $0xd1f7  // notl         %ecx
	WORD $0xce21  // andl         %ecx, %esi
	LONG $0xfff829e9; BYTE $0xff  // jmp          LBB0_117, $-2007(%rip)
LBB0_371:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc9bc0f4c  // bsfq         %rcx, %r9
	WORD $0x0149; BYTE $0xc1  // addq         %rax, %r9
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc0  // orq          %r8, %rax
	LONG $0xf74d840f; WORD $0xffff  // je           LBB0_54, $-2227(%rip)
LBB0_372:
	WORD $0x8944; BYTE $0xc0  // movl         %r8d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	WORD $0x348d; BYTE $0x00  // leal         (%rax,%rax), %esi
	WORD $0x0944; BYTE $0xc6  // orl          %r8d, %esi
	LONG $0xaaaaaabf; BYTE $0xaa  // movl         $2863311530, %edi
	WORD $0xf731  // xorl         %esi, %edi
	WORD $0xcf21  // andl         %ecx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xc0  // xorl         %r8d, %r8d
	WORD $0xc701  // addl         %eax, %edi
	LONG $0xc0920f41  // setb         %r8b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xf721  // andl         %esi, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xfa21  // andl         %edi, %edx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xf71a850f; WORD $0xffff  // jne          LBB0_55, $-2278(%rip)
LBB0_373:
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c58349  // addq         $-32, %r13
LBB0_374:
	WORD $0x854d; BYTE $0xc0  // testq        %r8, %r8
	LONG $0x00ce850f; WORD $0x0000  // jne          LBB0_384, $206(%rip)
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x03f4840f; WORD $0x0000  // je           LBB0_420, $1012(%rip)
LBB0_376:
	LONG $0x014b8d49  // leaq         $1(%r11), %rcx
	LONG $0x1bb60f41  // movzbl       (%r11), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x0053840f; WORD $0x0000  // je           LBB0_381, $83(%rip)
	LONG $0xff558d49  // leaq         $-1(%r13), %rdx
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_379, $20(%rip)
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_376, $-45(%rip)
	LONG $0x0003c2e9; BYTE $0x00  // jmp          LBB0_420, $962(%rip)
LBB0_379:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x03b9840f; WORD $0x0000  // je           LBB0_420, $953(%rip)
	LONG $0xa84d0348  // addq         $-88(%rbp), %rcx
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0xc9440f4c  // cmoveq       %rcx, %r9
	LONG $0x02c38349  // addq         $2, %r11
	LONG $0xfec58349  // addq         $-2, %r13
	WORD $0x894c; BYTE $0xea  // movq         %r13, %rdx
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffa1850f; WORD $0xffff  // jne          LBB0_376, $-95(%rip)
	LONG $0x000390e9; BYTE $0x00  // jmp          LBB0_420, $912(%rip)
LBB0_381:
	LONG $0xd04d2b48  // subq         $-48(%rbp), %rcx
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	LONG $0xffed50e9; BYTE $0xff  // jmp          LBB0_188, $-4784(%rip)
LBB0_382:
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd04d2b48  // subq         $-48(%rbp), %rcx
	LONG $0xcabc0f4c  // bsfq         %rdx, %r9
	WORD $0x0149; BYTE $0xc9  // addq         %rcx, %r9
	LONG $0xfff71ce9; BYTE $0xff  // jmp          LBB0_116, $-2276(%rip)
LBB0_383:
	WORD $0x8945; BYTE $0xd4  // movl         %r10d, %r12d
	WORD $0xf741; BYTE $0xd4  // notl         %r12d
	WORD $0x2141; BYTE $0xd4  // andl         %edx, %r12d
	LONG $0x240c8d47  // leal         (%r12,%r12), %r9d
	WORD $0x0945; BYTE $0xd1  // orl          %r10d, %r9d
	LONG $0xaaaaaab9; BYTE $0xaa  // movl         $2863311530, %ecx
	WORD $0x3144; BYTE $0xc9  // xorl         %r9d, %ecx
	WORD $0xd121  // andl         %edx, %ecx
	LONG $0xaaaae181; WORD $0xaaaa  // andl         $-1431655766, %ecx
	WORD $0x3145; BYTE $0xd2  // xorl         %r10d, %r10d
	WORD $0x0144; BYTE $0xe1  // addl         %r12d, %ecx
	LONG $0xc2920f41  // setb         %r10b
	WORD $0xc901  // addl         %ecx, %ecx
	LONG $0x5555f181; WORD $0x5555  // xorl         $1431655765, %ecx
	WORD $0x2144; BYTE $0xc9  // andl         %r9d, %ecx
	WORD $0xd1f7  // notl         %ecx
	WORD $0xcb21  // andl         %ecx, %ebx
	LONG $0xfff8b3e9; BYTE $0xff  // jmp          LBB0_174, $-1869(%rip)
LBB0_384:
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x032a840f; WORD $0x0000  // je           LBB0_420, $810(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0xc8440f4c  // cmoveq       %rax, %r9
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xcd  // decq         %r13
	LONG $0xc07d8b48  // movq         $-64(%rbp), %rdi
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xff14850f; WORD $0xffff  // jne          LBB0_376, $-236(%rip)
	LONG $0x000303e9; BYTE $0x00  // jmp          LBB0_420, $771(%rip)
LBB0_386:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc1bc0f4c  // bsfq         %rcx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xfa  // orq          %rdi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0xf7ab840f; WORD $0xffff  // je           LBB0_140, $-2133(%rip)
LBB0_387:
	WORD $0x8944; BYTE $0xc8  // movl         %r9d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	WORD $0x348d; BYTE $0x00  // leal         (%rax,%rax), %esi
	WORD $0x0944; BYTE $0xce  // orl          %r9d, %esi
	LONG $0xaaaaaabf; BYTE $0xaa  // movl         $2863311530, %edi
	WORD $0xf731  // xorl         %esi, %edi
	WORD $0xcf21  // andl         %ecx, %edi
	LONG $0xaaaae781; WORD $0xaaaa  // andl         $-1431655766, %edi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0xc701  // addl         %eax, %edi
	LONG $0xc1920f41  // setb         %r9b
	WORD $0xff01  // addl         %edi, %edi
	LONG $0x5555f781; WORD $0x5555  // xorl         $1431655765, %edi
	WORD $0xf721  // andl         %esi, %edi
	WORD $0xd7f7  // notl         %edi
	WORD $0xfa21  // andl         %edi, %edx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xf778850f; WORD $0xffff  // jne          LBB0_141, $-2184(%rip)
LBB0_388:
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c58349  // addq         $-32, %r13
LBB0_389:
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0x0097850f; WORD $0x0000  // jne          LBB0_398, $151(%rip)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x02cf840f; WORD $0x0000  // je           LBB0_429, $719(%rip)
LBB0_391:
	LONG $0x014b8d49  // leaq         $1(%r11), %rcx
	LONG $0x1bb60f41  // movzbl       (%r11), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x0057840f; WORD $0x0000  // je           LBB0_396, $87(%rip)
	LONG $0xff558d49  // leaq         $-1(%r13), %rdx
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_394, $20(%rip)
	WORD $0x8949; BYTE $0xd5  // movq         %rdx, %r13
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_391, $-45(%rip)
	LONG $0x00029de9; BYTE $0x00  // jmp          LBB0_429, $669(%rip)
LBB0_394:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x04f0840f; WORD $0x0000  // je           LBB0_475, $1264(%rip)
	LONG $0xa84d0348  // addq         $-88(%rbp), %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0x02c38349  // addq         $2, %r11
	LONG $0xfec58349  // addq         $-2, %r13
	WORD $0x894c; BYTE $0xea  // movq         %r13, %rdx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xff9d850f; WORD $0xffff  // jne          LBB0_391, $-99(%rip)
	LONG $0x000267e9; BYTE $0x00  // jmp          LBB0_429, $615(%rip)
LBB0_396:
	WORD $0x294c; BYTE $0xc9  // subq         %r9, %rcx
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	LONG $0xffec4ce9; BYTE $0xff  // jmp          LBB0_195, $-5044(%rip)
LBB0_397:
	WORD $0x894c; BYTE $0xd9  // movq         %r11, %rcx
	LONG $0xd04d2b48  // subq         $-48(%rbp), %rcx
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc8  // addq         %rcx, %r8
	LONG $0xfff76fe9; BYTE $0xff  // jmp          LBB0_173, $-2193(%rip)
LBB0_398:
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0x049c840f; WORD $0x0000  // je           LBB0_475, $1180(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xcd  // decq         %r13
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xed  // testq        %r13, %r13
	LONG $0xff4b850f; WORD $0xffff  // jne          LBB0_391, $-181(%rip)
	LONG $0x000215e9; BYTE $0x00  // jmp          LBB0_429, $533(%rip)
LBB0_400:
	WORD $0x8944; BYTE $0xc8  // movl         %r9d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xd021  // andl         %edx, %eax
	LONG $0x00248d44  // leal         (%rax,%rax), %r12d
	WORD $0x0945; BYTE $0xcc  // orl          %r9d, %r12d
	LONG $0xaaaaaab9; BYTE $0xaa  // movl         $2863311530, %ecx
	WORD $0x3144; BYTE $0xe1  // xorl         %r12d, %ecx
	WORD $0xd121  // andl         %edx, %ecx
	LONG $0xaaaae181; WORD $0xaaaa  // andl         $-1431655766, %ecx
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0xc101  // addl         %eax, %ecx
	LONG $0xc1920f41  // setb         %r9b
	WORD $0xc901  // addl         %ecx, %ecx
	LONG $0x5555f181; WORD $0x5555  // xorl         $1431655765, %ecx
	WORD $0x2144; BYTE $0xe1  // andl         %r12d, %ecx
	WORD $0xd1f7  // notl         %ecx
	WORD $0xce21  // andl         %ecx, %esi
	LONG $0xfffa67e9; BYTE $0xff  // jmp          LBB0_279, $-1433(%rip)
LBB0_401:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc1bc0f4c  // bsfq         %rcx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	WORD $0x0948; BYTE $0xf2  // orq          %rsi, %rdx
	WORD $0x8948; BYTE $0xc8  // movq         %rcx, %rax
	WORD $0x094c; BYTE $0xc8  // orq          %r9, %rax
	LONG $0xf97d840f; WORD $0xffff  // je           LBB0_212, $-1667(%rip)
LBB0_402:
	WORD $0x8944; BYTE $0xc8  // movl         %r9d, %eax
	WORD $0xd0f7  // notl         %eax
	WORD $0xc821  // andl         %ecx, %eax
	LONG $0x00348d44  // leal         (%rax,%rax), %r14d
	WORD $0x0945; BYTE $0xce  // orl          %r9d, %r14d
	WORD $0x8944; BYTE $0xf6  // movl         %r14d, %esi
	LONG $0xaaaaaabb; BYTE $0xaa  // movl         $2863311530, %ebx
	WORD $0xde31  // xorl         %ebx, %esi
	WORD $0xce21  // andl         %ecx, %esi
	LONG $0xaaaae681; WORD $0xaaaa  // andl         $-1431655766, %esi
	WORD $0x3145; BYTE $0xc9  // xorl         %r9d, %r9d
	WORD $0xc601  // addl         %eax, %esi
	LONG $0xc1920f41  // setb         %r9b
	WORD $0xf601  // addl         %esi, %esi
	LONG $0x5555f681; WORD $0x5555  // xorl         $1431655765, %esi
	WORD $0x2144; BYTE $0xf6  // andl         %r14d, %esi
	WORD $0xd6f7  // notl         %esi
	WORD $0xf221  // andl         %esi, %edx
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xf945850f; WORD $0xffff  // jne          LBB0_213, $-1723(%rip)
LBB0_403:
	LONG $0x20c38349  // addq         $32, %r11
	LONG $0xe0c28349  // addq         $-32, %r10
LBB0_404:
	WORD $0x854d; BYTE $0xc9  // testq        %r9, %r9
	LONG $0x0097850f; WORD $0x0000  // jne          LBB0_413, $151(%rip)
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x01ce840f; WORD $0x0000  // je           LBB0_442, $462(%rip)
LBB0_406:
	LONG $0x014b8d49  // leaq         $1(%r11), %rcx
	LONG $0x1bb60f41  // movzbl       (%r11), %ebx
	WORD $0xfb80; BYTE $0x22  // cmpb         $34, %bl
	LONG $0x0057840f; WORD $0x0000  // je           LBB0_411, $87(%rip)
	LONG $0xff528d49  // leaq         $-1(%r10), %rdx
	WORD $0xfb80; BYTE $0x5c  // cmpb         $92, %bl
	LONG $0x0014840f; WORD $0x0000  // je           LBB0_409, $20(%rip)
	WORD $0x8949; BYTE $0xd2  // movq         %rdx, %r10
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xffd3850f; WORD $0xffff  // jne          LBB0_406, $-45(%rip)
	LONG $0x00019ce9; BYTE $0x00  // jmp          LBB0_442, $412(%rip)
LBB0_409:
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0x0391840f; WORD $0x0000  // je           LBB0_476, $913(%rip)
	LONG $0xa84d0348  // addq         $-88(%rbp), %rcx
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc1440f4c  // cmoveq       %rcx, %r8
	LONG $0x02c38349  // addq         $2, %r11
	LONG $0xfec28349  // addq         $-2, %r10
	WORD $0x894c; BYTE $0xd2  // movq         %r10, %rdx
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x8548; BYTE $0xd2  // testq        %rdx, %rdx
	LONG $0xff9d850f; WORD $0xffff  // jne          LBB0_406, $-99(%rip)
	LONG $0x000166e9; BYTE $0x00  // jmp          LBB0_442, $358(%rip)
LBB0_411:
	WORD $0x294c; BYTE $0xc9  // subq         %r9, %rcx
	WORD $0x8949; BYTE $0xcb  // movq         %rcx, %r11
	LONG $0xfff2d9e9; BYTE $0xff  // jmp          LBB0_304, $-3367(%rip)
LBB0_412:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xd0452b48  // subq         $-48(%rbp), %rax
	LONG $0xc2bc0f4c  // bsfq         %rdx, %r8
	WORD $0x0149; BYTE $0xc0  // addq         %rax, %r8
	LONG $0xfff94ee9; BYTE $0xff  // jmp          LBB0_278, $-1714(%rip)
LBB0_413:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x033d840f; WORD $0x0000  // je           LBB0_476, $829(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xca  // decq         %r10
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xff4b850f; WORD $0xffff  // jne          LBB0_406, $-181(%rip)
	LONG $0x000114e9; BYTE $0x00  // jmp          LBB0_442, $276(%rip)
LBB0_415:
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0x0309840f; WORD $0x0000  // je           LBB0_476, $777(%rip)
	LONG $0xa8458b48  // movq         $-88(%rbp), %rax
	WORD $0x014c; BYTE $0xd8  // addq         %r11, %rax
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0xc0440f4c  // cmoveq       %rax, %r8
	WORD $0xff49; BYTE $0xc3  // incq         %r11
	WORD $0xff49; BYTE $0xca  // decq         %r10
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xd04d8b4c  // movq         $-48(%rbp), %r9
	WORD $0x854d; BYTE $0xd2  // testq        %r10, %r10
	LONG $0xf9b3850f; WORD $0xffff  // jne          LBB0_349, $-1613(%rip)
	LONG $0x0000e0e9; BYTE $0x00  // jmp          LBB0_442, $224(%rip)
LBB0_417:
	WORD $0x8948; BYTE $0x16  // movq         %rdx, (%rsi)
LBB0_418:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	LONG $0x000044e9; BYTE $0x00  // jmp          LBB0_427, $68(%rip)
LBB0_439:
	LONG $0xf9c0c748; WORD $0xffff; BYTE $0xff  // movq         $-7, %rax
	LONG $0x000038e9; BYTE $0x00  // jmp          LBB0_427, $56(%rip)
LBB0_419:
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x007d850f; WORD $0x0000  // jne          LBB0_150, $125(%rip)
LBB0_420:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x894d; BYTE $0xd1  // movq         %r10, %r9
	LONG $0x00006ee9; BYTE $0x00  // jmp          LBB0_150, $110(%rip)
LBB0_421:
	LONG $0xffc0c748; WORD $0xffff; BYTE $0xff  // movq         $-1, %rax
	LONG $0x000003e9; BYTE $0x00  // jmp          LBB0_424, $3(%rip)
LBB0_423:
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
LBB0_424:
	WORD $0xf748; BYTE $0xd0  // notq         %rax
	WORD $0x0149; BYTE $0xc7  // addq         %rax, %r15
LBB0_425:
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
LBB0_426:
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
LBB0_427:
	LONG $0x70c48348  // addq         $112, %rsp
	BYTE $0x5b  // popq         %rbx
	WORD $0x5c41  // popq         %r12
	WORD $0x5d41  // popq         %r13
	WORD $0x5e41  // popq         %r14
	WORD $0x5f41  // popq         %r15
	BYTE $0x5d  // popq         %rbp
	BYTE $0xc3  // retq         
LBB0_428:
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x01bf850f; WORD $0x0000  // jne          LBB0_461, $447(%rip)
LBB0_429:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x894d; BYTE $0xd0  // movq         %r10, %r8
	LONG $0x0001b0e9; BYTE $0x00  // jmp          LBB0_461, $432(%rip)
LBB0_440:
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0xffffd0e9; BYTE $0xff  // jmp          LBB0_427, $-48(%rip)
LBB0_430:
	LONG $0xfff98349  // cmpq         $-1, %r9
	LONG $0x000e850f; WORD $0x0000  // jne          LBB0_434, $14(%rip)
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
LBB0_432:
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
LBB0_433:
	WORD $0x894d; BYTE $0xd9  // movq         %r11, %r9
LBB0_434:
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
LBB0_150:
	LONG $0xc8458b48  // movq         $-56(%rbp), %rax
	WORD $0x894c; BYTE $0x08  // movq         %r9, (%rax)
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xffffa2e9; BYTE $0xff  // jmp          LBB0_427, $-94(%rip)
LBB0_435:
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x0134840f; WORD $0x0000  // je           LBB0_453, $308(%rip)
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	LONG $0x000164e9; BYTE $0x00  // jmp          LBB0_461, $356(%rip)
LBB0_437:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
LBB0_438:
	WORD $0x294d; BYTE $0xdf  // subq         %r11, %r15
	LONG $0xffff73e9; BYTE $0xff  // jmp          LBB0_425, $-141(%rip)
LBB0_441:
	LONG $0xfffb8349  // cmpq         $-1, %r11
	LONG $0x014b850f; WORD $0x0000  // jne          LBB0_461, $331(%rip)
LBB0_442:
	LONG $0xffc3c749; WORD $0xffff; BYTE $0xff  // movq         $-1, %r11
	WORD $0x8949; BYTE $0xf8  // movq         %rdi, %r8
	LONG $0x00013ce9; BYTE $0x00  // jmp          LBB0_461, $316(%rip)
LBB0_443:
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	WORD $0xf980; BYTE $0x61  // cmpb         $97, %cl
	LONG $0xff54850f; WORD $0xffff  // jne          LBB0_427, $-172(%rip)
	LONG $0x024f8d49  // leaq         $2(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x6c02  // cmpb         $108, $2(%r9,%r15)
	LONG $0xff41850f; WORD $0xffff  // jne          LBB0_427, $-191(%rip)
	LONG $0x034f8d49  // leaq         $3(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x7303  // cmpb         $115, $3(%r9,%r15)
	LONG $0xff2e850f; WORD $0xffff  // jne          LBB0_427, $-210(%rip)
	LONG $0x044f8d49  // leaq         $4(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x6504  // cmpb         $101, $4(%r9,%r15)
	LONG $0xff1b850f; WORD $0xffff  // jne          LBB0_427, $-229(%rip)
	LONG $0x05c78349  // addq         $5, %r15
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0xffff0fe9; BYTE $0xff  // jmp          LBB0_427, $-241(%rip)
LBB0_249:
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	LONG $0x6e3a8041  // cmpb         $110, (%r10)
	LONG $0xfefb850f; WORD $0xffff  // jne          LBB0_427, $-261(%rip)
	LONG $0x014f8d49  // leaq         $1(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x7501  // cmpb         $117, $1(%r9,%r15)
	LONG $0xfee8850f; WORD $0xffff  // jne          LBB0_427, $-280(%rip)
	LONG $0x024f8d49  // leaq         $2(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x6c02  // cmpb         $108, $2(%r9,%r15)
	LONG $0xfed5850f; WORD $0xffff  // jne          LBB0_427, $-299(%rip)
	LONG $0x034f8d49  // leaq         $3(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x6c03  // cmpb         $108, $3(%r9,%r15)
	LONG $0xfec2850f; WORD $0xffff  // jne          LBB0_427, $-318(%rip)
	LONG $0x00004de9; BYTE $0x00  // jmp          LBB0_452, $77(%rip)
LBB0_448:
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0xfec0c748; WORD $0xffff; BYTE $0xff  // movq         $-2, %rax
	LONG $0x743a8041  // cmpb         $116, (%r10)
	LONG $0xfea9850f; WORD $0xffff  // jne          LBB0_427, $-343(%rip)
	LONG $0x014f8d49  // leaq         $1(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x7201  // cmpb         $114, $1(%r9,%r15)
	LONG $0xfe96850f; WORD $0xffff  // jne          LBB0_427, $-362(%rip)
	LONG $0x024f8d49  // leaq         $2(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x7502  // cmpb         $117, $2(%r9,%r15)
	LONG $0xfe83850f; WORD $0xffff  // jne          LBB0_427, $-381(%rip)
	LONG $0x034f8d49  // leaq         $3(%r15), %rcx
	WORD $0x8948; BYTE $0x0e  // movq         %rcx, (%rsi)
	LONG $0x397c8043; WORD $0x6503  // cmpb         $101, $3(%r9,%r15)
	LONG $0xfe70850f; WORD $0xffff  // jne          LBB0_427, $-400(%rip)
LBB0_452:
	LONG $0x04c78349  // addq         $4, %r15
	WORD $0x894c; BYTE $0x3e  // movq         %r15, (%rsi)
	LONG $0xfffe64e9; BYTE $0xff  // jmp          LBB0_427, $-412(%rip)
LBB0_453:
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
LBB0_454:
	WORD $0x294d; BYTE $0xcb  // subq         %r9, %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
LBB0_455:
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	LONG $0x000023e9; BYTE $0x00  // jmp          LBB0_461, $35(%rip)
LBB0_456:
	LONG $0xfff88349  // cmpq         $-1, %r8
	LONG $0x000e850f; WORD $0x0000  // jne          LBB0_459, $14(%rip)
	LONG $0xc2bc0f48  // bsfq         %rdx, %rax
LBB0_458:
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	WORD $0x0149; BYTE $0xc3  // addq         %rax, %r11
	WORD $0x894d; BYTE $0xd8  // movq         %r11, %r8
LBB0_459:
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
LBB0_460:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
LBB0_461:
	WORD $0x894c; BYTE $0x06  // movq         %r8, (%rsi)
	WORD $0x894c; BYTE $0xd8  // movq         %r11, %rax
	LONG $0xfffe1de9; BYTE $0xff  // jmp          LBB0_427, $-483(%rip)
LBB0_462:
	WORD $0x8949; BYTE $0xc2  // movq         %rax, %r10
	LONG $0xfffde7e9; BYTE $0xff  // jmp          LBB0_420, $-537(%rip)
LBB0_463:
	WORD $0x8949; BYTE $0xca  // movq         %rcx, %r10
	LONG $0xfffddfe9; BYTE $0xff  // jmp          LBB0_420, $-545(%rip)
LBB0_149:
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	WORD $0x8949; BYTE $0xc9  // movq         %rcx, %r9
	LONG $0xfffe4ae9; BYTE $0xff  // jmp          LBB0_150, $-438(%rip)
LBB0_185:
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	WORD $0x8949; BYTE $0xc8  // movq         %rcx, %r8
	LONG $0xffffc1e9; BYTE $0xff  // jmp          LBB0_461, $-63(%rip)
LBB0_464:
	WORD $0x8949; BYTE $0xc2  // movq         %rax, %r10
	LONG $0xfffdfae9; BYTE $0xff  // jmp          LBB0_429, $-518(%rip)
LBB0_465:
	WORD $0x8949; BYTE $0xca  // movq         %rcx, %r10
	LONG $0xfffdf2e9; BYTE $0xff  // jmp          LBB0_429, $-526(%rip)
LBB0_466:
	WORD $0x8948; BYTE $0xc7  // movq         %rax, %rdi
	LONG $0xfffe5ee9; BYTE $0xff  // jmp          LBB0_442, $-418(%rip)
LBB0_467:
	LONG $0xc2bc0f49  // bsfq         %r10, %rax
	LONG $0xfffe06e9; BYTE $0xff  // jmp          LBB0_432, $-506(%rip)
LBB0_468:
	LONG $0xd05d2b4c  // subq         $-48(%rbp), %r11
	LONG $0xfffe04e9; BYTE $0xff  // jmp          LBB0_433, $-508(%rip)
LBB0_469:
	WORD $0x294d; BYTE $0xcb  // subq         %r9, %r11
	LONG $0xffff5de9; BYTE $0xff  // jmp          LBB0_455, $-163(%rip)
LBB0_470:
	LONG $0xc7bc0f48  // bsfq         %rdi, %rax
	LONG $0xffff4ee9; BYTE $0xff  // jmp          LBB0_454, $-178(%rip)
LBB0_471:
	WORD $0x014c; BYTE $0xd9  // addq         %r11, %rcx
	LONG $0xfec3c749; WORD $0xffff; BYTE $0xff  // movq         $-2, %r11
	WORD $0x8949; BYTE $0xc8  // movq         %rcx, %r8
	LONG $0xffff70e9; BYTE $0xff  // jmp          LBB0_460, $-144(%rip)
LBB0_472:
	LONG $0xc3bc0f48  // bsfq         %rbx, %rax
	LONG $0xffff56e9; BYTE $0xff  // jmp          LBB0_458, $-170(%rip)
LBB0_473:
	WORD $0x894d; BYTE $0xea  // movq         %r13, %r10
	LONG $0xfffd5de9; BYTE $0xff  // jmp          LBB0_420, $-675(%rip)
LBB0_475:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xfffd9be9; BYTE $0xff  // jmp          LBB0_429, $-613(%rip)
LBB0_474:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xb8558b4c  // movq         $-72(%rbp), %r10
	LONG $0xfffd8ee9; BYTE $0xff  // jmp          LBB0_429, $-626(%rip)
LBB0_476:
	LONG $0xc8758b48  // movq         $-56(%rbp), %rsi
	LONG $0xfffdf9e9; BYTE $0xff  // jmp          LBB0_442, $-519(%rip)
	  // .p2align 2, 0x90
	// .set L0_0_set_35, LBB0_35-LJTI0_0
	// .set L0_0_set_62, LBB0_62-LJTI0_0
	// .set L0_0_set_40, LBB0_40-LJTI0_0
	// .set L0_0_set_60, LBB0_60-LJTI0_0
	// .set L0_0_set_38, LBB0_38-LJTI0_0
	// .set L0_0_set_64, LBB0_64-LJTI0_0
LJTI0_0:
	LONG $0xffffdb13  // .long L0_0_set_35
	LONG $0xffffdd24  // .long L0_0_set_62
	LONG $0xffffdb4a  // .long L0_0_set_40
	LONG $0xffffdd0d  // .long L0_0_set_60
	LONG $0xffffdb2a  // .long L0_0_set_38
	LONG $0xffffdd4f  // .long L0_0_set_64
	// .set L0_1_set_427, LBB0_427-LJTI0_1
	// .set L0_1_set_426, LBB0_426-LJTI0_1
	// .set L0_1_set_199, LBB0_199-LJTI0_1
	// .set L0_1_set_217, LBB0_217-LJTI0_1
	// .set L0_1_set_68, LBB0_68-LJTI0_1
	// .set L0_1_set_242, LBB0_242-LJTI0_1
	// .set L0_1_set_244, LBB0_244-LJTI0_1
	// .set L0_1_set_247, LBB0_247-LJTI0_1
	// .set L0_1_set_253, LBB0_253-LJTI0_1
	// .set L0_1_set_1, LBB0_1-LJTI0_1
LJTI0_1:
	LONG $0xfffffd54  // .long L0_1_set_427
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffe79f  // .long L0_1_set_199
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffe95d  // .long L0_1_set_217
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xffffdd86  // .long L0_1_set_68
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffeb44  // .long L0_1_set_242
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffeb6c  // .long L0_1_set_244
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffebad  // .long L0_1_set_247
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffebd4  // .long L0_1_set_253
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xfffffd4d  // .long L0_1_set_426
	LONG $0xffffd8cb  // .long L0_1_set_1
	// .set L0_2_set_262, LBB0_262-LJTI0_2
	// .set L0_2_set_291, LBB0_291-LJTI0_2
	// .set L0_2_set_257, LBB0_257-LJTI0_2
	// .set L0_2_set_259, LBB0_259-LJTI0_2
	// .set L0_2_set_264, LBB0_264-LJTI0_2
LJTI0_2:
	LONG $0xffffea79  // .long L0_2_set_262
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffea79  // .long L0_2_set_262
	LONG $0xffffea33  // .long L0_2_set_257
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffea50  // .long L0_2_set_259
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffea94  // .long L0_2_set_264
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffecd9  // .long L0_2_set_291
	LONG $0xffffea94  // .long L0_2_set_264
	// .set L0_3_set_98, LBB0_98-LJTI0_3
	// .set L0_3_set_152, LBB0_152-LJTI0_3
	// .set L0_3_set_100, LBB0_100-LJTI0_3
	// .set L0_3_set_95, LBB0_95-LJTI0_3
	// .set L0_3_set_93, LBB0_93-LJTI0_3
LJTI0_3:
	LONG $0xffffdccd  // .long L0_3_set_98
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffdccd  // .long L0_3_set_98
	LONG $0xffffdce8  // .long L0_3_set_100
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffdca4  // .long L0_3_set_95
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffdc84  // .long L0_3_set_93
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffe12e  // .long L0_3_set_152
	LONG $0xffffdc84  // .long L0_3_set_93
	  // .p2align 2, 0x00
_MASK_USE_NUMBER:
	LONG $0x00000002  // .long 2

TEXT Â·__skip_array(SB), NOSPLIT | NOFRAME, $0 - 40
	NO_LOCAL_POINTERS

_entry:
	MOVQ (TLS), R14
	LEAQ -160(SP), R12
	CMPQ R12, 16(R14)
	JBE  _stack_grow

_skip_array:
	MOVQ s+0(FP), DI
	MOVQ p+8(FP), SI
	MOVQ m+16(FP), DX
	MOVQ flags+24(FP), CX
	MOVQ Â·_subr__skip_array(SB), R9
	LONG $0x05158d4c; WORD $0x0000; BYTE $0x00  // leaq         $5(%rip), %r10
	WORD $0x5241  // pushq        %r10
	JMP R9
	MOVQ AX, ret+32(FP)
	RET

_stack_grow:
	CALL runtimeÂ·morestack_noctxt<>(SB)
	JMP  _entry
