// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

package avx

import (
	`github.com/bytedance/sonic/loader`
)

const (
    _entry__f32toa = 31424
    _entry__f64toa = 160
    _entry__format_significand = 36112
    _entry__format_integer = 3424
    _entry__get_by_path = 26032
    _entry__fsm_exec = 18416
    _entry__advance_string = 14720
    _entry__advance_string_default = 37632
    _entry__do_skip_number = 20960
    _entry__skip_one_fast = 22480
    _entry__html_escape = 9488
    _entry__i64toa = 3856
    _entry__u64toa = 3968
    _entry__lspace = 16
    _entry__quote = 5248
    _entry__skip_array = 18368
    _entry__skip_number = 22064
    _entry__skip_object = 20592
    _entry__skip_one = 22240
    _entry__unquote = 7040
    _entry__validate_one = 22304
    _entry__validate_utf8 = 30160
    _entry__validate_utf8_fast = 30832
    _entry__value = 12768
    _entry__vnumber = 15984
    _entry__atof_eisel_lemire64 = 10768
    _entry__atof_native = 12160
    _entry__decimal_to_f64 = 11168
    _entry__left_shift = 36592
    _entry__right_shift = 37120
    _entry__vsigned = 17648
    _entry__vstring = 14544
    _entry__vunsigned = 18016
)

const (
    _stack__f32toa = 56
    _stack__f64toa = 80
    _stack__format_significand = 24
    _stack__format_integer = 16
    _stack__get_by_path = 296
    _stack__fsm_exec = 160
    _stack__advance_string = 56
    _stack__advance_string_default = 56
    _stack__do_skip_number = 40
    _stack__skip_one_fast = 176
    _stack__html_escape = 64
    _stack__i64toa = 16
    _stack__u64toa = 8
    _stack__lspace = 8
    _stack__quote = 80
    _stack__skip_array = 168
    _stack__skip_number = 96
    _stack__skip_object = 168
    _stack__skip_one = 168
    _stack__unquote = 80
    _stack__validate_one = 168
    _stack__validate_utf8 = 48
    _stack__validate_utf8_fast = 24
    _stack__value = 344
    _stack__vnumber = 256
    _stack__atof_eisel_lemire64 = 40
    _stack__atof_native = 136
    _stack__decimal_to_f64 = 80
    _stack__left_shift = 24
    _stack__right_shift = 16
    _stack__vsigned = 16
    _stack__vstring = 112
    _stack__vunsigned = 16
)

const (
    _size__f32toa = 3696
    _size__f64toa = 3264
    _size__format_significand = 480
    _size__format_integer = 432
    _size__get_by_path = 4128
    _size__fsm_exec = 1640
    _size__advance_string = 1216
    _size__advance_string_default = 960
    _size__do_skip_number = 900
    _size__skip_one_fast = 3032
    _size__html_escape = 1280
    _size__i64toa = 48
    _size__u64toa = 1232
    _size__lspace = 112
    _size__quote = 1776
    _size__skip_array = 48
    _size__skip_number = 160
    _size__skip_object = 48
    _size__skip_one = 48
    _size__unquote = 2384
    _size__validate_one = 48
    _size__validate_utf8 = 672
    _size__validate_utf8_fast = 560
    _size__value = 1260
    _size__vnumber = 1664
    _size__atof_eisel_lemire64 = 400
    _size__atof_native = 608
    _size__decimal_to_f64 = 992
    _size__left_shift = 528
    _size__right_shift = 480
    _size__vsigned = 368
    _size__vstring = 128
    _size__vunsigned = 336
)

var (
    _pcsp__f32toa = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {3642, 56},
        {3646, 48},
        {3647, 40},
        {3649, 32},
        {3651, 24},
        {3653, 16},
        {3655, 8},
        {3659, 0},
        {3681, 56},
    }
    _pcsp__f64toa = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {3141, 56},
        {3145, 48},
        {3146, 40},
        {3148, 32},
        {3150, 24},
        {3152, 16},
        {3154, 8},
        {3158, 0},
        {3250, 56},
    }
    _pcsp__format_significand = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {468, 24},
        {469, 16},
        {471, 8},
        {473, 0},
    }
    _pcsp__format_integer = [][2]uint32{
        {1, 0},
        {4, 8},
        {412, 16},
        {413, 8},
        {414, 0},
        {423, 16},
        {424, 8},
        {426, 0},
    }
    _pcsp__get_by_path = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {4036, 120},
        {4040, 48},
        {4041, 40},
        {4043, 32},
        {4045, 24},
        {4047, 16},
        {4049, 8},
        {4050, 0},
        {4128, 120},
    }
    _pcsp__fsm_exec = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1287, 104},
        {1291, 48},
        {1292, 40},
        {1294, 32},
        {1296, 24},
        {1298, 16},
        {1300, 8},
        {1301, 0},
        {1640, 104},
    }
    _pcsp__advance_string = [][2]uint32{
        {14, 0},
        {18, 8},
        {20, 16},
        {22, 24},
        {24, 32},
        {26, 40},
        {27, 48},
        {532, 56},
        {536, 48},
        {537, 40},
        {539, 32},
        {541, 24},
        {543, 16},
        {545, 8},
        {546, 0},
        {1215, 56},
    }
    _pcsp__advance_string_default = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {411, 56},
        {415, 48},
        {416, 40},
        {418, 32},
        {420, 24},
        {422, 16},
        {424, 8},
        {425, 0},
        {956, 56},
    }
    _pcsp__do_skip_number = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {752, 40},
        {753, 32},
        {755, 24},
        {757, 16},
        {759, 8},
        {760, 0},
        {900, 40},
    }
    _pcsp__skip_one_fast = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {614, 176},
        {615, 168},
        {617, 160},
        {619, 152},
        {621, 144},
        {623, 136},
        {627, 128},
        {3032, 176},
    }
    _pcsp__html_escape = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1265, 64},
        {1269, 48},
        {1270, 40},
        {1272, 32},
        {1274, 24},
        {1276, 16},
        {1278, 8},
        {1280, 0},
    }
    _pcsp__i64toa = [][2]uint32{
        {14, 0},
        {36, 8},
        {38, 0},
    }
    _pcsp__u64toa = [][2]uint32{
        {1, 0},
        {164, 8},
        {165, 0},
        {462, 8},
        {463, 0},
        {758, 8},
        {759, 0},
        {1223, 8},
        {1225, 0},
    }
    _pcsp__lspace = [][2]uint32{
        {1, 0},
        {85, 8},
        {87, 0},
    }
    _pcsp__quote = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1727, 80},
        {1731, 48},
        {1732, 40},
        {1734, 32},
        {1736, 24},
        {1738, 16},
        {1740, 8},
        {1741, 0},
        {1776, 80},
    }
    _pcsp__skip_array = [][2]uint32{
        {1, 0},
        {28, 8},
        {34, 0},
    }
    _pcsp__skip_number = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {107, 56},
        {111, 48},
        {112, 40},
        {114, 32},
        {116, 24},
        {118, 16},
        {120, 8},
        {121, 0},
        {145, 56},
    }
    _pcsp__skip_object = [][2]uint32{
        {1, 0},
        {28, 8},
        {34, 0},
    }
    _pcsp__skip_one = [][2]uint32{
        {1, 0},
        {28, 8},
        {34, 0},
    }
    _pcsp__unquote = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {1749, 80},
        {1753, 48},
        {1754, 40},
        {1756, 32},
        {1758, 24},
        {1760, 16},
        {1762, 8},
        {1763, 0},
        {2381, 80},
    }
    _pcsp__validate_one = [][2]uint32{
        {1, 0},
        {33, 8},
        {39, 0},
    }
    _pcsp__validate_utf8 = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {11, 40},
        {623, 48},
        {627, 40},
        {628, 32},
        {630, 24},
        {632, 16},
        {634, 8},
        {635, 0},
        {666, 48},
    }
    _pcsp__validate_utf8_fast = [][2]uint32{
        {1, 0},
        {4, 8},
        {5, 16},
        {247, 24},
        {251, 16},
        {252, 8},
        {253, 0},
        {527, 24},
        {531, 16},
        {532, 8},
        {534, 0},
    }
    _pcsp__value = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {441, 88},
        {445, 48},
        {446, 40},
        {448, 32},
        {450, 24},
        {452, 16},
        {454, 8},
        {455, 0},
        {1260, 88},
    }
    _pcsp__vnumber = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {150, 120},
        {154, 48},
        {155, 40},
        {157, 32},
        {159, 24},
        {161, 16},
        {163, 8},
        {164, 0},
        {1650, 120},
    }
    _pcsp__atof_eisel_lemire64 = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {316, 40},
        {317, 32},
        {319, 24},
        {321, 16},
        {323, 8},
        {324, 0},
        {388, 40},
    }
    _pcsp__atof_native = [][2]uint32{
        {1, 0},
        {4, 8},
        {592, 56},
        {596, 8},
        {598, 0},
    }
    _pcsp__decimal_to_f64 = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {12, 40},
        {13, 48},
        {951, 56},
        {955, 48},
        {956, 40},
        {958, 32},
        {960, 24},
        {962, 16},
        {964, 8},
        {965, 0},
        {977, 56},
    }
    _pcsp__left_shift = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {395, 24},
        {396, 16},
        {398, 8},
        {399, 0},
        {407, 24},
        {408, 16},
        {410, 8},
        {411, 0},
        {523, 24},
    }
    _pcsp__right_shift = [][2]uint32{
        {1, 0},
        {4, 8},
        {452, 16},
        {453, 8},
        {454, 0},
        {462, 16},
        {463, 8},
        {464, 0},
        {472, 16},
        {473, 8},
        {475, 0},
    }
    _pcsp__vsigned = [][2]uint32{
        {1, 0},
        {4, 8},
        {113, 16},
        {114, 8},
        {115, 0},
        {126, 16},
        {127, 8},
        {128, 0},
        {278, 16},
        {279, 8},
        {280, 0},
        {284, 16},
        {285, 8},
        {286, 0},
        {340, 16},
        {341, 8},
        {342, 0},
        {353, 16},
        {354, 8},
        {356, 0},
    }
    _pcsp__vstring = [][2]uint32{
        {1, 0},
        {4, 8},
        {6, 16},
        {8, 24},
        {10, 32},
        {11, 40},
        {105, 56},
        {109, 40},
        {110, 32},
        {112, 24},
        {114, 16},
        {116, 8},
        {118, 0},
    }
    _pcsp__vunsigned = [][2]uint32{
        {1, 0},
        {4, 8},
        {72, 16},
        {73, 8},
        {74, 0},
        {85, 16},
        {86, 8},
        {87, 0},
        {110, 16},
        {111, 8},
        {112, 0},
        {264, 16},
        {265, 8},
        {266, 0},
        {317, 16},
        {318, 8},
        {319, 0},
        {327, 16},
        {328, 8},
        {330, 0},
    }
)

var Funcs = []loader.CFunc{
    {"__native_entry__", 0, 67, 0, nil},
    {"_f32toa", _entry__f32toa, _size__f32toa, _stack__f32toa, _pcsp__f32toa},
    {"_f64toa", _entry__f64toa, _size__f64toa, _stack__f64toa, _pcsp__f64toa},
    {"_format_significand", _entry__format_significand, _size__format_significand, _stack__format_significand, _pcsp__format_significand},
    {"_format_integer", _entry__format_integer, _size__format_integer, _stack__format_integer, _pcsp__format_integer},
    {"_get_by_path", _entry__get_by_path, _size__get_by_path, _stack__get_by_path, _pcsp__get_by_path},
    {"_fsm_exec", _entry__fsm_exec, _size__fsm_exec, _stack__fsm_exec, _pcsp__fsm_exec},
    {"_advance_string", _entry__advance_string, _size__advance_string, _stack__advance_string, _pcsp__advance_string},
    {"_advance_string_default", _entry__advance_string_default, _size__advance_string_default, _stack__advance_string_default, _pcsp__advance_string_default},
    {"_do_skip_number", _entry__do_skip_number, _size__do_skip_number, _stack__do_skip_number, _pcsp__do_skip_number},
    {"_skip_one_fast", _entry__skip_one_fast, _size__skip_one_fast, _stack__skip_one_fast, _pcsp__skip_one_fast},
    {"_html_escape", _entry__html_escape, _size__html_escape, _stack__html_escape, _pcsp__html_escape},
    {"_i64toa", _entry__i64toa, _size__i64toa, _stack__i64toa, _pcsp__i64toa},
    {"_u64toa", _entry__u64toa, _size__u64toa, _stack__u64toa, _pcsp__u64toa},
    {"_lspace", _entry__lspace, _size__lspace, _stack__lspace, _pcsp__lspace},
    {"_quote", _entry__quote, _size__quote, _stack__quote, _pcsp__quote},
    {"_skip_array", _entry__skip_array, _size__skip_array, _stack__skip_array, _pcsp__skip_array},
    {"_skip_number", _entry__skip_number, _size__skip_number, _stack__skip_number, _pcsp__skip_number},
    {"_skip_object", _entry__skip_object, _size__skip_object, _stack__skip_object, _pcsp__skip_object},
    {"_skip_one", _entry__skip_one, _size__skip_one, _stack__skip_one, _pcsp__skip_one},
    {"_unquote", _entry__unquote, _size__unquote, _stack__unquote, _pcsp__unquote},
    {"_validate_one", _entry__validate_one, _size__validate_one, _stack__validate_one, _pcsp__validate_one},
    {"_validate_utf8", _entry__validate_utf8, _size__validate_utf8, _stack__validate_utf8, _pcsp__validate_utf8},
    {"_validate_utf8_fast", _entry__validate_utf8_fast, _size__validate_utf8_fast, _stack__validate_utf8_fast, _pcsp__validate_utf8_fast},
    {"_value", _entry__value, _size__value, _stack__value, _pcsp__value},
    {"_vnumber", _entry__vnumber, _size__vnumber, _stack__vnumber, _pcsp__vnumber},
    {"_atof_eisel_lemire64", _entry__atof_eisel_lemire64, _size__atof_eisel_lemire64, _stack__atof_eisel_lemire64, _pcsp__atof_eisel_lemire64},
    {"_atof_native", _entry__atof_native, _size__atof_native, _stack__atof_native, _pcsp__atof_native},
    {"_decimal_to_f64", _entry__decimal_to_f64, _size__decimal_to_f64, _stack__decimal_to_f64, _pcsp__decimal_to_f64},
    {"_left_shift", _entry__left_shift, _size__left_shift, _stack__left_shift, _pcsp__left_shift},
    {"_right_shift", _entry__right_shift, _size__right_shift, _stack__right_shift, _pcsp__right_shift},
    {"_vsigned", _entry__vsigned, _size__vsigned, _stack__vsigned, _pcsp__vsigned},
    {"_vstring", _entry__vstring, _size__vstring, _stack__vstring, _pcsp__vstring},
    {"_vunsigned", _entry__vunsigned, _size__vunsigned, _stack__vunsigned, _pcsp__vunsigned},
}
