// +build !noasm !appengine
// Code generated by asm2asm, DO NOT EDIT.

#include "go_asm.h"
#include "funcdata.h"
#include "textflag.h"

TEXT 路__vsigned_entry__(SB), $16
	NO_LOCAL_POINTERS
	WORD $0x10000000  // adr x0, . $0(%rip)
	WORD $0x910083ff  // add sp, sp, #32
	WORD $0xd65f03c0  // ret
	  // .p2align 2, 0x00
_vsigned:
	MOVD.W R30, -32(RSP)	// 	WORD $0xf81e0ffe  // str	x30, [sp, #-32]!
	WORD $0xf9400028  // ldr	x8, [x1]
	WORD $0xa940240a  // ldp	x10, x9, [x0]
	WORD $0x5280012b  // mov	w11, #9
	WORD $0xa900fc5f  // stp	xzr, xzr, [x2, #8]
	WORD $0xf900004b  // str	x11, [x2]
	WORD $0xf940002b  // ldr	x11, [x1]
	WORD $0xf9000c4b  // str	x11, [x2, #24]
	WORD $0xeb09011f  // cmp	x8, x9
	WORD $0x540006c2  // b.hs	LBB0_13 $216(%rip)
	WORD $0x3868694c  // ldrb	w12, [x10, x8]
	WORD $0x7100b59f  // cmp	w12, #45
	WORD $0x54000701  // b.ne	LBB0_14 $224(%rip)
	WORD $0x91000508  // add	x8, x8, #1
	WORD $0xeb09011f  // cmp	x8, x9
	WORD $0x54000602  // b.hs	LBB0_13 $192(%rip)
	WORD $0x3868694c  // ldrb	w12, [x10, x8]
	WORD $0x9280000b  // mov	x11, #-1
	WORD $0x5100e98d  // sub	w13, w12, #58
	WORD $0x31002dbf  // cmn	w13, #11
	WORD $0x54000689  // b.ls	LBB0_15 $208(%rip)
LBB0_4:
	WORD $0x7100c19f  // cmp	w12, #48
	WORD $0x540001c1  // b.ne	LBB0_7 $56(%rip)
	WORD $0x9100050c  // add	x12, x8, #1
	WORD $0xeb09011f  // cmp	x8, x9
	WORD $0x54000682  // b.hs	LBB0_16 $208(%rip)
	WORD $0x386c694d  // ldrb	w13, [x10, x12]
	WORD $0x5100b9ad  // sub	w13, w13, #46
	WORD $0x7100ddbf  // cmp	w13, #55
	WORD $0x5280002e  // mov	w14, #1
	WORD $0x9acd21cd  // lsl	x13, x14, x13
	WORD $0xb20903ee  // mov	x14, #36028797027352576
	WORD $0xf280002e  // movk	x14, #1
	WORD $0x8a0e01ad  // and	x13, x13, x14
	WORD $0xfa4099a4  // ccmp	x13, #0, #4, ls
	WORD $0x54000540  // b.eq	LBB0_16 $168(%rip)
LBB0_7:
	WORD $0xd280000c  // mov	x12, #0
	WORD $0xeb09011f  // cmp	x8, x9
	WORD $0x9a89810d  // csel	x13, x8, x9, hi
	WORD $0x5280014e  // mov	w14, #10
LBB0_8:
	WORD $0xeb0801bf  // cmp	x13, x8
	WORD $0x540006c0  // b.eq	LBB0_23 $216(%rip)
	WORD $0x38a8694f  // ldrsb	x15, [x10, x8]
	WORD $0x5100c1f0  // sub	w16, w15, #48
	WORD $0x12001e10  // and	w16, w16, #0xff
	WORD $0x7100261f  // cmp	w16, #9
	WORD $0x54000448  // b.hi	LBB0_17 $136(%rip)
	WORD $0x9b4e7d90  // smulh	x16, x12, x14
	WORD $0x8b0c098c  // add	x12, x12, x12, lsl #2
	WORD $0xd37ff98c  // lsl	x12, x12, #1
	WORD $0xeb8cfe1f  // cmp	x16, x12, asr #63
	WORD $0x540000c1  // b.ne	LBB0_12 $24(%rip)
	WORD $0x91000508  // add	x8, x8, #1
	WORD $0x5100c1ef  // sub	w15, w15, #48
	WORD $0x9b0b7def  // mul	x15, x15, x11
	WORD $0xab0f018c  // adds	x12, x12, x15
	WORD $0x54fffe07  // b.vc	LBB0_8 $-64(%rip)
LBB0_12:
	WORD $0xd1000508  // sub	x8, x8, #1
	WORD $0xf9000028  // str	x8, [x1]
	WORD $0x92800088  // mov	x8, #-5
	WORD $0xf9000048  // str	x8, [x2]
	WORD $0x910083ff  // add	sp, sp, #32
	WORD $0xd65f03c0  // ret
LBB0_13:
	WORD $0xf9000029  // str	x9, [x1]
	WORD $0x92800008  // mov	x8, #-1
	WORD $0xf9000048  // str	x8, [x2]
	WORD $0x910083ff  // add	sp, sp, #32
	WORD $0xd65f03c0  // ret
LBB0_14:
	WORD $0x5280002b  // mov	w11, #1
	WORD $0x5100e98d  // sub	w13, w12, #58
	WORD $0x31002dbf  // cmn	w13, #11
	WORD $0x54fff9c8  // b.hi	LBB0_4 $-200(%rip)
LBB0_15:
	WORD $0xf9000028  // str	x8, [x1]
	WORD $0x92800028  // mov	x8, #-2
	WORD $0xf9000048  // str	x8, [x2]
	WORD $0x910083ff  // add	sp, sp, #32
	WORD $0xd65f03c0  // ret
LBB0_16:
	WORD $0xf900002c  // str	x12, [x1]
	WORD $0x910083ff  // add	sp, sp, #32
	WORD $0xd65f03c0  // ret
LBB0_17:
	WORD $0xeb09011f  // cmp	x8, x9
	WORD $0x540001a2  // b.hs	LBB0_22 $52(%rip)
	WORD $0x38686949  // ldrb	w9, [x10, x8]
	WORD $0x7100b93f  // cmp	w9, #46
	WORD $0x540000a0  // b.eq	LBB0_21 $20(%rip)
	WORD $0x7101153f  // cmp	w9, #69
	WORD $0x54000060  // b.eq	LBB0_21 $12(%rip)
	WORD $0x7101953f  // cmp	w9, #101
	WORD $0x540000c1  // b.ne	LBB0_22 $24(%rip)
LBB0_21:
	WORD $0xf9000028  // str	x8, [x1]
	WORD $0x928000a8  // mov	x8, #-6
	WORD $0xf9000048  // str	x8, [x2]
	WORD $0x910083ff  // add	sp, sp, #32
	WORD $0xd65f03c0  // ret
LBB0_22:
	WORD $0xaa0803ed  // mov	x13, x8
LBB0_23:
	WORD $0xf900002d  // str	x13, [x1]
	WORD $0xf900084c  // str	x12, [x2, #16]
	WORD $0x910083ff  // add	sp, sp, #32
	WORD $0xd65f03c0  // ret
	  // .p2align 2, 0x00
_MASK_USE_NUMBER:
	WORD $0x00000002  // .long 2

TEXT 路__vsigned(SB), $0-24
	NO_LOCAL_POINTERS

_entry:
	MOVD 16(g), R16
	SUB $64, RSP, R17
	CMP  R16, R17
	BLS  _stack_grow

_vsigned:
	MOVD s+0(FP), R0
	MOVD p+8(FP), R1
	MOVD v+16(FP), R2
	CALL 路__vsigned_entry__+24(SB)  // _vsigned
	RET

_stack_grow:
	MOVD R30, R3
	CALL runtime路morestack_noctxt<>(SB)
	JMP  _entry
