
//go:build race
// +build race

/*
 * Copyright 2024 ByteDance Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package issue_test

import (
    `github.com/bytedance/sonic`
    `testing`
)

type MyFoo struct {
    List []*int64 
}

func TestRaceEncode(t *testing.T) {
    f := &MyFoo{
        List: []*int64{new(int64), new(int64)},
    }

    go func() {
        f.List = []*int64{new(int64), new(int64)}
    }()

    go func() {
        sonic.Marshal(f)
    }()

    // encoding/json always detect data race when enabling `-race` here
    // go func() {
    //     json.Marshal(f)
    // }()
}
